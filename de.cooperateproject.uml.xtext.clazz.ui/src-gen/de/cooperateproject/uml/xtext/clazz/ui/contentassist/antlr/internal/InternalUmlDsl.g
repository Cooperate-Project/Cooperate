/*
 * generated by Xtext
 */
grammar InternalUmlDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.cooperateproject.uml.xtext.clazz.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.cooperateproject.uml.xtext.clazz.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.cooperateproject.uml.xtext.clazz.services.UmlDslGrammarAccess;

}

@parser::members {
 
 	private UmlDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(UmlDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleClassDiagram
entryRuleClassDiagram 
:
{ before(grammarAccess.getClassDiagramRule()); }
	 ruleClassDiagram
{ after(grammarAccess.getClassDiagramRule()); } 
	 EOF 
;

// Rule ClassDiagram
ruleClassDiagram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassDiagramAccess().getGroup()); }
(rule__ClassDiagram__Group__0)
{ after(grammarAccess.getClassDiagramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElement
entryRuleElement 
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementAccess().getAlternatives()); }
(rule__Element__Alternatives)
{ after(grammarAccess.getElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataType
entryRuleDataType 
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeAccess().getGroup()); }
(rule__DataType__Group__0)
{ after(grammarAccess.getDataTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleClassDef
entryRuleClassDef 
:
{ before(grammarAccess.getClassDefRule()); }
	 ruleClassDef
{ after(grammarAccess.getClassDefRule()); } 
	 EOF 
;

// Rule ClassDef
ruleClassDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassDefAccess().getGroup()); }
(rule__ClassDef__Group__0)
{ after(grammarAccess.getClassDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassName
entryRuleClassName 
:
{ before(grammarAccess.getClassNameRule()); }
	 ruleClassName
{ after(grammarAccess.getClassNameRule()); } 
	 EOF 
;

// Rule ClassName
ruleClassName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassNameAccess().getNameParserRuleCall()); }
	ruleName
{ after(grammarAccess.getClassNameAccess().getNameParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleName
entryRuleName 
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameAccess().getAlternatives()); }
(rule__Name__Alternatives)
{ after(grammarAccess.getNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass
entryRuleClass 
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAccess().getGroup()); }
(rule__Class__Group__0)
{ after(grammarAccess.getClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInheritance
entryRuleInheritance 
:
{ before(grammarAccess.getInheritanceRule()); }
	 ruleInheritance
{ after(grammarAccess.getInheritanceRule()); } 
	 EOF 
;

// Rule Inheritance
ruleInheritance
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInheritanceAccess().getAlternatives()); }
(rule__Inheritance__Alternatives)
{ after(grammarAccess.getInheritanceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMember
entryRuleMember 
:
{ before(grammarAccess.getMemberRule()); }
	 ruleMember
{ after(grammarAccess.getMemberRule()); } 
	 EOF 
;

// Rule Member
ruleMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberAccess().getAlternatives()); }
(rule__Member__Alternatives)
{ after(grammarAccess.getMemberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethode
entryRuleMethode 
:
{ before(grammarAccess.getMethodeRule()); }
	 ruleMethode
{ after(grammarAccess.getMethodeRule()); } 
	 EOF 
;

// Rule Methode
ruleMethode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodeAccess().getGroup()); }
(rule__Methode__Group__0)
{ after(grammarAccess.getMethodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConnector
entryRuleConnector 
:
{ before(grammarAccess.getConnectorRule()); }
	 ruleConnector
{ after(grammarAccess.getConnectorRule()); } 
	 EOF 
;

// Rule Connector
ruleConnector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConnectorAccess().getAlternatives()); }
(rule__Connector__Alternatives)
{ after(grammarAccess.getConnectorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGeneralization
entryRuleGeneralization 
:
{ before(grammarAccess.getGeneralizationRule()); }
	 ruleGeneralization
{ after(grammarAccess.getGeneralizationRule()); } 
	 EOF 
;

// Rule Generalization
ruleGeneralization
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGeneralizationAccess().getGroup()); }
(rule__Generalization__Group__0)
{ after(grammarAccess.getGeneralizationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssociation
entryRuleAssociation 
:
{ before(grammarAccess.getAssociationRule()); }
	 ruleAssociation
{ after(grammarAccess.getAssociationRule()); } 
	 EOF 
;

// Rule Association
ruleAssociation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssociationAccess().getGroup()); }
(rule__Association__Group__0)
{ after(grammarAccess.getAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssociationEnd
entryRuleAssociationEnd 
:
{ before(grammarAccess.getAssociationEndRule()); }
	 ruleAssociationEnd
{ after(grammarAccess.getAssociationEndRule()); } 
	 EOF 
;

// Rule AssociationEnd
ruleAssociationEnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssociationEndAccess().getTypeAssignment()); }
(rule__AssociationEnd__TypeAssignment)
{ after(grammarAccess.getAssociationEndAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConnectorLabel
entryRuleConnectorLabel 
:
{ before(grammarAccess.getConnectorLabelRule()); }
	 ruleConnectorLabel
{ after(grammarAccess.getConnectorLabelRule()); } 
	 EOF 
;

// Rule ConnectorLabel
ruleConnectorLabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConnectorLabelAccess().getNameAssignment()); }
(rule__ConnectorLabel__NameAssignment)
{ after(grammarAccess.getConnectorLabelAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConnectorCardinalitiy
entryRuleConnectorCardinalitiy 
:
{ before(grammarAccess.getConnectorCardinalitiyRule()); }
	 ruleConnectorCardinalitiy
{ after(grammarAccess.getConnectorCardinalitiyRule()); } 
	 EOF 
;

// Rule ConnectorCardinalitiy
ruleConnectorCardinalitiy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConnectorCardinalitiyAccess().getGroup()); }
(rule__ConnectorCardinalitiy__Group__0)
{ after(grammarAccess.getConnectorCardinalitiyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCardinality
entryRuleCardinality 
:
{ before(grammarAccess.getCardinalityRule()); }
	 ruleCardinality
{ after(grammarAccess.getCardinalityRule()); } 
	 EOF 
;

// Rule Cardinality
ruleCardinality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCardinalityAccess().getAlternatives()); }
(rule__Cardinality__Alternatives)
{ after(grammarAccess.getCardinalityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Element__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getClassDefParserRuleCall_0()); }
	ruleClassDef
{ after(grammarAccess.getElementAccess().getClassDefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getElementAccess().getClassParserRuleCall_1()); }
	ruleClass
{ after(grammarAccess.getElementAccess().getClassParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getElementAccess().getDataTypeParserRuleCall_2()); }
	ruleDataType
{ after(grammarAccess.getElementAccess().getDataTypeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getElementAccess().getConnectorParserRuleCall_3()); }
	ruleConnector
{ after(grammarAccess.getElementAccess().getConnectorParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDef__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getClassKeyword_0_0()); }

	'class' 

{ after(grammarAccess.getClassDefAccess().getClassKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getClassDefAccess().getInterfaceKeyword_0_1()); }

	'interface' 

{ after(grammarAccess.getClassDefAccess().getInterfaceKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getNameAssignment_0()); }
(rule__Name__NameAssignment_0)
{ after(grammarAccess.getNameAccess().getNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getNameAccess().getGroup_1()); }
(rule__Name__Group_1__0)
{ after(grammarAccess.getNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name__LongnameAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getLongnameSTRINGTerminalRuleCall_1_0_0_0()); }
	RULE_STRING
{ after(grammarAccess.getNameAccess().getLongnameSTRINGTerminalRuleCall_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getNameAccess().getLongnameIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID
{ after(grammarAccess.getNameAccess().getLongnameIDTerminalRuleCall_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInheritanceAccess().getGroup_0()); }
(rule__Inheritance__Group_0__0)
{ after(grammarAccess.getInheritanceAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getInheritanceAccess().getGroup_1()); }
(rule__Inheritance__Group_1__0)
{ after(grammarAccess.getInheritanceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getAttributeParserRuleCall_0()); }
	ruleAttribute
{ after(grammarAccess.getMemberAccess().getAttributeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMemberAccess().getMethodeParserRuleCall_1()); }
	ruleMethode
{ after(grammarAccess.getMemberAccess().getMethodeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getGeneralizationParserRuleCall_0()); }
	ruleGeneralization
{ after(grammarAccess.getConnectorAccess().getGeneralizationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConnectorAccess().getAssociationParserRuleCall_1()); }
	ruleAssociation
{ after(grammarAccess.getConnectorAccess().getAssociationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorCardinalitiy__Alternatives_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorCardinalitiyAccess().getLessThanSignKeyword_4_2_0()); }

	'<' 

{ after(grammarAccess.getConnectorCardinalitiyAccess().getLessThanSignKeyword_4_2_0()); }
)

    |(
{ before(grammarAccess.getConnectorCardinalitiyAccess().getGreaterThanSignKeyword_4_2_1()); }

	'>' 

{ after(grammarAccess.getConnectorCardinalitiyAccess().getGreaterThanSignKeyword_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getAsteriskKeyword_0()); }

	'*' 

{ after(grammarAccess.getCardinalityAccess().getAsteriskKeyword_0()); }
)

    |(
{ before(grammarAccess.getCardinalityAccess().getGroup_1()); }
(rule__Cardinality__Group_1__0)
{ after(grammarAccess.getCardinalityAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Alternatives_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getAsteriskKeyword_1_2_0()); }

	'*' 

{ after(grammarAccess.getCardinalityAccess().getAsteriskKeyword_1_2_0()); }
)

    |(
{ before(grammarAccess.getCardinalityAccess().getINTTerminalRuleCall_1_2_1()); }
	RULE_INT
{ after(grammarAccess.getCardinalityAccess().getINTTerminalRuleCall_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ClassDiagram__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDiagram__Group__0__Impl
	rule__ClassDiagram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDiagram__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDiagramAccess().getClassDiagramAction_0()); }
(

)
{ after(grammarAccess.getClassDiagramAccess().getClassDiagramAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDiagram__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDiagram__Group__1__Impl
	rule__ClassDiagram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDiagram__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDiagramAccess().getStartclassKeyword_1()); }

	'@startclass' 

{ after(grammarAccess.getClassDiagramAccess().getStartclassKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDiagram__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDiagram__Group__2__Impl
	rule__ClassDiagram__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDiagram__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDiagramAccess().getElementsAssignment_2()); }
(rule__ClassDiagram__ElementsAssignment_2)*
{ after(grammarAccess.getClassDiagramAccess().getElementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDiagram__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDiagram__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDiagram__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDiagramAccess().getEndclassKeyword_3()); }

	'@endclass' 

{ after(grammarAccess.getClassDiagramAccess().getEndclassKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }

	'datatype' 

{ after(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
(rule__DataType__NameAssignment_1)
{ after(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDef__Group__0__Impl
	rule__ClassDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getAlternatives_0()); }
(rule__ClassDef__Alternatives_0)
{ after(grammarAccess.getClassDefAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDef__Group__1__Impl
	rule__ClassDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getClassDefAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDef__Group__2__Impl
	rule__ClassDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getClassesAssignment_2()); }
(rule__ClassDef__ClassesAssignment_2)
{ after(grammarAccess.getClassDefAccess().getClassesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDef__Group__3__Impl
	rule__ClassDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getGroup_3()); }
(rule__ClassDef__Group_3__0)*
{ after(grammarAccess.getClassDefAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getClassDefAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ClassDef__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDef__Group_3__0__Impl
	rule__ClassDef__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getClassDefAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDef__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDef__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getClassesAssignment_3_1()); }
(rule__ClassDef__ClassesAssignment_3_1)
{ after(grammarAccess.getClassDefAccess().getClassesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Name__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group_1__0__Impl
	rule__Name__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getLongnameAssignment_1_0()); }
(rule__Name__LongnameAssignment_1_0)
{ after(grammarAccess.getNameAccess().getLongnameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group_1__1__Impl
	rule__Name__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getAsKeyword_1_1()); }

	' as ' 

{ after(grammarAccess.getNameAccess().getAsKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getNameAssignment_1_2()); }
(rule__Name__NameAssignment_1_2)
{ after(grammarAccess.getNameAccess().getNameAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Class__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getAbstractKeyword_0()); }
(
	'abstract' 
)?
{ after(grammarAccess.getClassAccess().getAbstractKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getTypeAssignment_1()); }
(rule__Class__TypeAssignment_1)
{ after(grammarAccess.getClassAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__2__Impl
	rule__Class__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getInheritanceAssignment_2()); }
(rule__Class__InheritanceAssignment_2)?
{ after(grammarAccess.getClassAccess().getInheritanceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__3__Impl
	rule__Class__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__4__Impl
	rule__Class__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getMembersAssignment_4()); }
(rule__Class__MembersAssignment_4)*
{ after(grammarAccess.getClassAccess().getMembersAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Inheritance__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Inheritance__Group_0__0__Impl
	rule__Inheritance__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInheritanceAccess().getExtendsKeyword_0_0()); }

	'extends' 

{ after(grammarAccess.getInheritanceAccess().getExtendsKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Inheritance__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Inheritance__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInheritanceAccess().getTypeAssignment_0_1()); }
(rule__Inheritance__TypeAssignment_0_1)
{ after(grammarAccess.getInheritanceAccess().getTypeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Inheritance__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Inheritance__Group_1__0__Impl
	rule__Inheritance__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInheritanceAccess().getImplementsKeyword_1_0()); }

	'implements' 

{ after(grammarAccess.getInheritanceAccess().getImplementsKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Inheritance__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Inheritance__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInheritanceAccess().getTypeAssignment_1_1()); }
(rule__Inheritance__TypeAssignment_1_1)
{ after(grammarAccess.getInheritanceAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getStaticKeyword_0()); }
(
	'static' 
)?
{ after(grammarAccess.getAttributeAccess().getStaticKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getFinalKeyword_1()); }
(
	'final' 
)?
{ after(grammarAccess.getAttributeAccess().getFinalKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_2()); }
(rule__Attribute__NameAssignment_2)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getAttributeAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeAssignment_4()); }
(rule__Attribute__TypeAssignment_4)
{ after(grammarAccess.getAttributeAccess().getTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Methode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Methode__Group__0__Impl
	rule__Methode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getAbstractKeyword_0()); }
(
	'abstract' 
)?
{ after(grammarAccess.getMethodeAccess().getAbstractKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Methode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Methode__Group__1__Impl
	rule__Methode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getStaticKeyword_1()); }
(
	'static' 
)?
{ after(grammarAccess.getMethodeAccess().getStaticKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Methode__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Methode__Group__2__Impl
	rule__Methode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getFinalKeyword_2()); }
(
	'final' 
)?
{ after(grammarAccess.getMethodeAccess().getFinalKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Methode__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Methode__Group__3__Impl
	rule__Methode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getNameAssignment_3()); }
(rule__Methode__NameAssignment_3)
{ after(grammarAccess.getMethodeAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Methode__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Methode__Group__4__Impl
	rule__Methode__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getMethodeAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Methode__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Methode__Group__5__Impl
	rule__Methode__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getGroup_5()); }
(rule__Methode__Group_5__0)*
{ after(grammarAccess.getMethodeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Methode__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Methode__Group__6__Impl
	rule__Methode__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getMethodeAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Methode__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Methode__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getGroup_7()); }
(rule__Methode__Group_7__0)?
{ after(grammarAccess.getMethodeAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Methode__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Methode__Group_5__0__Impl
	rule__Methode__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getAttributesAssignment_5_0()); }
(rule__Methode__AttributesAssignment_5_0)
{ after(grammarAccess.getMethodeAccess().getAttributesAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Methode__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Methode__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getGroup_5_1()); }
(rule__Methode__Group_5_1__0)*
{ after(grammarAccess.getMethodeAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Methode__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Methode__Group_5_1__0__Impl
	rule__Methode__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getMethodeAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Methode__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Methode__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getAttributesAssignment_5_1_1()); }
(rule__Methode__AttributesAssignment_5_1_1)
{ after(grammarAccess.getMethodeAccess().getAttributesAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Methode__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Methode__Group_7__0__Impl
	rule__Methode__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getColonKeyword_7_0()); }

	':' 

{ after(grammarAccess.getMethodeAccess().getColonKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Methode__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Methode__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getTypeAssignment_7_1()); }
(rule__Methode__TypeAssignment_7_1)
{ after(grammarAccess.getMethodeAccess().getTypeAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Generalization__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generalization__Group__0__Impl
	rule__Generalization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizationAccess().getLeftAssignment_0()); }
(rule__Generalization__LeftAssignment_0)
{ after(grammarAccess.getGeneralizationAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generalization__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generalization__Group__1__Impl
	rule__Generalization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizationAccess().getIsaKeyword_1()); }

	'isa' 

{ after(grammarAccess.getGeneralizationAccess().getIsaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generalization__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generalization__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizationAccess().getRightAssignment_2()); }
(rule__Generalization__RightAssignment_2)
{ after(grammarAccess.getGeneralizationAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Association__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__0__Impl
	rule__Association__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getLeftAssignment_0()); }
(rule__Association__LeftAssignment_0)
{ after(grammarAccess.getAssociationAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__1__Impl
	rule__Association__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getAssociationAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__2__Impl
	rule__Association__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getRightAssignment_2()); }
(rule__Association__RightAssignment_2)
{ after(grammarAccess.getAssociationAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getCardinalityAssignment_3()); }
(rule__Association__CardinalityAssignment_3)?
{ after(grammarAccess.getAssociationAccess().getCardinalityAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConnectorCardinalitiy__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectorCardinalitiy__Group__0__Impl
	rule__ConnectorCardinalitiy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorCardinalitiy__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorCardinalitiyAccess().getConnectorCardinalitiyAction_0()); }
(

)
{ after(grammarAccess.getConnectorCardinalitiyAccess().getConnectorCardinalitiyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorCardinalitiy__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectorCardinalitiy__Group__1__Impl
	rule__ConnectorCardinalitiy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorCardinalitiy__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorCardinalitiyAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getConnectorCardinalitiyAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorCardinalitiy__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectorCardinalitiy__Group__2__Impl
	rule__ConnectorCardinalitiy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorCardinalitiy__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorCardinalitiyAccess().getLeftAssignment_2()); }
(rule__ConnectorCardinalitiy__LeftAssignment_2)?
{ after(grammarAccess.getConnectorCardinalitiyAccess().getLeftAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorCardinalitiy__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectorCardinalitiy__Group__3__Impl
	rule__ConnectorCardinalitiy__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorCardinalitiy__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorCardinalitiyAccess().getGroup_3()); }
(rule__ConnectorCardinalitiy__Group_3__0)?
{ after(grammarAccess.getConnectorCardinalitiyAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorCardinalitiy__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectorCardinalitiy__Group__4__Impl
	rule__ConnectorCardinalitiy__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorCardinalitiy__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorCardinalitiyAccess().getGroup_4()); }
(rule__ConnectorCardinalitiy__Group_4__0)?
{ after(grammarAccess.getConnectorCardinalitiyAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorCardinalitiy__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectorCardinalitiy__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorCardinalitiy__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorCardinalitiyAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getConnectorCardinalitiyAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ConnectorCardinalitiy__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectorCardinalitiy__Group_3__0__Impl
	rule__ConnectorCardinalitiy__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorCardinalitiy__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorCardinalitiyAccess().getVerticalLineKeyword_3_0()); }

	'|' 

{ after(grammarAccess.getConnectorCardinalitiyAccess().getVerticalLineKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorCardinalitiy__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectorCardinalitiy__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorCardinalitiy__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorCardinalitiyAccess().getMiddleAssignment_3_1()); }
(rule__ConnectorCardinalitiy__MiddleAssignment_3_1)?
{ after(grammarAccess.getConnectorCardinalitiyAccess().getMiddleAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConnectorCardinalitiy__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectorCardinalitiy__Group_4__0__Impl
	rule__ConnectorCardinalitiy__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorCardinalitiy__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorCardinalitiyAccess().getVerticalLineKeyword_4_0()); }

	'|' 

{ after(grammarAccess.getConnectorCardinalitiyAccess().getVerticalLineKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorCardinalitiy__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectorCardinalitiy__Group_4__1__Impl
	rule__ConnectorCardinalitiy__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorCardinalitiy__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorCardinalitiyAccess().getRightAssignment_4_1()); }
(rule__ConnectorCardinalitiy__RightAssignment_4_1)?
{ after(grammarAccess.getConnectorCardinalitiyAccess().getRightAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorCardinalitiy__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectorCardinalitiy__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorCardinalitiy__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorCardinalitiyAccess().getAlternatives_4_2()); }
(rule__ConnectorCardinalitiy__Alternatives_4_2)?
{ after(grammarAccess.getConnectorCardinalitiyAccess().getAlternatives_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Cardinality__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_1__0__Impl
	rule__Cardinality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
{ after(grammarAccess.getCardinalityAccess().getINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cardinality__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_1__1__Impl
	rule__Cardinality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getFullStopFullStopKeyword_1_1()); }

	'..' 

{ after(grammarAccess.getCardinalityAccess().getFullStopFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cardinality__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getAlternatives_1_2()); }
(rule__Cardinality__Alternatives_1_2)
{ after(grammarAccess.getCardinalityAccess().getAlternatives_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__ClassDiagram__ElementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDiagramAccess().getElementsElementParserRuleCall_2_0()); }
	ruleElement{ after(grammarAccess.getClassDiagramAccess().getElementsElementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__ClassesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getClassesClassNameParserRuleCall_2_0()); }
	ruleClassName{ after(grammarAccess.getClassDefAccess().getClassesClassNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__ClassesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getClassesClassNameParserRuleCall_3_1_0()); }
	ruleClassName{ after(grammarAccess.getClassDefAccess().getClassesClassNameParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getNameAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name__LongnameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getLongnameAlternatives_1_0_0()); }
(rule__Name__LongnameAlternatives_1_0_0)
{ after(grammarAccess.getNameAccess().getLongnameAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name__NameAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getNameIDTerminalRuleCall_1_2_0()); }
	RULE_ID{ after(grammarAccess.getNameAccess().getNameIDTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getTypeClassNameCrossReference_1_0()); }
(
{ before(grammarAccess.getClassAccess().getTypeClassNameIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getTypeClassNameIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getClassAccess().getTypeClassNameCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__InheritanceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getInheritanceInheritanceParserRuleCall_2_0()); }
	ruleInheritance{ after(grammarAccess.getClassAccess().getInheritanceInheritanceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__MembersAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getMembersMemberParserRuleCall_4_0()); }
	ruleMember{ after(grammarAccess.getClassAccess().getMembersMemberParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__TypeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInheritanceAccess().getTypeClassNameCrossReference_0_1_0()); }
(
{ before(grammarAccess.getInheritanceAccess().getTypeClassNameIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getInheritanceAccess().getTypeClassNameIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getInheritanceAccess().getTypeClassNameCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInheritanceAccess().getTypeClassNameCrossReference_1_1_0()); }
(
{ before(grammarAccess.getInheritanceAccess().getTypeClassNameIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getInheritanceAccess().getTypeClassNameIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getInheritanceAccess().getTypeClassNameCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeTypeCrossReference_4_0()); }
(
{ before(grammarAccess.getAttributeAccess().getTypeTypeIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getTypeTypeIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getAttributeAccess().getTypeTypeCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getMethodeAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__AttributesAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getAttributesAttributeParserRuleCall_5_0_0()); }
	ruleAttribute{ after(grammarAccess.getMethodeAccess().getAttributesAttributeParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__AttributesAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getAttributesAttributeParserRuleCall_5_1_1_0()); }
	ruleAttribute{ after(grammarAccess.getMethodeAccess().getAttributesAttributeParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__TypeAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodeAccess().getTypeTypeCrossReference_7_1_0()); }
(
{ before(grammarAccess.getMethodeAccess().getTypeTypeIDTerminalRuleCall_7_1_0_1()); }
	RULE_ID{ after(grammarAccess.getMethodeAccess().getTypeTypeIDTerminalRuleCall_7_1_0_1()); }
)
{ after(grammarAccess.getMethodeAccess().getTypeTypeCrossReference_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizationAccess().getLeftAssociationEndParserRuleCall_0_0()); }
	ruleAssociationEnd{ after(grammarAccess.getGeneralizationAccess().getLeftAssociationEndParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizationAccess().getRightAssociationEndParserRuleCall_2_0()); }
	ruleAssociationEnd{ after(grammarAccess.getGeneralizationAccess().getRightAssociationEndParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getLeftAssociationEndParserRuleCall_0_0()); }
	ruleAssociationEnd{ after(grammarAccess.getAssociationAccess().getLeftAssociationEndParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getRightAssociationEndParserRuleCall_2_0()); }
	ruleAssociationEnd{ after(grammarAccess.getAssociationAccess().getRightAssociationEndParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__CardinalityAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getCardinalityConnectorCardinalitiyParserRuleCall_3_0()); }
	ruleConnectorCardinalitiy{ after(grammarAccess.getAssociationAccess().getCardinalityConnectorCardinalitiyParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationEnd__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationEndAccess().getTypeClassNameCrossReference_0()); }
(
{ before(grammarAccess.getAssociationEndAccess().getTypeClassNameIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getAssociationEndAccess().getTypeClassNameIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getAssociationEndAccess().getTypeClassNameCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorLabel__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorLabelAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getConnectorLabelAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorCardinalitiy__LeftAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorCardinalitiyAccess().getLeftCardinalityParserRuleCall_2_0()); }
	ruleCardinality{ after(grammarAccess.getConnectorCardinalitiyAccess().getLeftCardinalityParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorCardinalitiy__MiddleAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorCardinalitiyAccess().getMiddleCardinalityParserRuleCall_3_1_0()); }
	ruleCardinality{ after(grammarAccess.getConnectorCardinalitiyAccess().getMiddleCardinalityParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorCardinalitiy__RightAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorCardinalitiyAccess().getRightConnectorLabelParserRuleCall_4_1_0()); }
	ruleConnectorLabel{ after(grammarAccess.getConnectorCardinalitiyAccess().getRightConnectorLabelParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


