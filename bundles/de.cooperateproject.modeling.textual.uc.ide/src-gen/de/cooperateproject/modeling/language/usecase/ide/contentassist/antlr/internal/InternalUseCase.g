/*
 * generated by Xtext 2.9.0
 */
grammar InternalUseCase;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.cooperateproject.modeling.language.usecase.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.cooperateproject.modeling.language.usecase.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.cooperateproject.modeling.language.usecase.services.UseCaseGrammarAccess;

}
@parser::members {
	private UseCaseGrammarAccess grammarAccess;

	public void setGrammarAccess(UseCaseGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDiagram
entryRuleDiagram
:
{ before(grammarAccess.getDiagramRule()); }
	 ruleDiagram
{ after(grammarAccess.getDiagramRule()); } 
	 EOF 
;

// Rule Diagram
ruleDiagram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiagramAccess().getGroup()); }
		(rule__Diagram__Group__0)
		{ after(grammarAccess.getDiagramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUMLModelReference
entryRuleUMLModelReference
:
{ before(grammarAccess.getUMLModelReferenceRule()); }
	 ruleUMLModelReference
{ after(grammarAccess.getUMLModelReferenceRule()); } 
	 EOF 
;

// Rule UMLModelReference
ruleUMLModelReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUMLModelReferenceAccess().getGroup()); }
		(rule__UMLModelReference__Group__0)
		{ after(grammarAccess.getUMLModelReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportURI
entryRuleImportURI
:
{ before(grammarAccess.getImportURIRule()); }
	 ruleImportURI
{ after(grammarAccess.getImportURIRule()); } 
	 EOF 
;

// Rule ImportURI
ruleImportURI 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportURIAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getImportURIAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTest
entryRuleTest
:
{ before(grammarAccess.getTestRule()); }
	 ruleTest
{ after(grammarAccess.getTestRule()); } 
	 EOF 
;

// Rule Test
ruleTest 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTestAccess().getGroup()); }
		(rule__Test__Group__0)
		{ after(grammarAccess.getTestAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTest2
entryRuleTest2
:
{ before(grammarAccess.getTest2Rule()); }
	 ruleTest2
{ after(grammarAccess.getTest2Rule()); } 
	 EOF 
;

// Rule Test2
ruleTest2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTest2Access().getGroup()); }
		(rule__Test2__Group__0)
		{ after(grammarAccess.getTest2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFQN
entryRuleFQN
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFQNAccess().getGroup()); }
		(rule__FQN__Group__0)
		{ after(grammarAccess.getFQNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActor
entryRuleActor
:
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActorAccess().getGroup()); }
		(rule__Actor__Group__0)
		{ after(grammarAccess.getActorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSystem
entryRuleSystem
:
{ before(grammarAccess.getSystemRule()); }
	 ruleSystem
{ after(grammarAccess.getSystemRule()); } 
	 EOF 
;

// Rule System
ruleSystem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSystemAccess().getGroup()); }
		(rule__System__Group__0)
		{ after(grammarAccess.getSystemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUseCase
entryRuleUseCase
:
{ before(grammarAccess.getUseCaseRule()); }
	 ruleUseCase
{ after(grammarAccess.getUseCaseRule()); } 
	 EOF 
;

// Rule UseCase
ruleUseCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUseCaseAccess().getGroup()); }
		(rule__UseCase__Group__0)
		{ after(grammarAccess.getUseCaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtensionPoint
entryRuleExtensionPoint
:
{ before(grammarAccess.getExtensionPointRule()); }
	 ruleExtensionPoint
{ after(grammarAccess.getExtensionPointRule()); } 
	 EOF 
;

// Rule ExtensionPoint
ruleExtensionPoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtensionPointAccess().getGroup()); }
		(rule__ExtensionPoint__Group__0)
		{ after(grammarAccess.getExtensionPointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtension
entryRuleExtension
:
{ before(grammarAccess.getExtensionRule()); }
	 ruleExtension
{ after(grammarAccess.getExtensionRule()); } 
	 EOF 
;

// Rule Extension
ruleExtension 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtensionAccess().getGroup()); }
		(rule__Extension__Group__0)
		{ after(grammarAccess.getExtensionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInclude
entryRuleInclude
:
{ before(grammarAccess.getIncludeRule()); }
	 ruleInclude
{ after(grammarAccess.getIncludeRule()); } 
	 EOF 
;

// Rule Include
ruleInclude 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIncludeAccess().getGroup()); }
		(rule__Include__Group__0)
		{ after(grammarAccess.getIncludeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraint
entryRuleConstraint
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintAccess().getGroup()); }
		(rule__Constraint__Group__0)
		{ after(grammarAccess.getConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssociation
entryRuleAssociation
:
{ before(grammarAccess.getAssociationRule()); }
	 ruleAssociation
{ after(grammarAccess.getAssociationRule()); } 
	 EOF 
;

// Rule Association
ruleAssociation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssociationAccess().getGroup()); }
		(rule__Association__Group__0)
		{ after(grammarAccess.getAssociationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicity
entryRuleMultiplicity
:
{ before(grammarAccess.getMultiplicityRule()); }
	 ruleMultiplicity
{ after(grammarAccess.getMultiplicityRule()); } 
	 EOF 
;

// Rule Multiplicity
ruleMultiplicity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicityAccess().getGroup()); }
		(rule__Multiplicity__Group__0)
		{ after(grammarAccess.getMultiplicityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicityElement
entryRuleMultiplicityElement
:
{ before(grammarAccess.getMultiplicityElementRule()); }
	 ruleMultiplicityElement
{ after(grammarAccess.getMultiplicityElementRule()); } 
	 EOF 
;

// Rule MultiplicityElement
ruleMultiplicityElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicityElementAccess().getAlternatives()); }
		(rule__MultiplicityElement__Alternatives)
		{ after(grammarAccess.getMultiplicityElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionType
entryRuleExpressionType
:
{ before(grammarAccess.getExpressionTypeRule()); }
	 ruleExpressionType
{ after(grammarAccess.getExpressionTypeRule()); } 
	 EOF 
;

// Rule ExpressionType
ruleExpressionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionTypeAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getExpressionTypeAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotation
entryRuleAnnotation
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationAccess().getAnnotationDefinedParserRuleCall()); }
		ruleAnnotationDefined
		{ after(grammarAccess.getAnnotationAccess().getAnnotationDefinedParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotationDefined
entryRuleAnnotationDefined
:
{ before(grammarAccess.getAnnotationDefinedRule()); }
	 ruleAnnotationDefined
{ after(grammarAccess.getAnnotationDefinedRule()); } 
	 EOF 
;

// Rule AnnotationDefined
ruleAnnotationDefined 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationDefinedAccess().getDefinedKeyword()); }
		'defined'
		{ after(grammarAccess.getAnnotationDefinedAccess().getDefinedKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleName
entryRuleName
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameAccess().getAlternatives()); }
		(rule__Name__Alternatives)
		{ after(grammarAccess.getNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComment
entryRuleComment
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommentAccess().getAlternatives()); }
		(rule__Comment__Alternatives)
		{ after(grammarAccess.getCommentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Modifier
ruleModifier
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifierAccess().getAlternatives()); }
		(rule__Modifier__Alternatives)
		{ after(grammarAccess.getModifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Visibility
ruleVisibility
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityAccess().getAlternatives()); }
		(rule__Visibility__Alternatives)
		{ after(grammarAccess.getVisibilityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Alternatives_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getGroup_7_0()); }
		(rule__Actor__Group_7_0__0)
		{ after(grammarAccess.getActorAccess().getGroup_7_0()); }
	)
	|
	(
		{ before(grammarAccess.getActorAccess().getSemicolonKeyword_7_1()); }
		';'
		{ after(grammarAccess.getActorAccess().getSemicolonKeyword_7_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getUsecaseKeyword_1_0()); }
		'usecase'
		{ after(grammarAccess.getUseCaseAccess().getUsecaseKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getUseCaseAccess().getUCKeyword_1_1()); }
		'UC'
		{ after(grammarAccess.getUseCaseAccess().getUCKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getSemicolonKeyword_4_0()); }
		';'
		{ after(grammarAccess.getUseCaseAccess().getSemicolonKeyword_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getUseCaseAccess().getGroup_4_1()); }
		(rule__UseCase__Group_4_1__0)
		{ after(grammarAccess.getUseCaseAccess().getGroup_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Alternatives_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getExtensionPointsAssignment_4_1_1_0()); }
		(rule__UseCase__ExtensionPointsAssignment_4_1_1_0)
		{ after(grammarAccess.getUseCaseAccess().getExtensionPointsAssignment_4_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getUseCaseAccess().getExtensionsAssignment_4_1_1_1()); }
		(rule__UseCase__ExtensionsAssignment_4_1_1_1)
		{ after(grammarAccess.getUseCaseAccess().getExtensionsAssignment_4_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getUseCaseAccess().getIncludesAssignment_4_1_1_2()); }
		(rule__UseCase__IncludesAssignment_4_1_1_2)
		{ after(grammarAccess.getUseCaseAccess().getIncludesAssignment_4_1_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityElementAccess().getINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getMultiplicityElementAccess().getINTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicityElementAccess().getAsteriskKeyword_1()); }
		'*'
		{ after(grammarAccess.getMultiplicityElementAccess().getAsteriskKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getNameAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNameAccess().getSTRINGTerminalRuleCall_1()); }
		RULE_STRING
		{ after(grammarAccess.getNameAccess().getSTRINGTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getML_COMMENTTerminalRuleCall_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getCommentAccess().getML_COMMENTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommentAccess().getSL_COMMENTTerminalRuleCall_1()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getCommentAccess().getSL_COMMENTTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifierAccess().getFINALEnumLiteralDeclaration_0()); }
		('final')
		{ after(grammarAccess.getModifierAccess().getFINALEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getModifierAccess().getABSTRACTEnumLiteralDeclaration_1()); }
		('abstract')
		{ after(grammarAccess.getModifierAccess().getABSTRACTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getModifierAccess().getLEAFEnumLiteralDeclaration_2()); }
		('leaf')
		{ after(grammarAccess.getModifierAccess().getLEAFEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_0()); }
		('public')
		{ after(grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_1()); }
		('private')
		{ after(grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityAccess().getPROTECTEDEnumLiteralDeclaration_2()); }
		('protected')
		{ after(grammarAccess.getVisibilityAccess().getPROTECTEDEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityAccess().getPACKAGEEnumLiteralDeclaration_3()); }
		('package')
		{ after(grammarAccess.getVisibilityAccess().getPACKAGEEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group__0__Impl
	rule__Diagram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getUmlModelAssignment_0()); }
	(rule__Diagram__UmlModelAssignment_0)
	{ after(grammarAccess.getDiagramAccess().getUmlModelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group__1__Impl
	rule__Diagram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getTestAssignment_1()); }
	(rule__Diagram__TestAssignment_1)
	{ after(grammarAccess.getDiagramAccess().getTestAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group__2__Impl
	rule__Diagram__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getTest2Assignment_2()); }
	(rule__Diagram__Test2Assignment_2)
	{ after(grammarAccess.getDiagramAccess().getTest2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group__3__Impl
	rule__Diagram__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getActorsAssignment_3()); }
	(rule__Diagram__ActorsAssignment_3)*
	{ after(grammarAccess.getDiagramAccess().getActorsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group__4__Impl
	rule__Diagram__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getSystemAssignment_4()); }
	(rule__Diagram__SystemAssignment_4)
	{ after(grammarAccess.getDiagramAccess().getSystemAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getAssociationsAssignment_5()); }
	(rule__Diagram__AssociationsAssignment_5)*
	{ after(grammarAccess.getDiagramAccess().getAssociationsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UMLModelReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UMLModelReference__Group__0__Impl
	rule__UMLModelReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UMLModelReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUMLModelReferenceAccess().getUseKeyword_0()); }
	'use'
	{ after(grammarAccess.getUMLModelReferenceAccess().getUseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UMLModelReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UMLModelReference__Group__1__Impl
	rule__UMLModelReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UMLModelReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUMLModelReferenceAccess().getImportURIAssignment_1()); }
	(rule__UMLModelReference__ImportURIAssignment_1)
	{ after(grammarAccess.getUMLModelReferenceAccess().getImportURIAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UMLModelReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UMLModelReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UMLModelReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUMLModelReferenceAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getUMLModelReferenceAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group__0__Impl
	rule__Test__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getTestKeyword_0()); }
	'test'
	{ after(grammarAccess.getTestAccess().getTestKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group__1__Impl
	rule__Test__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getActorAssignment_1()); }
	(rule__Test__ActorAssignment_1)
	{ after(grammarAccess.getTestAccess().getActorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getTestAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Test2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test2__Group__0__Impl
	rule__Test2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Test2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTest2Access().getTest2Keyword_0()); }
	'test2'
	{ after(grammarAccess.getTest2Access().getTest2Keyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test2__Group__1__Impl
	rule__Test2__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Test2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTest2Access().getActorAssignment_1()); }
	(rule__Test2__ActorAssignment_1)
	{ after(grammarAccess.getTest2Access().getActorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test2__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test2__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Test2__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTest2Access().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getTest2Access().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getGroup_1()); }
	(rule__FQN__Group_1__0)*
	{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__0__Impl
	rule__Actor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getActorAction_0()); }
	()
	{ after(grammarAccess.getActorAccess().getActorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__1__Impl
	rule__Actor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getCommentsAssignment_1()); }
	(rule__Actor__CommentsAssignment_1)*
	{ after(grammarAccess.getActorAccess().getCommentsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__2__Impl
	rule__Actor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getVisibilityAssignment_2()); }
	(rule__Actor__VisibilityAssignment_2)?
	{ after(grammarAccess.getActorAccess().getVisibilityAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__3__Impl
	rule__Actor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getModifiersAssignment_3()); }
	(rule__Actor__ModifiersAssignment_3)*
	{ after(grammarAccess.getActorAccess().getModifiersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__4__Impl
	rule__Actor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getActorKeyword_4()); }
	'actor'
	{ after(grammarAccess.getActorAccess().getActorKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__5__Impl
	rule__Actor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getNameAssignment_5()); }
	(rule__Actor__NameAssignment_5)
	{ after(grammarAccess.getActorAccess().getNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__6__Impl
	rule__Actor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getGroup_6()); }
	(rule__Actor__Group_6__0)?
	{ after(grammarAccess.getActorAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getAlternatives_7()); }
	(rule__Actor__Alternatives_7)
	{ after(grammarAccess.getActorAccess().getAlternatives_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_6__0__Impl
	rule__Actor__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getExtendsKeyword_6_0()); }
	'extends'
	{ after(grammarAccess.getActorAccess().getExtendsKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getBaseActorsAssignment_6_1()); }
	(rule__Actor__BaseActorsAssignment_6_1)
	{ after(grammarAccess.getActorAccess().getBaseActorsAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_7_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_7_0__0__Impl
	rule__Actor__Group_7_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_7_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_7_0_0()); }
	'{'
	{ after(grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_7_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_7_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_7_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_7_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getRightCurlyBracketKeyword_7_0_1()); }
	'}'
	{ after(grammarAccess.getActorAccess().getRightCurlyBracketKeyword_7_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__0__Impl
	rule__System__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getCommentsAssignment_0()); }
	(rule__System__CommentsAssignment_0)*
	{ after(grammarAccess.getSystemAccess().getCommentsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__1__Impl
	rule__System__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getSystemKeyword_1()); }
	'system'
	{ after(grammarAccess.getSystemAccess().getSystemKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__2__Impl
	rule__System__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getNameAssignment_2()); }
	(rule__System__NameAssignment_2)
	{ after(grammarAccess.getSystemAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__3__Impl
	rule__System__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__4__Impl
	rule__System__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getUsecasesAssignment_4()); }
	(rule__System__UsecasesAssignment_4)*
	{ after(grammarAccess.getSystemAccess().getUsecasesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__0__Impl
	rule__UseCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getCommentsAssignment_0()); }
	(rule__UseCase__CommentsAssignment_0)*
	{ after(grammarAccess.getUseCaseAccess().getCommentsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__1__Impl
	rule__UseCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getAlternatives_1()); }
	(rule__UseCase__Alternatives_1)
	{ after(grammarAccess.getUseCaseAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__2__Impl
	rule__UseCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getNameAssignment_2()); }
	(rule__UseCase__NameAssignment_2)
	{ after(grammarAccess.getUseCaseAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__3__Impl
	rule__UseCase__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getGroup_3()); }
	(rule__UseCase__Group_3__0)?
	{ after(grammarAccess.getUseCaseAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getAlternatives_4()); }
	(rule__UseCase__Alternatives_4)
	{ after(grammarAccess.getUseCaseAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group_3__0__Impl
	rule__UseCase__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getExtendsKeyword_3_0()); }
	'extends'
	{ after(grammarAccess.getUseCaseAccess().getExtendsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getBaseUseCasesAssignment_3_1()); }
	(rule__UseCase__BaseUseCasesAssignment_3_1)
	{ after(grammarAccess.getUseCaseAccess().getBaseUseCasesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group_4_1__0__Impl
	rule__UseCase__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getLeftCurlyBracketKeyword_4_1_0()); }
	'{'
	{ after(grammarAccess.getUseCaseAccess().getLeftCurlyBracketKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group_4_1__1__Impl
	rule__UseCase__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getAlternatives_4_1_1()); }
	(rule__UseCase__Alternatives_4_1_1)*
	{ after(grammarAccess.getUseCaseAccess().getAlternatives_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_4_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UseCase__Group_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_4_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUseCaseAccess().getRightCurlyBracketKeyword_4_1_2()); }
	'}'
	{ after(grammarAccess.getUseCaseAccess().getRightCurlyBracketKeyword_4_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtensionPoint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionPoint__Group__0__Impl
	rule__ExtensionPoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionPointAccess().getCommentsAssignment_0()); }
	(rule__ExtensionPoint__CommentsAssignment_0)*
	{ after(grammarAccess.getExtensionPointAccess().getCommentsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionPoint__Group__1__Impl
	rule__ExtensionPoint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionPointAccess().getVisibilityAssignment_1()); }
	(rule__ExtensionPoint__VisibilityAssignment_1)?
	{ after(grammarAccess.getExtensionPointAccess().getVisibilityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionPoint__Group__2__Impl
	rule__ExtensionPoint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionPointAccess().getModifiersAssignment_2()); }
	(rule__ExtensionPoint__ModifiersAssignment_2)*
	{ after(grammarAccess.getExtensionPointAccess().getModifiersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionPoint__Group__3__Impl
	rule__ExtensionPoint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionPointAccess().getExtensionpointKeyword_3()); }
	'extensionpoint'
	{ after(grammarAccess.getExtensionPointAccess().getExtensionpointKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionPoint__Group__4__Impl
	rule__ExtensionPoint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionPointAccess().getNameAssignment_4()); }
	(rule__ExtensionPoint__NameAssignment_4)
	{ after(grammarAccess.getExtensionPointAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionPoint__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionPointAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getExtensionPointAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Extension__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extension__Group__0__Impl
	rule__Extension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionAccess().getCommentsAssignment_0()); }
	(rule__Extension__CommentsAssignment_0)*
	{ after(grammarAccess.getExtensionAccess().getCommentsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extension__Group__1__Impl
	rule__Extension__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionAccess().getVisibilityAssignment_1()); }
	(rule__Extension__VisibilityAssignment_1)?
	{ after(grammarAccess.getExtensionAccess().getVisibilityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extension__Group__2__Impl
	rule__Extension__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionAccess().getExtensionKeyword_2()); }
	'extension'
	{ after(grammarAccess.getExtensionAccess().getExtensionKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extension__Group__3__Impl
	rule__Extension__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionAccess().getNameAssignment_3()); }
	(rule__Extension__NameAssignment_3)?
	{ after(grammarAccess.getExtensionAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extension__Group__4__Impl
	rule__Extension__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getExtensionAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extension__Group__5__Impl
	rule__Extension__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionAccess().getLocationKeyword_5()); }
	'location'
	{ after(grammarAccess.getExtensionAccess().getLocationKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extension__Group__6__Impl
	rule__Extension__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionAccess().getLocationAssignment_6()); }
	(rule__Extension__LocationAssignment_6)
	{ after(grammarAccess.getExtensionAccess().getLocationAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extension__Group__7__Impl
	rule__Extension__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionAccess().getGroup_7()); }
	(rule__Extension__Group_7__0)?
	{ after(grammarAccess.getExtensionAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extension__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getExtensionAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Extension__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extension__Group_7__0__Impl
	rule__Extension__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionAccess().getConditionKeyword_7_0()); }
	'condition'
	{ after(grammarAccess.getExtensionAccess().getConditionKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extension__Group_7__1__Impl
	rule__Extension__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionAccess().getConditionAssignment_7_1()); }
	(rule__Extension__ConditionAssignment_7_1)
	{ after(grammarAccess.getExtensionAccess().getConditionAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extension__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionAccess().getSemicolonKeyword_7_2()); }
	';'
	{ after(grammarAccess.getExtensionAccess().getSemicolonKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Include__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Include__Group__0__Impl
	rule__Include__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeAccess().getCommentsAssignment_0()); }
	(rule__Include__CommentsAssignment_0)*
	{ after(grammarAccess.getIncludeAccess().getCommentsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Include__Group__1__Impl
	rule__Include__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeAccess().getVisibilityAssignment_1()); }
	(rule__Include__VisibilityAssignment_1)?
	{ after(grammarAccess.getIncludeAccess().getVisibilityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Include__Group__2__Impl
	rule__Include__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeAccess().getIncludeKeyword_2()); }
	'include'
	{ after(grammarAccess.getIncludeAccess().getIncludeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Include__Group__3__Impl
	rule__Include__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeAccess().getNameAssignment_3()); }
	(rule__Include__NameAssignment_3)?
	{ after(grammarAccess.getIncludeAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Include__Group__4__Impl
	rule__Include__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeAccess().getAdditionAssignment_4()); }
	(rule__Include__AdditionAssignment_4)
	{ after(grammarAccess.getIncludeAccess().getAdditionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Include__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getIncludeAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getLanguageAssignment_0()); }
	(rule__Constraint__LanguageAssignment_0)
	{ after(grammarAccess.getConstraintAccess().getLanguageAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getExpressionAssignment_1()); }
	(rule__Constraint__ExpressionAssignment_1)
	{ after(grammarAccess.getConstraintAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__0__Impl
	rule__Association__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getCommentsAssignment_0()); }
	(rule__Association__CommentsAssignment_0)*
	{ after(grammarAccess.getAssociationAccess().getCommentsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__1__Impl
	rule__Association__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getVisibilityAssignment_1()); }
	(rule__Association__VisibilityAssignment_1)?
	{ after(grammarAccess.getAssociationAccess().getVisibilityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__2__Impl
	rule__Association__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getModifiersAssignment_2()); }
	(rule__Association__ModifiersAssignment_2)*
	{ after(grammarAccess.getAssociationAccess().getModifiersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__3__Impl
	rule__Association__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getAssociationKeyword_3()); }
	'association'
	{ after(grammarAccess.getAssociationAccess().getAssociationKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__4__Impl
	rule__Association__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getNameAssignment_4()); }
	(rule__Association__NameAssignment_4)?
	{ after(grammarAccess.getAssociationAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__5__Impl
	rule__Association__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getGroup_5()); }
	(rule__Association__Group_5__0)?
	{ after(grammarAccess.getAssociationAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__6__Impl
	rule__Association__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getAssociationAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__7__Impl
	rule__Association__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getActorMultiplicityAssignment_7()); }
	(rule__Association__ActorMultiplicityAssignment_7)?
	{ after(grammarAccess.getAssociationAccess().getActorMultiplicityAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__8__Impl
	rule__Association__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getActorAssignment_8()); }
	(rule__Association__ActorAssignment_8)
	{ after(grammarAccess.getAssociationAccess().getActorAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__9__Impl
	rule__Association__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getUsecaseMultiplicityAssignment_9()); }
	(rule__Association__UsecaseMultiplicityAssignment_9)?
	{ after(grammarAccess.getAssociationAccess().getUsecaseMultiplicityAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__10__Impl
	rule__Association__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getUsecaseAssignment_10()); }
	(rule__Association__UsecaseAssignment_10)
	{ after(grammarAccess.getAssociationAccess().getUsecaseAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__11__Impl
	rule__Association__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getGroup_11()); }
	(rule__Association__Group_11__0)*
	{ after(grammarAccess.getAssociationAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getRightCurlyBracketKeyword_12()); }
	'}'
	{ after(grammarAccess.getAssociationAccess().getRightCurlyBracketKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_5__0__Impl
	rule__Association__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getExtendsKeyword_5_0()); }
	'extends'
	{ after(grammarAccess.getAssociationAccess().getExtendsKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getBaseAssociationsAssignment_5_1()); }
	(rule__Association__BaseAssociationsAssignment_5_1)
	{ after(grammarAccess.getAssociationAccess().getBaseAssociationsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_11__0__Impl
	rule__Association__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getRuleKeyword_11_0()); }
	'rule'
	{ after(grammarAccess.getAssociationAccess().getRuleKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_11__1__Impl
	rule__Association__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getOwnedRulesAssignment_11_1()); }
	(rule__Association__OwnedRulesAssignment_11_1)
	{ after(grammarAccess.getAssociationAccess().getOwnedRulesAssignment_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_11__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_11__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_11__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getSemicolonKeyword_11_2()); }
	';'
	{ after(grammarAccess.getAssociationAccess().getSemicolonKeyword_11_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__0__Impl
	rule__Multiplicity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getLowerBoundAssignment_0()); }
	(rule__Multiplicity__LowerBoundAssignment_0)
	{ after(grammarAccess.getMultiplicityAccess().getLowerBoundAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getGroup_1()); }
	(rule__Multiplicity__Group_1__0)?
	{ after(grammarAccess.getMultiplicityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group_1__0__Impl
	rule__Multiplicity__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getFullStopFullStopKeyword_1_0()); }
	'..'
	{ after(grammarAccess.getMultiplicityAccess().getFullStopFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getUpperBoundAssignment_1_1()); }
	(rule__Multiplicity__UpperBoundAssignment_1_1)
	{ after(grammarAccess.getMultiplicityAccess().getUpperBoundAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__UmlModelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiagramAccess().getUmlModelUMLModelReferenceParserRuleCall_0_0()); }
		ruleUMLModelReference
		{ after(grammarAccess.getDiagramAccess().getUmlModelUMLModelReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__TestAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiagramAccess().getTestTestParserRuleCall_1_0()); }
		ruleTest
		{ after(grammarAccess.getDiagramAccess().getTestTestParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Test2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiagramAccess().getTest2Test2ParserRuleCall_2_0()); }
		ruleTest2
		{ after(grammarAccess.getDiagramAccess().getTest2Test2ParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__ActorsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiagramAccess().getActorsActorParserRuleCall_3_0()); }
		ruleActor
		{ after(grammarAccess.getDiagramAccess().getActorsActorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__SystemAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiagramAccess().getSystemSystemParserRuleCall_4_0()); }
		ruleSystem
		{ after(grammarAccess.getDiagramAccess().getSystemSystemParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__AssociationsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiagramAccess().getAssociationsAssociationParserRuleCall_5_0()); }
		ruleAssociation
		{ after(grammarAccess.getDiagramAccess().getAssociationsAssociationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UMLModelReference__ImportURIAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUMLModelReferenceAccess().getImportURIImportURIParserRuleCall_1_0()); }
		ruleImportURI
		{ after(grammarAccess.getUMLModelReferenceAccess().getImportURIImportURIParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__ActorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestAccess().getActorActorCrossReference_1_0()); }
		(
			{ before(grammarAccess.getTestAccess().getActorActorNameParserRuleCall_1_0_1()); }
			ruleName
			{ after(grammarAccess.getTestAccess().getActorActorNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getTestAccess().getActorActorCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test2__ActorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTest2Access().getActorActorCrossReference_1_0()); }
		(
			{ before(grammarAccess.getTest2Access().getActorActorFQNParserRuleCall_1_0_1()); }
			ruleFQN
			{ after(grammarAccess.getTest2Access().getActorActorFQNParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getTest2Access().getActorActorCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__CommentsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getCommentsCommentParserRuleCall_1_0()); }
		ruleComment
		{ after(grammarAccess.getActorAccess().getCommentsCommentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__VisibilityAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getVisibilityVisibilityEnumRuleCall_2_0()); }
		ruleVisibility
		{ after(grammarAccess.getActorAccess().getVisibilityVisibilityEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__ModifiersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getModifiersModifierEnumRuleCall_3_0()); }
		ruleModifier
		{ after(grammarAccess.getActorAccess().getModifiersModifierEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__NameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getNameNameParserRuleCall_5_0()); }
		ruleName
		{ after(grammarAccess.getActorAccess().getNameNameParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__BaseActorsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getBaseActorsActorCrossReference_6_1_0()); }
		(
			{ before(grammarAccess.getActorAccess().getBaseActorsActorNameParserRuleCall_6_1_0_1()); }
			ruleName
			{ after(grammarAccess.getActorAccess().getBaseActorsActorNameParserRuleCall_6_1_0_1()); }
		)
		{ after(grammarAccess.getActorAccess().getBaseActorsActorCrossReference_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__CommentsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getCommentsCommentParserRuleCall_0_0()); }
		ruleComment
		{ after(grammarAccess.getSystemAccess().getCommentsCommentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getNameNameParserRuleCall_2_0()); }
		ruleName
		{ after(grammarAccess.getSystemAccess().getNameNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__UsecasesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getUsecasesUseCaseParserRuleCall_4_0()); }
		ruleUseCase
		{ after(grammarAccess.getSystemAccess().getUsecasesUseCaseParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__CommentsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getCommentsCommentParserRuleCall_0_0()); }
		ruleComment
		{ after(grammarAccess.getUseCaseAccess().getCommentsCommentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getNameNameParserRuleCall_2_0()); }
		ruleName
		{ after(grammarAccess.getUseCaseAccess().getNameNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__BaseUseCasesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getBaseUseCasesUseCaseCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getUseCaseAccess().getBaseUseCasesUseCaseNameParserRuleCall_3_1_0_1()); }
			ruleName
			{ after(grammarAccess.getUseCaseAccess().getBaseUseCasesUseCaseNameParserRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getUseCaseAccess().getBaseUseCasesUseCaseCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__ExtensionPointsAssignment_4_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getExtensionPointsExtensionPointParserRuleCall_4_1_1_0_0()); }
		ruleExtensionPoint
		{ after(grammarAccess.getUseCaseAccess().getExtensionPointsExtensionPointParserRuleCall_4_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__ExtensionsAssignment_4_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getExtensionsExtensionParserRuleCall_4_1_1_1_0()); }
		ruleExtension
		{ after(grammarAccess.getUseCaseAccess().getExtensionsExtensionParserRuleCall_4_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__IncludesAssignment_4_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUseCaseAccess().getIncludesIncludeParserRuleCall_4_1_1_2_0()); }
		ruleInclude
		{ after(grammarAccess.getUseCaseAccess().getIncludesIncludeParserRuleCall_4_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__CommentsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtensionPointAccess().getCommentsCommentParserRuleCall_0_0()); }
		ruleComment
		{ after(grammarAccess.getExtensionPointAccess().getCommentsCommentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__VisibilityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtensionPointAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
		ruleVisibility
		{ after(grammarAccess.getExtensionPointAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__ModifiersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtensionPointAccess().getModifiersModifierEnumRuleCall_2_0()); }
		ruleModifier
		{ after(grammarAccess.getExtensionPointAccess().getModifiersModifierEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionPoint__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtensionPointAccess().getNameNameParserRuleCall_4_0()); }
		ruleName
		{ after(grammarAccess.getExtensionPointAccess().getNameNameParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__CommentsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtensionAccess().getCommentsCommentParserRuleCall_0_0()); }
		ruleComment
		{ after(grammarAccess.getExtensionAccess().getCommentsCommentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__VisibilityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtensionAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
		ruleVisibility
		{ after(grammarAccess.getExtensionAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtensionAccess().getNameNameParserRuleCall_3_0()); }
		ruleName
		{ after(grammarAccess.getExtensionAccess().getNameNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__LocationAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtensionAccess().getLocationExtensionPointCrossReference_6_0()); }
		(
			{ before(grammarAccess.getExtensionAccess().getLocationExtensionPointNameParserRuleCall_6_0_1()); }
			ruleName
			{ after(grammarAccess.getExtensionAccess().getLocationExtensionPointNameParserRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getExtensionAccess().getLocationExtensionPointCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__ConditionAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtensionAccess().getConditionConstraintParserRuleCall_7_1_0()); }
		ruleConstraint
		{ after(grammarAccess.getExtensionAccess().getConditionConstraintParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__CommentsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludeAccess().getCommentsCommentParserRuleCall_0_0()); }
		ruleComment
		{ after(grammarAccess.getIncludeAccess().getCommentsCommentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__VisibilityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludeAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
		ruleVisibility
		{ after(grammarAccess.getIncludeAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludeAccess().getNameNameParserRuleCall_3_0()); }
		ruleName
		{ after(grammarAccess.getIncludeAccess().getNameNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__AdditionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludeAccess().getAdditionUseCaseCrossReference_4_0()); }
		(
			{ before(grammarAccess.getIncludeAccess().getAdditionUseCaseNameParserRuleCall_4_0_1()); }
			ruleName
			{ after(grammarAccess.getIncludeAccess().getAdditionUseCaseNameParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getIncludeAccess().getAdditionUseCaseCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__LanguageAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getLanguageExpressionTypeParserRuleCall_0_0()); }
		ruleExpressionType
		{ after(grammarAccess.getConstraintAccess().getLanguageExpressionTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getExpressionSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getConstraintAccess().getExpressionSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__CommentsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationAccess().getCommentsCommentParserRuleCall_0_0()); }
		ruleComment
		{ after(grammarAccess.getAssociationAccess().getCommentsCommentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__VisibilityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
		ruleVisibility
		{ after(grammarAccess.getAssociationAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__ModifiersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationAccess().getModifiersModifierEnumRuleCall_2_0()); }
		ruleModifier
		{ after(grammarAccess.getAssociationAccess().getModifiersModifierEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationAccess().getNameNameParserRuleCall_4_0()); }
		ruleName
		{ after(grammarAccess.getAssociationAccess().getNameNameParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__BaseAssociationsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationAccess().getBaseAssociationsAssociationCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getAssociationAccess().getBaseAssociationsAssociationNameParserRuleCall_5_1_0_1()); }
			ruleName
			{ after(grammarAccess.getAssociationAccess().getBaseAssociationsAssociationNameParserRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getAssociationAccess().getBaseAssociationsAssociationCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__ActorMultiplicityAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationAccess().getActorMultiplicityMultiplicityParserRuleCall_7_0()); }
		ruleMultiplicity
		{ after(grammarAccess.getAssociationAccess().getActorMultiplicityMultiplicityParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__ActorAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationAccess().getActorActorCrossReference_8_0()); }
		(
			{ before(grammarAccess.getAssociationAccess().getActorActorNameParserRuleCall_8_0_1()); }
			ruleName
			{ after(grammarAccess.getAssociationAccess().getActorActorNameParserRuleCall_8_0_1()); }
		)
		{ after(grammarAccess.getAssociationAccess().getActorActorCrossReference_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__UsecaseMultiplicityAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationAccess().getUsecaseMultiplicityMultiplicityParserRuleCall_9_0()); }
		ruleMultiplicity
		{ after(grammarAccess.getAssociationAccess().getUsecaseMultiplicityMultiplicityParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__UsecaseAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationAccess().getUsecaseUseCaseCrossReference_10_0()); }
		(
			{ before(grammarAccess.getAssociationAccess().getUsecaseUseCaseNameParserRuleCall_10_0_1()); }
			ruleName
			{ after(grammarAccess.getAssociationAccess().getUsecaseUseCaseNameParserRuleCall_10_0_1()); }
		)
		{ after(grammarAccess.getAssociationAccess().getUsecaseUseCaseCrossReference_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__OwnedRulesAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationAccess().getOwnedRulesConstraintParserRuleCall_11_1_0()); }
		ruleConstraint
		{ after(grammarAccess.getAssociationAccess().getOwnedRulesConstraintParserRuleCall_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__LowerBoundAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityAccess().getLowerBoundMultiplicityElementParserRuleCall_0_0()); }
		ruleMultiplicityElement
		{ after(grammarAccess.getMultiplicityAccess().getLowerBoundMultiplicityElementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__UpperBoundAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityAccess().getUpperBoundMultiplicityElementParserRuleCall_1_1_0()); }
		ruleMultiplicityElement
		{ after(grammarAccess.getMultiplicityAccess().getUpperBoundMultiplicityElementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
