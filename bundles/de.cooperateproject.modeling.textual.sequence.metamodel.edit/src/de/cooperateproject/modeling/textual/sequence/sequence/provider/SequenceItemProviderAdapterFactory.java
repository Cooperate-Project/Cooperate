/**
 * generated by Xtext 2.11.0
 */
package de.cooperateproject.modeling.textual.sequence.sequence.provider;

import de.cooperateproject.modeling.textual.sequence.sequence.util.SequenceAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class SequenceItemProviderAdapterFactory extends SequenceAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    /**
     * This keeps track of the root adapter factory that delegates to this adapter factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ComposedAdapterFactory parentAdapterFactory;

    /**
     * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected IChangeNotifier changeNotifier = new ChangeNotifier();

    /**
     * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected Collection<Object> supportedTypes = new ArrayList<Object>();

    /**
     * This constructs an instance.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public SequenceItemProviderAdapterFactory() {
        supportedTypes.add(IEditingDomainItemProvider.class);
        supportedTypes.add(IStructuredItemContentProvider.class);
        supportedTypes.add(ITreeItemContentProvider.class);
        supportedTypes.add(IItemLabelProvider.class);
        supportedTypes.add(IItemPropertySource.class);
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.SequenceDiagram} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SequenceDiagramItemProvider sequenceDiagramItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.SequenceDiagram}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSequenceDiagramAdapter() {
        if (sequenceDiagramItemProvider == null) {
            sequenceDiagramItemProvider = new SequenceDiagramItemProvider(this);
        }

        return sequenceDiagramItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.RootPackage} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RootPackageItemProvider rootPackageItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.RootPackage}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRootPackageAdapter() {
        if (rootPackageItemProvider == null) {
            rootPackageItemProvider = new RootPackageItemProvider(this);
        }

        return rootPackageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.Actor} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ActorItemProvider actorItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.Actor}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createActorAdapter() {
        if (actorItemProvider == null) {
            actorItemProvider = new ActorItemProvider(this);
        }

        return actorItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.ActorClassifierMapping} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ActorClassifierMappingItemProvider actorClassifierMappingItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.ActorClassifierMapping}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createActorClassifierMappingAdapter() {
        if (actorClassifierMappingItemProvider == null) {
            actorClassifierMappingItemProvider = new ActorClassifierMappingItemProvider(this);
        }

        return actorClassifierMappingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.Fragment} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected FragmentItemProvider fragmentItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.Fragment}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createFragmentAdapter() {
        if (fragmentItemProvider == null) {
            fragmentItemProvider = new FragmentItemProvider(this);
        }

        return fragmentItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.Message} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected MessageItemProvider messageItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.Message}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMessageAdapter() {
        if (messageItemProvider == null) {
            messageItemProvider = new MessageItemProvider(this);
        }

        return messageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.StandardMessage} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected StandardMessageItemProvider standardMessageItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.StandardMessage}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createStandardMessageAdapter() {
        if (standardMessageItemProvider == null) {
            standardMessageItemProvider = new StandardMessageItemProvider(this);
        }

        return standardMessageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.ResponseMessage} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ResponseMessageItemProvider responseMessageItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.ResponseMessage}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createResponseMessageAdapter() {
        if (responseMessageItemProvider == null) {
            responseMessageItemProvider = new ResponseMessageItemProvider(this);
        }

        return responseMessageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.CreateMessage} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CreateMessageItemProvider createMessageItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.CreateMessage}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCreateMessageAdapter() {
        if (createMessageItemProvider == null) {
            createMessageItemProvider = new CreateMessageItemProvider(this);
        }

        return createMessageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.DestructionMessage} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DestructionMessageItemProvider destructionMessageItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.DestructionMessage}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDestructionMessageAdapter() {
        if (destructionMessageItemProvider == null) {
            destructionMessageItemProvider = new DestructionMessageItemProvider(this);
        }

        return destructionMessageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.OccurenceSpecification} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OccurenceSpecificationItemProvider occurenceSpecificationItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.OccurenceSpecification}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOccurenceSpecificationAdapter() {
        if (occurenceSpecificationItemProvider == null) {
            occurenceSpecificationItemProvider = new OccurenceSpecificationItemProvider(this);
        }

        return occurenceSpecificationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.DestructionOccurenceSpecification} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DestructionOccurenceSpecificationItemProvider destructionOccurenceSpecificationItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.DestructionOccurenceSpecification}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDestructionOccurenceSpecificationAdapter() {
        if (destructionOccurenceSpecificationItemProvider == null) {
            destructionOccurenceSpecificationItemProvider = new DestructionOccurenceSpecificationItemProvider(this);
        }

        return destructionOccurenceSpecificationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.OrderedFragmentContainer} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OrderedFragmentContainerItemProvider orderedFragmentContainerItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.OrderedFragmentContainer}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOrderedFragmentContainerAdapter() {
        if (orderedFragmentContainerItemProvider == null) {
            orderedFragmentContainerItemProvider = new OrderedFragmentContainerItemProvider(this);
        }

        return orderedFragmentContainerItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.Alternative} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AlternativeItemProvider alternativeItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.Alternative}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAlternativeAdapter() {
        if (alternativeItemProvider == null) {
            alternativeItemProvider = new AlternativeItemProvider(this);
        }

        return alternativeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.Option} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OptionItemProvider optionItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.Option}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOptionAdapter() {
        if (optionItemProvider == null) {
            optionItemProvider = new OptionItemProvider(this);
        }

        return optionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.CoRegion} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CoRegionItemProvider coRegionItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.CoRegion}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCoRegionAdapter() {
        if (coRegionItemProvider == null) {
            coRegionItemProvider = new CoRegionItemProvider(this);
        }

        return coRegionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.Parallel} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ParallelItemProvider parallelItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.Parallel}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createParallelAdapter() {
        if (parallelItemProvider == null) {
            parallelItemProvider = new ParallelItemProvider(this);
        }

        return parallelItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.Critical} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CriticalItemProvider criticalItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.Critical}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCriticalAdapter() {
        if (criticalItemProvider == null) {
            criticalItemProvider = new CriticalItemProvider(this);
        }

        return criticalItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.Loop} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LoopItemProvider loopItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.Loop}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLoopAdapter() {
        if (loopItemProvider == null) {
            loopItemProvider = new LoopItemProvider(this);
        }

        return loopItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.Condition} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ConditionItemProvider conditionItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.Condition}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createConditionAdapter() {
        if (conditionItemProvider == null) {
            conditionItemProvider = new ConditionItemProvider(this);
        }

        return conditionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.TimeObservation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TimeObservationItemProvider timeObservationItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.TimeObservation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTimeObservationAdapter() {
        if (timeObservationItemProvider == null) {
            timeObservationItemProvider = new TimeObservationItemProvider(this);
        }

        return timeObservationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.DurationObservation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DurationObservationItemProvider durationObservationItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.DurationObservation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDurationObservationAdapter() {
        if (durationObservationItemProvider == null) {
            durationObservationItemProvider = new DurationObservationItemProvider(this);
        }

        return durationObservationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.Constraint} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ConstraintItemProvider constraintItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.Constraint}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createConstraintAdapter() {
        if (constraintItemProvider == null) {
            constraintItemProvider = new ConstraintItemProvider(this);
        }

        return constraintItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.TimeConstraint} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TimeConstraintItemProvider timeConstraintItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.TimeConstraint}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTimeConstraintAdapter() {
        if (timeConstraintItemProvider == null) {
            timeConstraintItemProvider = new TimeConstraintItemProvider(this);
        }

        return timeConstraintItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.DurationConstraint} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DurationConstraintItemProvider durationConstraintItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.DurationConstraint}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDurationConstraintAdapter() {
        if (durationConstraintItemProvider == null) {
            durationConstraintItemProvider = new DurationConstraintItemProvider(this);
        }

        return durationConstraintItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.ExplicitArrivalOccurenceReference} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ExplicitArrivalOccurenceReferenceItemProvider explicitArrivalOccurenceReferenceItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.ExplicitArrivalOccurenceReference}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createExplicitArrivalOccurenceReferenceAdapter() {
        if (explicitArrivalOccurenceReferenceItemProvider == null) {
            explicitArrivalOccurenceReferenceItemProvider = new ExplicitArrivalOccurenceReferenceItemProvider(this);
        }

        return explicitArrivalOccurenceReferenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.ImplicitMessageOccurenceSpecification} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ImplicitMessageOccurenceSpecificationItemProvider implicitMessageOccurenceSpecificationItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.ImplicitMessageOccurenceSpecification}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createImplicitMessageOccurenceSpecificationAdapter() {
        if (implicitMessageOccurenceSpecificationItemProvider == null) {
            implicitMessageOccurenceSpecificationItemProvider = new ImplicitMessageOccurenceSpecificationItemProvider(this);
        }

        return implicitMessageOccurenceSpecificationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.ExplicitArrivalOccurenceSpecification} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ExplicitArrivalOccurenceSpecificationItemProvider explicitArrivalOccurenceSpecificationItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.ExplicitArrivalOccurenceSpecification}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createExplicitArrivalOccurenceSpecificationAdapter() {
        if (explicitArrivalOccurenceSpecificationItemProvider == null) {
            explicitArrivalOccurenceSpecificationItemProvider = new ExplicitArrivalOccurenceSpecificationItemProvider(this);
        }

        return explicitArrivalOccurenceSpecificationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.PointInTimeSelector} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PointInTimeSelectorItemProvider pointInTimeSelectorItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.PointInTimeSelector}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPointInTimeSelectorAdapter() {
        if (pointInTimeSelectorItemProvider == null) {
            pointInTimeSelectorItemProvider = new PointInTimeSelectorItemProvider(this);
        }

        return pointInTimeSelectorItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.TimeIntervalSelector} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TimeIntervalSelectorItemProvider timeIntervalSelectorItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.TimeIntervalSelector}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTimeIntervalSelectorAdapter() {
        if (timeIntervalSelectorItemProvider == null) {
            timeIntervalSelectorItemProvider = new TimeIntervalSelectorItemProvider(this);
        }

        return timeIntervalSelectorItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.BiPointInTimeTimeIntervalSelector} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected BiPointInTimeTimeIntervalSelectorItemProvider biPointInTimeTimeIntervalSelectorItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.BiPointInTimeTimeIntervalSelector}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createBiPointInTimeTimeIntervalSelectorAdapter() {
        if (biPointInTimeTimeIntervalSelectorItemProvider == null) {
            biPointInTimeTimeIntervalSelectorItemProvider = new BiPointInTimeTimeIntervalSelectorItemProvider(this);
        }

        return biPointInTimeTimeIntervalSelectorItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.FragmentTimeIntervalSelector} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected FragmentTimeIntervalSelectorItemProvider fragmentTimeIntervalSelectorItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.FragmentTimeIntervalSelector}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createFragmentTimeIntervalSelectorAdapter() {
        if (fragmentTimeIntervalSelectorItemProvider == null) {
            fragmentTimeIntervalSelectorItemProvider = new FragmentTimeIntervalSelectorItemProvider(this);
        }

        return fragmentTimeIntervalSelectorItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.Reference} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ReferenceItemProvider referenceItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.Reference}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createReferenceAdapter() {
        if (referenceItemProvider == null) {
            referenceItemProvider = new ReferenceItemProvider(this);
        }

        return referenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link de.cooperateproject.modeling.textual.sequence.sequence.NonInstantaneousFragment} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected NonInstantaneousFragmentItemProvider nonInstantaneousFragmentItemProvider;

    /**
     * This creates an adapter for a {@link de.cooperateproject.modeling.textual.sequence.sequence.NonInstantaneousFragment}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createNonInstantaneousFragmentAdapter() {
        if (nonInstantaneousFragmentItemProvider == null) {
            nonInstantaneousFragmentItemProvider = new NonInstantaneousFragmentItemProvider(this);
        }

        return nonInstantaneousFragmentItemProvider;
    }

    /**
     * This returns the root adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public ComposeableAdapterFactory getRootAdapterFactory() {
        return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
    }

    /**
     * This sets the composed adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public boolean isFactoryForType(Object type) {
        return supportedTypes.contains(type) || super.isFactoryForType(type);
    }

    /**
     * This implementation substitutes the factory itself as the key for the adapter.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter adapt(Notifier notifier, Object type) {
        return super.adapt(notifier, this);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Object adapt(Object object, Object type) {
        if (isFactoryForType(type)) {
            Object adapter = super.adapt(object, type);
            if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
                return adapter;
            }
        }

        return null;
    }

    /**
     * This adds a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void addListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.addListener(notifyChangedListener);
    }

    /**
     * This removes a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void removeListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.removeListener(notifyChangedListener);
    }

    /**
     * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void fireNotifyChanged(Notification notification) {
        changeNotifier.fireNotifyChanged(notification);

        if (parentAdapterFactory != null) {
            parentAdapterFactory.fireNotifyChanged(notification);
        }
    }

    /**
     * This disposes all of the item providers created by this factory. 
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void dispose() {
        if (sequenceDiagramItemProvider != null) sequenceDiagramItemProvider.dispose();
        if (rootPackageItemProvider != null) rootPackageItemProvider.dispose();
        if (actorItemProvider != null) actorItemProvider.dispose();
        if (actorClassifierMappingItemProvider != null) actorClassifierMappingItemProvider.dispose();
        if (fragmentItemProvider != null) fragmentItemProvider.dispose();
        if (messageItemProvider != null) messageItemProvider.dispose();
        if (standardMessageItemProvider != null) standardMessageItemProvider.dispose();
        if (responseMessageItemProvider != null) responseMessageItemProvider.dispose();
        if (createMessageItemProvider != null) createMessageItemProvider.dispose();
        if (destructionMessageItemProvider != null) destructionMessageItemProvider.dispose();
        if (occurenceSpecificationItemProvider != null) occurenceSpecificationItemProvider.dispose();
        if (destructionOccurenceSpecificationItemProvider != null) destructionOccurenceSpecificationItemProvider.dispose();
        if (orderedFragmentContainerItemProvider != null) orderedFragmentContainerItemProvider.dispose();
        if (alternativeItemProvider != null) alternativeItemProvider.dispose();
        if (optionItemProvider != null) optionItemProvider.dispose();
        if (coRegionItemProvider != null) coRegionItemProvider.dispose();
        if (parallelItemProvider != null) parallelItemProvider.dispose();
        if (criticalItemProvider != null) criticalItemProvider.dispose();
        if (loopItemProvider != null) loopItemProvider.dispose();
        if (conditionItemProvider != null) conditionItemProvider.dispose();
        if (timeObservationItemProvider != null) timeObservationItemProvider.dispose();
        if (durationObservationItemProvider != null) durationObservationItemProvider.dispose();
        if (constraintItemProvider != null) constraintItemProvider.dispose();
        if (timeConstraintItemProvider != null) timeConstraintItemProvider.dispose();
        if (durationConstraintItemProvider != null) durationConstraintItemProvider.dispose();
        if (explicitArrivalOccurenceReferenceItemProvider != null) explicitArrivalOccurenceReferenceItemProvider.dispose();
        if (implicitMessageOccurenceSpecificationItemProvider != null) implicitMessageOccurenceSpecificationItemProvider.dispose();
        if (explicitArrivalOccurenceSpecificationItemProvider != null) explicitArrivalOccurenceSpecificationItemProvider.dispose();
        if (pointInTimeSelectorItemProvider != null) pointInTimeSelectorItemProvider.dispose();
        if (timeIntervalSelectorItemProvider != null) timeIntervalSelectorItemProvider.dispose();
        if (biPointInTimeTimeIntervalSelectorItemProvider != null) biPointInTimeTimeIntervalSelectorItemProvider.dispose();
        if (fragmentTimeIntervalSelectorItemProvider != null) fragmentTimeIntervalSelectorItemProvider.dispose();
        if (referenceItemProvider != null) referenceItemProvider.dispose();
        if (nonInstantaneousFragmentItemProvider != null) nonInstantaneousFragmentItemProvider.dispose();
    }

}
