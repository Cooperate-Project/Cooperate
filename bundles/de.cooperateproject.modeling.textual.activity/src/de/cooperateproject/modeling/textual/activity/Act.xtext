grammar de.cooperateproject.modeling.textual.activity.Act with org.eclipse.xtext.common.Terminals

import "platform:/resource/de.cooperateproject.modeling.textual.activity.metamodel/model/act.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore" as uml
import "platform:/resource/de.cooperateproject.modeling.textual.common.metamodel/model/textualCommons.ecore" as textualCommons

ActivityDiagram returns ActivityDiagram:
	{ActivityDiagram}
		'@start-actd' title=STRING
		rootPackage=RootPackage
		'@end-actd'
;

RootPackage:
	{RootPackage} 
	('rootPackage' name=FQN)?
	activity=Activity
	;
	
Activity: 
	{Activity}
	('activityName' name=STRING)?
	children+=Swimlane*
	nodes+=Node*
	flows+=Flow*
;


Node returns Node:
	ActionNode | ControlNode
;

ActionNode returns ActionNode:
	'actn'(name = ID | alias = ID 'as' name = STRING)
;

ControlNode returns ControlNode:
	InitialNode | FinalNode | FlowFinalNode | DecisionNode | MergeNode | ForkNode | JoinNode
;

InitialNode returns InitialNode:
	'ini' (name = ID)
;

FinalNode returns FinalNode:
	'fin' (name = ID)
;

FlowFinalNode returns FlowFinalNode:
	'ffin' (name = ID)
;

DecisionNode returns DecisionNode:
	'decn' (name = ID)
;

MergeNode returns MergeNode:
	'mrgn' (name = ID)
;

ForkNode returns ForkNode:
	'fork' (name = ID)
;

JoinNode returns JoinNode:
	'join' (name = ID)
;

Flow returns Flow:
	// TODO: Reenable Multiflows
	//'flw' '(' relatedElements+=[Node|FQN] (',' relatedElements+=[Node|FQN])+ ')' ('[' condition=STRING ']')?
	'flw' '(' source=[Node|FQN] ',' target=[Node|FQN] ')' ('[' name=STRING ']')?
;

Swimlane returns Swimlane:
	'swl' (name = ID) '{'
		nodes+=Node*
	'}'
;

FQN:
    ID ("." ID)*
;
