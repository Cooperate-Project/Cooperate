/*
 * generated by Xtext 2.12.0
 */
grammar InternalAct;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.cooperateproject.modeling.textual.activity.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.cooperateproject.modeling.textual.activity.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cooperateproject.modeling.textual.activity.services.ActGrammarAccess;

}

@parser::members {

 	private ActGrammarAccess grammarAccess;

    public InternalActParser(TokenStream input, ActGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ActivityDiagram";
   	}

   	@Override
   	protected ActGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleActivityDiagram
entryRuleActivityDiagram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivityDiagramRule()); }
	iv_ruleActivityDiagram=ruleActivityDiagram
	{ $current=$iv_ruleActivityDiagram.current; }
	EOF;

// Rule ActivityDiagram
ruleActivityDiagram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getActivityDiagramAccess().getActivityDiagramAction_0(),
					$current);
			}
		)
		otherlv_1='@start-actd'
		{
			newLeafNode(otherlv_1, grammarAccess.getActivityDiagramAccess().getStartActdKeyword_1());
		}
		(
			(
				lv_title_2_0=RULE_STRING
				{
					newLeafNode(lv_title_2_0, grammarAccess.getActivityDiagramAccess().getTitleSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActivityDiagramRule());
					}
					setWithLastConsumed(
						$current,
						"title",
						lv_title_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getActivityDiagramAccess().getRootPackageRootPackageParserRuleCall_3_0());
				}
				lv_rootPackage_3_0=ruleRootPackage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActivityDiagramRule());
					}
					set(
						$current,
						"rootPackage",
						lv_rootPackage_3_0,
						"de.cooperateproject.modeling.textual.activity.Act.RootPackage");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='@end-actd'
		{
			newLeafNode(otherlv_4, grammarAccess.getActivityDiagramAccess().getEndActdKeyword_4());
		}
	)
;

// Entry rule entryRuleRootPackage
entryRuleRootPackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRootPackageRule()); }
	iv_ruleRootPackage=ruleRootPackage
	{ $current=$iv_ruleRootPackage.current; }
	EOF;

// Rule RootPackage
ruleRootPackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRootPackageAccess().getRootPackageAction_0(),
					$current);
			}
		)
		(
			otherlv_1='rootPackage'
			{
				newLeafNode(otherlv_1, grammarAccess.getRootPackageAccess().getRootPackageKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRootPackageAccess().getNameFQNParserRuleCall_1_1_0());
					}
					lv_name_2_0=ruleFQN
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRootPackageRule());
						}
						set(
							$current,
							"name",
							lv_name_2_0,
							"de.cooperateproject.modeling.textual.activity.Act.FQN");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_3='activityName'
			{
				newLeafNode(otherlv_3, grammarAccess.getRootPackageAccess().getActivityNameKeyword_2_0());
			}
			(
				(
					lv_activityName_4_0=RULE_STRING
					{
						newLeafNode(lv_activityName_4_0, grammarAccess.getRootPackageAccess().getActivityNameSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRootPackageRule());
						}
						setWithLastConsumed(
							$current,
							"activityName",
							lv_activityName_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRootPackageAccess().getNodesNodeParserRuleCall_3_0());
				}
				lv_nodes_5_0=ruleNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootPackageRule());
					}
					add(
						$current,
						"nodes",
						lv_nodes_5_0,
						"de.cooperateproject.modeling.textual.activity.Act.Node");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRootPackageAccess().getRelationsFlowParserRuleCall_4_0());
				}
				lv_relations_6_0=ruleFlow
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootPackageRule());
					}
					add(
						$current,
						"relations",
						lv_relations_6_0,
						"de.cooperateproject.modeling.textual.activity.Act.Flow");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	iv_ruleNode=ruleNode
	{ $current=$iv_ruleNode.current; }
	EOF;

// Rule Node
ruleNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNodeAccess().getActionNodeParserRuleCall_0());
		}
		this_ActionNode_0=ruleActionNode
		{
			$current = $this_ActionNode_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNodeAccess().getControlNodeParserRuleCall_1());
		}
		this_ControlNode_1=ruleControlNode
		{
			$current = $this_ControlNode_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleActionNode
entryRuleActionNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionNodeRule()); }
	iv_ruleActionNode=ruleActionNode
	{ $current=$iv_ruleActionNode.current; }
	EOF;

// Rule ActionNode
ruleActionNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='actn'
		{
			newLeafNode(otherlv_0, grammarAccess.getActionNodeAccess().getActnKeyword_0());
		}
		(
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getActionNodeAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionNodeRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			    |
			(
				(
					(
						lv_name_2_0=RULE_ID
						{
							newLeafNode(lv_name_2_0, grammarAccess.getActionNodeAccess().getNameIDTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActionNodeRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_2_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				otherlv_3='as'
				{
					newLeafNode(otherlv_3, grammarAccess.getActionNodeAccess().getAsKeyword_1_1_1());
				}
				(
					(
						lv_alias_4_0=RULE_STRING
						{
							newLeafNode(lv_alias_4_0, grammarAccess.getActionNodeAccess().getAliasSTRINGTerminalRuleCall_1_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActionNodeRule());
							}
							setWithLastConsumed(
								$current,
								"alias",
								lv_alias_4_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleControlNode
entryRuleControlNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControlNodeRule()); }
	iv_ruleControlNode=ruleControlNode
	{ $current=$iv_ruleControlNode.current; }
	EOF;

// Rule ControlNode
ruleControlNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getControlNodeAccess().getInitialNodeParserRuleCall_0());
		}
		this_InitialNode_0=ruleInitialNode
		{
			$current = $this_InitialNode_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getControlNodeAccess().getFinalNodeParserRuleCall_1());
		}
		this_FinalNode_1=ruleFinalNode
		{
			$current = $this_FinalNode_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getControlNodeAccess().getFlowFinalNodeParserRuleCall_2());
		}
		this_FlowFinalNode_2=ruleFlowFinalNode
		{
			$current = $this_FlowFinalNode_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getControlNodeAccess().getDecisionNodeParserRuleCall_3());
		}
		this_DecisionNode_3=ruleDecisionNode
		{
			$current = $this_DecisionNode_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getControlNodeAccess().getMergeNodeParserRuleCall_4());
		}
		this_MergeNode_4=ruleMergeNode
		{
			$current = $this_MergeNode_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInitialNode
entryRuleInitialNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitialNodeRule()); }
	iv_ruleInitialNode=ruleInitialNode
	{ $current=$iv_ruleInitialNode.current; }
	EOF;

// Rule InitialNode
ruleInitialNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInitialNodeAccess().getInitialNodeAction_0(),
					$current);
			}
		)
		otherlv_1='ini'
		{
			newLeafNode(otherlv_1, grammarAccess.getInitialNodeAccess().getIniKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getInitialNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitialNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
	)
;

// Entry rule entryRuleFinalNode
entryRuleFinalNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFinalNodeRule()); }
	iv_ruleFinalNode=ruleFinalNode
	{ $current=$iv_ruleFinalNode.current; }
	EOF;

// Rule FinalNode
ruleFinalNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFinalNodeAccess().getFinalNodeAction_0(),
					$current);
			}
		)
		otherlv_1='fin'
		{
			newLeafNode(otherlv_1, grammarAccess.getFinalNodeAccess().getFinKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFinalNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFinalNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
	)
;

// Entry rule entryRuleFlowFinalNode
entryRuleFlowFinalNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFlowFinalNodeRule()); }
	iv_ruleFlowFinalNode=ruleFlowFinalNode
	{ $current=$iv_ruleFlowFinalNode.current; }
	EOF;

// Rule FlowFinalNode
ruleFlowFinalNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFlowFinalNodeAccess().getFlowFinalNodeAction_0(),
					$current);
			}
		)
		otherlv_1='ffin'
		{
			newLeafNode(otherlv_1, grammarAccess.getFlowFinalNodeAccess().getFfinKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFlowFinalNodeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlowFinalNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
	)
;

// Entry rule entryRuleDecisionNode
entryRuleDecisionNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDecisionNodeRule()); }
	iv_ruleDecisionNode=ruleDecisionNode
	{ $current=$iv_ruleDecisionNode.current; }
	EOF;

// Rule DecisionNode
ruleDecisionNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='decn'
		{
			newLeafNode(otherlv_0, grammarAccess.getDecisionNodeAccess().getDecnKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDecisionNodeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDecisionNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleMergeNode
entryRuleMergeNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMergeNodeRule()); }
	iv_ruleMergeNode=ruleMergeNode
	{ $current=$iv_ruleMergeNode.current; }
	EOF;

// Rule MergeNode
ruleMergeNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='mrgn'
		{
			newLeafNode(otherlv_0, grammarAccess.getMergeNodeAccess().getMrgnKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMergeNodeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMergeNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleFlow
entryRuleFlow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFlowRule()); }
	iv_ruleFlow=ruleFlow
	{ $current=$iv_ruleFlow.current; }
	EOF;

// Rule Flow
ruleFlow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='flw'
		{
			newLeafNode(otherlv_0, grammarAccess.getFlowAccess().getFlwKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFlowAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlowRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getFlowAccess().getRelatedElementsNodeCrossReference_2_0());
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getFlowAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFlowRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getFlowAccess().getRelatedElementsNodeCrossReference_3_1_0());
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFlowAccess().getRightParenthesisKeyword_4());
		}
		(
			otherlv_6='['
			{
				newLeafNode(otherlv_6, grammarAccess.getFlowAccess().getLeftSquareBracketKeyword_5_0());
			}
			(
				(
					lv_condition_7_0=RULE_ID
					{
						newLeafNode(lv_condition_7_0, grammarAccess.getFlowAccess().getConditionIDTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFlowRule());
						}
						setWithLastConsumed(
							$current,
							"condition",
							lv_condition_7_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_8=']'
			{
				newLeafNode(otherlv_8, grammarAccess.getFlowAccess().getRightSquareBracketKeyword_5_2());
			}
		)?
	)
;

// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFQNRule()); }
	iv_ruleFQN=ruleFQN
	{ $current=$iv_ruleFQN.current.getText(); }
	EOF;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getFQNAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFQNAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
