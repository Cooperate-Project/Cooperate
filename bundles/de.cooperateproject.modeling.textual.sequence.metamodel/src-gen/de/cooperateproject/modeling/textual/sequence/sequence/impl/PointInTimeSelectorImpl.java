/**
 * generated by Xtext 2.11.0
 */
package de.cooperateproject.modeling.textual.sequence.sequence.impl;

import de.cooperateproject.modeling.textual.sequence.sequence.PointInTime;
import de.cooperateproject.modeling.textual.sequence.sequence.PointInTimeSelector;
import de.cooperateproject.modeling.textual.sequence.sequence.SequencePackage;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.internal.cdo.CDOObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Point In Time Selector</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.cooperateproject.modeling.textual.sequence.sequence.impl.PointInTimeSelectorImpl#getPointInTime <em>Point In Time</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PointInTimeSelectorImpl extends CDOObjectImpl implements PointInTimeSelector {
    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PointInTimeSelectorImpl() {
        super();
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    protected EClass eStaticClass() {
        return SequencePackage.Literals.POINT_IN_TIME_SELECTOR;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    protected int eStaticFeatureCount() {
        return 0;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public PointInTime<?> getPointInTime() {
        return (PointInTime<?>)eDynamicGet(SequencePackage.POINT_IN_TIME_SELECTOR__POINT_IN_TIME, SequencePackage.Literals.POINT_IN_TIME_SELECTOR__POINT_IN_TIME, true, true);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public PointInTime<?> basicGetPointInTime() {
        return (PointInTime<?>)eDynamicGet(SequencePackage.POINT_IN_TIME_SELECTOR__POINT_IN_TIME, SequencePackage.Literals.POINT_IN_TIME_SELECTOR__POINT_IN_TIME, false, true);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setPointInTime(PointInTime<?> newPointInTime) {
        eDynamicSet(SequencePackage.POINT_IN_TIME_SELECTOR__POINT_IN_TIME, SequencePackage.Literals.POINT_IN_TIME_SELECTOR__POINT_IN_TIME, newPointInTime);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Object eGet(int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case SequencePackage.POINT_IN_TIME_SELECTOR__POINT_IN_TIME:
                if (resolve) return getPointInTime();
                return basicGetPointInTime();
        }
        return super.eGet(featureID, resolve, coreType);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void eSet(int featureID, Object newValue) {
        switch (featureID) {
            case SequencePackage.POINT_IN_TIME_SELECTOR__POINT_IN_TIME:
                setPointInTime((PointInTime<?>)newValue);
                return;
        }
        super.eSet(featureID, newValue);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void eUnset(int featureID) {
        switch (featureID) {
            case SequencePackage.POINT_IN_TIME_SELECTOR__POINT_IN_TIME:
                setPointInTime((PointInTime<?>)null);
                return;
        }
        super.eUnset(featureID);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public boolean eIsSet(int featureID) {
        switch (featureID) {
            case SequencePackage.POINT_IN_TIME_SELECTOR__POINT_IN_TIME:
                return basicGetPointInTime() != null;
        }
        return super.eIsSet(featureID);
    }

} //PointInTimeSelectorImpl
