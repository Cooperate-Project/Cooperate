/**
 * generated by Xtext 2.11.0
 */
package de.cooperateproject.modeling.textual.sequence.sequence.impl;

import de.cooperateproject.modeling.textual.sequence.sequence.ExplicitArrivalOccurenceReference;
import de.cooperateproject.modeling.textual.sequence.sequence.ExplicitArrivalOccurenceSpecification;
import de.cooperateproject.modeling.textual.sequence.sequence.OccurenceReference;
import de.cooperateproject.modeling.textual.sequence.sequence.OccurenceSpecification;
import de.cooperateproject.modeling.textual.sequence.sequence.SequencePackage;

import java.lang.reflect.InvocationTargetException;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.uml2.uml.MessageOccurrenceSpecification;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Explicit Arrival Occurence Reference</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.cooperateproject.modeling.textual.sequence.sequence.impl.ExplicitArrivalOccurenceReferenceImpl#getExplicitOccurenceSpecification <em>Explicit Occurence Specification</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExplicitArrivalOccurenceReferenceImpl extends OccurenceReferenceImpl<OccurenceSpecification<MessageOccurrenceSpecification>> implements ExplicitArrivalOccurenceReference {
    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ExplicitArrivalOccurenceReferenceImpl() {
        super();
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    protected EClass eStaticClass() {
        return SequencePackage.Literals.EXPLICIT_ARRIVAL_OCCURENCE_REFERENCE;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public ExplicitArrivalOccurenceSpecification getExplicitOccurenceSpecification() {
        return (ExplicitArrivalOccurenceSpecification)eDynamicGet(SequencePackage.EXPLICIT_ARRIVAL_OCCURENCE_REFERENCE__EXPLICIT_OCCURENCE_SPECIFICATION, SequencePackage.Literals.EXPLICIT_ARRIVAL_OCCURENCE_REFERENCE__EXPLICIT_OCCURENCE_SPECIFICATION, true, true);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public ExplicitArrivalOccurenceSpecification basicGetExplicitOccurenceSpecification() {
        return (ExplicitArrivalOccurenceSpecification)eDynamicGet(SequencePackage.EXPLICIT_ARRIVAL_OCCURENCE_REFERENCE__EXPLICIT_OCCURENCE_SPECIFICATION, SequencePackage.Literals.EXPLICIT_ARRIVAL_OCCURENCE_REFERENCE__EXPLICIT_OCCURENCE_SPECIFICATION, false, true);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public NotificationChain basicSetExplicitOccurenceSpecification(ExplicitArrivalOccurenceSpecification newExplicitOccurenceSpecification, NotificationChain msgs) {
        msgs = eDynamicInverseAdd((InternalEObject)newExplicitOccurenceSpecification, SequencePackage.EXPLICIT_ARRIVAL_OCCURENCE_REFERENCE__EXPLICIT_OCCURENCE_SPECIFICATION, msgs);
        return msgs;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setExplicitOccurenceSpecification(ExplicitArrivalOccurenceSpecification newExplicitOccurenceSpecification) {
        eDynamicSet(SequencePackage.EXPLICIT_ARRIVAL_OCCURENCE_REFERENCE__EXPLICIT_OCCURENCE_SPECIFICATION, SequencePackage.Literals.EXPLICIT_ARRIVAL_OCCURENCE_REFERENCE__EXPLICIT_OCCURENCE_SPECIFICATION, newExplicitOccurenceSpecification);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public OccurenceSpecification<MessageOccurrenceSpecification> getOccurenceSpecification() {
        return this.getExplicitOccurenceSpecification();
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case SequencePackage.EXPLICIT_ARRIVAL_OCCURENCE_REFERENCE__EXPLICIT_OCCURENCE_SPECIFICATION:
                ExplicitArrivalOccurenceSpecification explicitOccurenceSpecification = basicGetExplicitOccurenceSpecification();
                if (explicitOccurenceSpecification != null)
                    msgs = ((InternalEObject)explicitOccurenceSpecification).eInverseRemove(this, SequencePackage.EXPLICIT_ARRIVAL_OCCURENCE_SPECIFICATION__EXPLICIT_OCCURENCE_REFERENCE, ExplicitArrivalOccurenceSpecification.class, msgs);
                return basicSetExplicitOccurenceSpecification((ExplicitArrivalOccurenceSpecification)otherEnd, msgs);
        }
        return super.eInverseAdd(otherEnd, featureID, msgs);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case SequencePackage.EXPLICIT_ARRIVAL_OCCURENCE_REFERENCE__EXPLICIT_OCCURENCE_SPECIFICATION:
                return basicSetExplicitOccurenceSpecification(null, msgs);
        }
        return super.eInverseRemove(otherEnd, featureID, msgs);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Object eGet(int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case SequencePackage.EXPLICIT_ARRIVAL_OCCURENCE_REFERENCE__EXPLICIT_OCCURENCE_SPECIFICATION:
                if (resolve) return getExplicitOccurenceSpecification();
                return basicGetExplicitOccurenceSpecification();
        }
        return super.eGet(featureID, resolve, coreType);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void eSet(int featureID, Object newValue) {
        switch (featureID) {
            case SequencePackage.EXPLICIT_ARRIVAL_OCCURENCE_REFERENCE__EXPLICIT_OCCURENCE_SPECIFICATION:
                setExplicitOccurenceSpecification((ExplicitArrivalOccurenceSpecification)newValue);
                return;
        }
        super.eSet(featureID, newValue);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void eUnset(int featureID) {
        switch (featureID) {
            case SequencePackage.EXPLICIT_ARRIVAL_OCCURENCE_REFERENCE__EXPLICIT_OCCURENCE_SPECIFICATION:
                setExplicitOccurenceSpecification((ExplicitArrivalOccurenceSpecification)null);
                return;
        }
        super.eUnset(featureID);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public boolean eIsSet(int featureID) {
        switch (featureID) {
            case SequencePackage.EXPLICIT_ARRIVAL_OCCURENCE_REFERENCE__EXPLICIT_OCCURENCE_SPECIFICATION:
                return basicGetExplicitOccurenceSpecification() != null;
        }
        return super.eIsSet(featureID);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public int eDerivedOperationID(int baseOperationID, Class<?> baseClass) {
        if (baseClass == OccurenceReference.class) {
            switch (baseOperationID) {
                case SequencePackage.OCCURENCE_REFERENCE___GET_OCCURENCE_SPECIFICATION: return SequencePackage.EXPLICIT_ARRIVAL_OCCURENCE_REFERENCE___GET_OCCURENCE_SPECIFICATION;
                default: return super.eDerivedOperationID(baseOperationID, baseClass);
            }
        }
        return super.eDerivedOperationID(baseOperationID, baseClass);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Object eInvoke(int operationID, EList<?> arguments) throws InvocationTargetException {
        switch (operationID) {
            case SequencePackage.EXPLICIT_ARRIVAL_OCCURENCE_REFERENCE___GET_OCCURENCE_SPECIFICATION:
                return getOccurenceSpecification();
        }
        return super.eInvoke(operationID, arguments);
    }

} //ExplicitArrivalOccurenceReferenceImpl
