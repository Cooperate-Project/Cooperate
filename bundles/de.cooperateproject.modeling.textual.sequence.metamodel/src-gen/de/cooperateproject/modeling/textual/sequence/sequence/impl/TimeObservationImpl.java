/**
 * generated by Xtext 2.11.0
 */
package de.cooperateproject.modeling.textual.sequence.sequence.impl;

import de.cooperateproject.modeling.textual.sequence.sequence.PointInTimeSelector;
import de.cooperateproject.modeling.textual.sequence.sequence.SequencePackage;
import de.cooperateproject.modeling.textual.sequence.sequence.TimeObservation;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Time Observation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.cooperateproject.modeling.textual.sequence.sequence.impl.TimeObservationImpl#getTime <em>Time</em>}</li>
 *   <li>{@link de.cooperateproject.modeling.textual.sequence.sequence.impl.TimeObservationImpl#getEvent <em>Event</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TimeObservationImpl extends ObservationImpl implements TimeObservation {
    /**
     * The default value of the '{@link #getTime() <em>Time</em>}' attribute.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see #getTime()
     * @generated
     * @ordered
     */
    protected static final String TIME_EDEFAULT = null;

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TimeObservationImpl() {
        super();
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    protected EClass eStaticClass() {
        return SequencePackage.Literals.TIME_OBSERVATION;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public String getTime() {
        return (String)eDynamicGet(SequencePackage.TIME_OBSERVATION__TIME, SequencePackage.Literals.TIME_OBSERVATION__TIME, true, true);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setTime(String newTime) {
        eDynamicSet(SequencePackage.TIME_OBSERVATION__TIME, SequencePackage.Literals.TIME_OBSERVATION__TIME, newTime);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public PointInTimeSelector getEvent() {
        return (PointInTimeSelector)eDynamicGet(SequencePackage.TIME_OBSERVATION__EVENT, SequencePackage.Literals.TIME_OBSERVATION__EVENT, true, true);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public NotificationChain basicSetEvent(PointInTimeSelector newEvent, NotificationChain msgs) {
        msgs = eDynamicInverseAdd((InternalEObject)newEvent, SequencePackage.TIME_OBSERVATION__EVENT, msgs);
        return msgs;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setEvent(PointInTimeSelector newEvent) {
        eDynamicSet(SequencePackage.TIME_OBSERVATION__EVENT, SequencePackage.Literals.TIME_OBSERVATION__EVENT, newEvent);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case SequencePackage.TIME_OBSERVATION__EVENT:
                return basicSetEvent(null, msgs);
        }
        return super.eInverseRemove(otherEnd, featureID, msgs);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Object eGet(int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case SequencePackage.TIME_OBSERVATION__TIME:
                return getTime();
            case SequencePackage.TIME_OBSERVATION__EVENT:
                return getEvent();
        }
        return super.eGet(featureID, resolve, coreType);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void eSet(int featureID, Object newValue) {
        switch (featureID) {
            case SequencePackage.TIME_OBSERVATION__TIME:
                setTime((String)newValue);
                return;
            case SequencePackage.TIME_OBSERVATION__EVENT:
                setEvent((PointInTimeSelector)newValue);
                return;
        }
        super.eSet(featureID, newValue);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void eUnset(int featureID) {
        switch (featureID) {
            case SequencePackage.TIME_OBSERVATION__TIME:
                setTime(TIME_EDEFAULT);
                return;
            case SequencePackage.TIME_OBSERVATION__EVENT:
                setEvent((PointInTimeSelector)null);
                return;
        }
        super.eUnset(featureID);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public boolean eIsSet(int featureID) {
        switch (featureID) {
            case SequencePackage.TIME_OBSERVATION__TIME:
                return TIME_EDEFAULT == null ? getTime() != null : !TIME_EDEFAULT.equals(getTime());
            case SequencePackage.TIME_OBSERVATION__EVENT:
                return getEvent() != null;
        }
        return super.eIsSet(featureID);
    }

} //TimeObservationImpl
