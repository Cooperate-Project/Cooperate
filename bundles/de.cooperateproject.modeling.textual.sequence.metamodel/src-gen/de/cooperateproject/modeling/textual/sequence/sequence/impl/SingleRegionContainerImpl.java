/**
 * generated by Xtext 2.11.0
 */
package de.cooperateproject.modeling.textual.sequence.sequence.impl;

import de.cooperateproject.modeling.textual.sequence.sequence.OrderedFragmentContainer;
import de.cooperateproject.modeling.textual.sequence.sequence.SequencePackage;
import de.cooperateproject.modeling.textual.sequence.sequence.SingleRegionContainer;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Single Region Container</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.cooperateproject.modeling.textual.sequence.sequence.impl.SingleRegionContainerImpl#getRegion <em>Region</em>}</li>
 * </ul>
 *
 * @generated
 */
public abstract class SingleRegionContainerImpl extends CombinedFragmentImpl implements SingleRegionContainer {
    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SingleRegionContainerImpl() {
        super();
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    protected EClass eStaticClass() {
        return SequencePackage.Literals.SINGLE_REGION_CONTAINER;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public OrderedFragmentContainer getRegion() {
        return (OrderedFragmentContainer)eDynamicGet(SequencePackage.SINGLE_REGION_CONTAINER__REGION, SequencePackage.Literals.SINGLE_REGION_CONTAINER__REGION, true, true);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public NotificationChain basicSetRegion(OrderedFragmentContainer newRegion, NotificationChain msgs) {
        msgs = eDynamicInverseAdd((InternalEObject)newRegion, SequencePackage.SINGLE_REGION_CONTAINER__REGION, msgs);
        return msgs;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setRegion(OrderedFragmentContainer newRegion) {
        eDynamicSet(SequencePackage.SINGLE_REGION_CONTAINER__REGION, SequencePackage.Literals.SINGLE_REGION_CONTAINER__REGION, newRegion);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case SequencePackage.SINGLE_REGION_CONTAINER__REGION:
                return basicSetRegion(null, msgs);
        }
        return super.eInverseRemove(otherEnd, featureID, msgs);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Object eGet(int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case SequencePackage.SINGLE_REGION_CONTAINER__REGION:
                return getRegion();
        }
        return super.eGet(featureID, resolve, coreType);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void eSet(int featureID, Object newValue) {
        switch (featureID) {
            case SequencePackage.SINGLE_REGION_CONTAINER__REGION:
                setRegion((OrderedFragmentContainer)newValue);
                return;
        }
        super.eSet(featureID, newValue);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void eUnset(int featureID) {
        switch (featureID) {
            case SequencePackage.SINGLE_REGION_CONTAINER__REGION:
                setRegion((OrderedFragmentContainer)null);
                return;
        }
        super.eUnset(featureID);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public boolean eIsSet(int featureID) {
        switch (featureID) {
            case SequencePackage.SINGLE_REGION_CONTAINER__REGION:
                return getRegion() != null;
        }
        return super.eIsSet(featureID);
    }

} //SingleRegionContainerImpl
