/**
 * generated by Xtext 2.11.0
 */
package de.cooperateproject.modeling.textual.sequence.sequence.impl;

import de.cooperateproject.modeling.textual.sequence.sequence.InnerTimeConstraint;
import de.cooperateproject.modeling.textual.sequence.sequence.SequencePackage;
import de.cooperateproject.modeling.textual.sequence.sequence.TimeConstraintType;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.internal.cdo.CDOObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Inner Time Constraint</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.cooperateproject.modeling.textual.sequence.sequence.impl.InnerTimeConstraintImpl#getType <em>Type</em>}</li>
 *   <li>{@link de.cooperateproject.modeling.textual.sequence.sequence.impl.InnerTimeConstraintImpl#getValue <em>Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InnerTimeConstraintImpl extends CDOObjectImpl implements InnerTimeConstraint {
    /**
     * The default value of the '{@link #getType() <em>Type</em>}' attribute.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see #getType()
     * @generated
     * @ordered
     */
    protected static final TimeConstraintType TYPE_EDEFAULT = TimeConstraintType.DURATION;

    /**
     * The default value of the '{@link #getValue() <em>Value</em>}' attribute.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see #getValue()
     * @generated
     * @ordered
     */
    protected static final String VALUE_EDEFAULT = null;

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected InnerTimeConstraintImpl() {
        super();
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    protected EClass eStaticClass() {
        return SequencePackage.Literals.INNER_TIME_CONSTRAINT;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    protected int eStaticFeatureCount() {
        return 0;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public TimeConstraintType getType() {
        return (TimeConstraintType)eDynamicGet(SequencePackage.INNER_TIME_CONSTRAINT__TYPE, SequencePackage.Literals.INNER_TIME_CONSTRAINT__TYPE, true, true);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setType(TimeConstraintType newType) {
        eDynamicSet(SequencePackage.INNER_TIME_CONSTRAINT__TYPE, SequencePackage.Literals.INNER_TIME_CONSTRAINT__TYPE, newType);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public String getValue() {
        return (String)eDynamicGet(SequencePackage.INNER_TIME_CONSTRAINT__VALUE, SequencePackage.Literals.INNER_TIME_CONSTRAINT__VALUE, true, true);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setValue(String newValue) {
        eDynamicSet(SequencePackage.INNER_TIME_CONSTRAINT__VALUE, SequencePackage.Literals.INNER_TIME_CONSTRAINT__VALUE, newValue);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Object eGet(int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case SequencePackage.INNER_TIME_CONSTRAINT__TYPE:
                return getType();
            case SequencePackage.INNER_TIME_CONSTRAINT__VALUE:
                return getValue();
        }
        return super.eGet(featureID, resolve, coreType);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void eSet(int featureID, Object newValue) {
        switch (featureID) {
            case SequencePackage.INNER_TIME_CONSTRAINT__TYPE:
                setType((TimeConstraintType)newValue);
                return;
            case SequencePackage.INNER_TIME_CONSTRAINT__VALUE:
                setValue((String)newValue);
                return;
        }
        super.eSet(featureID, newValue);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void eUnset(int featureID) {
        switch (featureID) {
            case SequencePackage.INNER_TIME_CONSTRAINT__TYPE:
                setType(TYPE_EDEFAULT);
                return;
            case SequencePackage.INNER_TIME_CONSTRAINT__VALUE:
                setValue(VALUE_EDEFAULT);
                return;
        }
        super.eUnset(featureID);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public boolean eIsSet(int featureID) {
        switch (featureID) {
            case SequencePackage.INNER_TIME_CONSTRAINT__TYPE:
                return getType() != TYPE_EDEFAULT;
            case SequencePackage.INNER_TIME_CONSTRAINT__VALUE:
                return VALUE_EDEFAULT == null ? getValue() != null : !VALUE_EDEFAULT.equals(getValue());
        }
        return super.eIsSet(featureID);
    }

} //InnerTimeConstraintImpl
