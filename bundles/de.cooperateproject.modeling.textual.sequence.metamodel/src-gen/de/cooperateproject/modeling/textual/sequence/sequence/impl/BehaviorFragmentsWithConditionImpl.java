/**
 * generated by Xtext 2.11.0
 */
package de.cooperateproject.modeling.textual.sequence.sequence.impl;

import de.cooperateproject.modeling.textual.sequence.sequence.BehaviorFragment;
import de.cooperateproject.modeling.textual.sequence.sequence.BehaviorFragmentsWithCondition;
import de.cooperateproject.modeling.textual.sequence.sequence.SequencePackage;

import java.util.Collection;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.emf.internal.cdo.CDOObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Behavior Fragments With Condition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.cooperateproject.modeling.textual.sequence.sequence.impl.BehaviorFragmentsWithConditionImpl#getCondition <em>Condition</em>}</li>
 *   <li>{@link de.cooperateproject.modeling.textual.sequence.sequence.impl.BehaviorFragmentsWithConditionImpl#getFragments <em>Fragments</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BehaviorFragmentsWithConditionImpl extends CDOObjectImpl implements BehaviorFragmentsWithCondition {
    /**
     * The default value of the '{@link #getCondition() <em>Condition</em>}' attribute.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see #getCondition()
     * @generated
     * @ordered
     */
    protected static final String CONDITION_EDEFAULT = null;

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected BehaviorFragmentsWithConditionImpl() {
        super();
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    protected EClass eStaticClass() {
        return SequencePackage.Literals.BEHAVIOR_FRAGMENTS_WITH_CONDITION;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    protected int eStaticFeatureCount() {
        return 0;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public String getCondition() {
        return (String)eDynamicGet(SequencePackage.BEHAVIOR_FRAGMENTS_WITH_CONDITION__CONDITION, SequencePackage.Literals.BEHAVIOR_FRAGMENTS_WITH_CONDITION__CONDITION, true, true);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setCondition(String newCondition) {
        eDynamicSet(SequencePackage.BEHAVIOR_FRAGMENTS_WITH_CONDITION__CONDITION, SequencePackage.Literals.BEHAVIOR_FRAGMENTS_WITH_CONDITION__CONDITION, newCondition);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @SuppressWarnings("unchecked")
    public EList<BehaviorFragment> getFragments() {
        return (EList<BehaviorFragment>)eDynamicGet(SequencePackage.BEHAVIOR_FRAGMENTS_WITH_CONDITION__FRAGMENTS, SequencePackage.Literals.BEHAVIOR_FRAGMENTS_WITH_CONDITION__FRAGMENTS, true, true);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
        switch (featureID) {
            case SequencePackage.BEHAVIOR_FRAGMENTS_WITH_CONDITION__FRAGMENTS:
                return ((InternalEList<?>)getFragments()).basicRemove(otherEnd, msgs);
        }
        return super.eInverseRemove(otherEnd, featureID, msgs);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Object eGet(int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case SequencePackage.BEHAVIOR_FRAGMENTS_WITH_CONDITION__CONDITION:
                return getCondition();
            case SequencePackage.BEHAVIOR_FRAGMENTS_WITH_CONDITION__FRAGMENTS:
                return getFragments();
        }
        return super.eGet(featureID, resolve, coreType);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @SuppressWarnings("unchecked")
    @Override
    public void eSet(int featureID, Object newValue) {
        switch (featureID) {
            case SequencePackage.BEHAVIOR_FRAGMENTS_WITH_CONDITION__CONDITION:
                setCondition((String)newValue);
                return;
            case SequencePackage.BEHAVIOR_FRAGMENTS_WITH_CONDITION__FRAGMENTS:
                getFragments().clear();
                getFragments().addAll((Collection<? extends BehaviorFragment>)newValue);
                return;
        }
        super.eSet(featureID, newValue);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void eUnset(int featureID) {
        switch (featureID) {
            case SequencePackage.BEHAVIOR_FRAGMENTS_WITH_CONDITION__CONDITION:
                setCondition(CONDITION_EDEFAULT);
                return;
            case SequencePackage.BEHAVIOR_FRAGMENTS_WITH_CONDITION__FRAGMENTS:
                getFragments().clear();
                return;
        }
        super.eUnset(featureID);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public boolean eIsSet(int featureID) {
        switch (featureID) {
            case SequencePackage.BEHAVIOR_FRAGMENTS_WITH_CONDITION__CONDITION:
                return CONDITION_EDEFAULT == null ? getCondition() != null : !CONDITION_EDEFAULT.equals(getCondition());
            case SequencePackage.BEHAVIOR_FRAGMENTS_WITH_CONDITION__FRAGMENTS:
                return !getFragments().isEmpty();
        }
        return super.eIsSet(featureID);
    }

} //BehaviorFragmentsWithConditionImpl
