/**
 * generated by Xtext 2.9.0
 */
package de.cooperateproject.modeling.language.usecase.usecase;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Use Case</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link de.cooperateproject.modeling.language.usecase.usecase.UseCase#getBaseUseCases <em>Base Use Cases</em>}</li>
 *   <li>{@link de.cooperateproject.modeling.language.usecase.usecase.UseCase#getExtensionPoints <em>Extension Points</em>}</li>
 *   <li>{@link de.cooperateproject.modeling.language.usecase.usecase.UseCase#getExtensions <em>Extensions</em>}</li>
 *   <li>{@link de.cooperateproject.modeling.language.usecase.usecase.UseCase#getIncludes <em>Includes</em>}</li>
 * </ul>
 *
 * @see de.cooperateproject.modeling.language.usecase.usecase.UsecasePackage#getUseCase()
 * @model
 * @generated
 */
public interface UseCase extends Commentable
{
  /**
   * Returns the value of the '<em><b>Base Use Cases</b></em>' reference list.
   * The list contents are of type {@link de.cooperateproject.modeling.language.usecase.usecase.UseCase}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Base Use Cases</em>' reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Base Use Cases</em>' reference list.
   * @see de.cooperateproject.modeling.language.usecase.usecase.UsecasePackage#getUseCase_BaseUseCases()
   * @model
   * @generated
   */
  EList<UseCase> getBaseUseCases();

  /**
   * Returns the value of the '<em><b>Extension Points</b></em>' containment reference list.
   * The list contents are of type {@link de.cooperateproject.modeling.language.usecase.usecase.ExtensionPoint}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Extension Points</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Extension Points</em>' containment reference list.
   * @see de.cooperateproject.modeling.language.usecase.usecase.UsecasePackage#getUseCase_ExtensionPoints()
   * @model containment="true"
   * @generated
   */
  EList<ExtensionPoint> getExtensionPoints();

  /**
   * Returns the value of the '<em><b>Extensions</b></em>' containment reference list.
   * The list contents are of type {@link de.cooperateproject.modeling.language.usecase.usecase.Extension}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Extensions</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Extensions</em>' containment reference list.
   * @see de.cooperateproject.modeling.language.usecase.usecase.UsecasePackage#getUseCase_Extensions()
   * @model containment="true"
   * @generated
   */
  EList<Extension> getExtensions();

  /**
   * Returns the value of the '<em><b>Includes</b></em>' containment reference list.
   * The list contents are of type {@link de.cooperateproject.modeling.language.usecase.usecase.Include}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Includes</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Includes</em>' containment reference list.
   * @see de.cooperateproject.modeling.language.usecase.usecase.UsecasePackage#getUseCase_Includes()
   * @model containment="true"
   * @generated
   */
  EList<Include> getIncludes();

} // UseCase
