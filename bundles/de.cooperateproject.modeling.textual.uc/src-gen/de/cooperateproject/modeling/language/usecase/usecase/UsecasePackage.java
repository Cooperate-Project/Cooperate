/**
 * generated by Xtext 2.9.0
 */
package de.cooperateproject.modeling.language.usecase.usecase;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see de.cooperateproject.modeling.language.usecase.usecase.UsecaseFactory
 * @model kind="package"
 * @generated
 */
public interface UsecasePackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "usecase";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.cooperate-project.de/modeling/language/usecase";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "usecase";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  UsecasePackage eINSTANCE = de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl.init();

  /**
   * The meta object id for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.DiagramImpl <em>Diagram</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.DiagramImpl
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getDiagram()
   * @generated
   */
  int DIAGRAM = 0;

  /**
   * The feature id for the '<em><b>Uml Model</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIAGRAM__UML_MODEL = 0;

  /**
   * The feature id for the '<em><b>Test</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIAGRAM__TEST = 1;

  /**
   * The feature id for the '<em><b>Test2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIAGRAM__TEST2 = 2;

  /**
   * The feature id for the '<em><b>Actors</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIAGRAM__ACTORS = 3;

  /**
   * The feature id for the '<em><b>System</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIAGRAM__SYSTEM = 4;

  /**
   * The feature id for the '<em><b>Associations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIAGRAM__ASSOCIATIONS = 5;

  /**
   * The number of structural features of the '<em>Diagram</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIAGRAM_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.UMLModelReferenceImpl <em>UML Model Reference</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UMLModelReferenceImpl
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getUMLModelReference()
   * @generated
   */
  int UML_MODEL_REFERENCE = 1;

  /**
   * The feature id for the '<em><b>Import URI</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UML_MODEL_REFERENCE__IMPORT_URI = 0;

  /**
   * The number of structural features of the '<em>UML Model Reference</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UML_MODEL_REFERENCE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.TestImpl <em>Test</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.TestImpl
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getTest()
   * @generated
   */
  int TEST = 2;

  /**
   * The feature id for the '<em><b>Actor</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TEST__ACTOR = 0;

  /**
   * The number of structural features of the '<em>Test</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TEST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.Test2Impl <em>Test2</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.Test2Impl
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getTest2()
   * @generated
   */
  int TEST2 = 3;

  /**
   * The feature id for the '<em><b>Actor</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TEST2__ACTOR = 0;

  /**
   * The number of structural features of the '<em>Test2</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TEST2_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.CommentableImpl <em>Commentable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.CommentableImpl
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getCommentable()
   * @generated
   */
  int COMMENTABLE = 4;

  /**
   * The feature id for the '<em><b>Comments</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMENTABLE__COMMENTS = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMENTABLE__NAME = 1;

  /**
   * The number of structural features of the '<em>Commentable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMENTABLE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.ActorImpl <em>Actor</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.ActorImpl
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getActor()
   * @generated
   */
  int ACTOR = 5;

  /**
   * The feature id for the '<em><b>Comments</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTOR__COMMENTS = COMMENTABLE__COMMENTS;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTOR__NAME = COMMENTABLE__NAME;

  /**
   * The feature id for the '<em><b>Visibility</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTOR__VISIBILITY = COMMENTABLE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Modifiers</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTOR__MODIFIERS = COMMENTABLE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Base Actors</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTOR__BASE_ACTORS = COMMENTABLE_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Actor</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTOR_FEATURE_COUNT = COMMENTABLE_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.SystemImpl <em>System</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.SystemImpl
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getSystem()
   * @generated
   */
  int SYSTEM = 6;

  /**
   * The feature id for the '<em><b>Comments</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SYSTEM__COMMENTS = COMMENTABLE__COMMENTS;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SYSTEM__NAME = COMMENTABLE__NAME;

  /**
   * The feature id for the '<em><b>Usecases</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SYSTEM__USECASES = COMMENTABLE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>System</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SYSTEM_FEATURE_COUNT = COMMENTABLE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.UseCaseImpl <em>Use Case</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UseCaseImpl
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getUseCase()
   * @generated
   */
  int USE_CASE = 7;

  /**
   * The feature id for the '<em><b>Comments</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_CASE__COMMENTS = COMMENTABLE__COMMENTS;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_CASE__NAME = COMMENTABLE__NAME;

  /**
   * The feature id for the '<em><b>Base Use Cases</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_CASE__BASE_USE_CASES = COMMENTABLE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Extension Points</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_CASE__EXTENSION_POINTS = COMMENTABLE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Extensions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_CASE__EXTENSIONS = COMMENTABLE_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Includes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_CASE__INCLUDES = COMMENTABLE_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Use Case</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_CASE_FEATURE_COUNT = COMMENTABLE_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.ExtensionPointImpl <em>Extension Point</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.ExtensionPointImpl
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getExtensionPoint()
   * @generated
   */
  int EXTENSION_POINT = 8;

  /**
   * The feature id for the '<em><b>Comments</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION_POINT__COMMENTS = COMMENTABLE__COMMENTS;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION_POINT__NAME = COMMENTABLE__NAME;

  /**
   * The feature id for the '<em><b>Visibility</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION_POINT__VISIBILITY = COMMENTABLE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Modifiers</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION_POINT__MODIFIERS = COMMENTABLE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Extension Point</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION_POINT_FEATURE_COUNT = COMMENTABLE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.ExtensionImpl <em>Extension</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.ExtensionImpl
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getExtension()
   * @generated
   */
  int EXTENSION = 9;

  /**
   * The feature id for the '<em><b>Comments</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION__COMMENTS = COMMENTABLE__COMMENTS;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION__NAME = COMMENTABLE__NAME;

  /**
   * The feature id for the '<em><b>Visibility</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION__VISIBILITY = COMMENTABLE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Location</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION__LOCATION = COMMENTABLE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION__CONDITION = COMMENTABLE_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Extension</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION_FEATURE_COUNT = COMMENTABLE_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.IncludeImpl <em>Include</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.IncludeImpl
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getInclude()
   * @generated
   */
  int INCLUDE = 10;

  /**
   * The feature id for the '<em><b>Comments</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INCLUDE__COMMENTS = COMMENTABLE__COMMENTS;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INCLUDE__NAME = COMMENTABLE__NAME;

  /**
   * The feature id for the '<em><b>Visibility</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INCLUDE__VISIBILITY = COMMENTABLE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Addition</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INCLUDE__ADDITION = COMMENTABLE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Include</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INCLUDE_FEATURE_COUNT = COMMENTABLE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.ConstraintImpl <em>Constraint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.ConstraintImpl
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getConstraint()
   * @generated
   */
  int CONSTRAINT = 11;

  /**
   * The feature id for the '<em><b>Language</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__LANGUAGE = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Constraint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.AssociationImpl <em>Association</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.AssociationImpl
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getAssociation()
   * @generated
   */
  int ASSOCIATION = 12;

  /**
   * The feature id for the '<em><b>Comments</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION__COMMENTS = COMMENTABLE__COMMENTS;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION__NAME = COMMENTABLE__NAME;

  /**
   * The feature id for the '<em><b>Visibility</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION__VISIBILITY = COMMENTABLE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Modifiers</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION__MODIFIERS = COMMENTABLE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Base Associations</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION__BASE_ASSOCIATIONS = COMMENTABLE_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Actor Multiplicity</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION__ACTOR_MULTIPLICITY = COMMENTABLE_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Actor</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION__ACTOR = COMMENTABLE_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Usecase Multiplicity</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION__USECASE_MULTIPLICITY = COMMENTABLE_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>Usecase</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION__USECASE = COMMENTABLE_FEATURE_COUNT + 6;

  /**
   * The feature id for the '<em><b>Owned Rules</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION__OWNED_RULES = COMMENTABLE_FEATURE_COUNT + 7;

  /**
   * The number of structural features of the '<em>Association</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_FEATURE_COUNT = COMMENTABLE_FEATURE_COUNT + 8;

  /**
   * The meta object id for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.MultiplicityImpl <em>Multiplicity</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.MultiplicityImpl
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getMultiplicity()
   * @generated
   */
  int MULTIPLICITY = 13;

  /**
   * The feature id for the '<em><b>Lower Bound</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY__LOWER_BOUND = 0;

  /**
   * The feature id for the '<em><b>Upper Bound</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY__UPPER_BOUND = 1;

  /**
   * The number of structural features of the '<em>Multiplicity</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.cooperateproject.modeling.language.usecase.usecase.Modifier <em>Modifier</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cooperateproject.modeling.language.usecase.usecase.Modifier
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getModifier()
   * @generated
   */
  int MODIFIER = 14;

  /**
   * The meta object id for the '{@link de.cooperateproject.modeling.language.usecase.usecase.Visibility <em>Visibility</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.cooperateproject.modeling.language.usecase.usecase.Visibility
   * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getVisibility()
   * @generated
   */
  int VISIBILITY = 15;


  /**
   * Returns the meta object for class '{@link de.cooperateproject.modeling.language.usecase.usecase.Diagram <em>Diagram</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Diagram</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Diagram
   * @generated
   */
  EClass getDiagram();

  /**
   * Returns the meta object for the containment reference '{@link de.cooperateproject.modeling.language.usecase.usecase.Diagram#getUmlModel <em>Uml Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Uml Model</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Diagram#getUmlModel()
   * @see #getDiagram()
   * @generated
   */
  EReference getDiagram_UmlModel();

  /**
   * Returns the meta object for the containment reference '{@link de.cooperateproject.modeling.language.usecase.usecase.Diagram#getTest <em>Test</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Test</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Diagram#getTest()
   * @see #getDiagram()
   * @generated
   */
  EReference getDiagram_Test();

  /**
   * Returns the meta object for the containment reference '{@link de.cooperateproject.modeling.language.usecase.usecase.Diagram#getTest2 <em>Test2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Test2</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Diagram#getTest2()
   * @see #getDiagram()
   * @generated
   */
  EReference getDiagram_Test2();

  /**
   * Returns the meta object for the containment reference list '{@link de.cooperateproject.modeling.language.usecase.usecase.Diagram#getActors <em>Actors</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Actors</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Diagram#getActors()
   * @see #getDiagram()
   * @generated
   */
  EReference getDiagram_Actors();

  /**
   * Returns the meta object for the containment reference '{@link de.cooperateproject.modeling.language.usecase.usecase.Diagram#getSystem <em>System</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>System</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Diagram#getSystem()
   * @see #getDiagram()
   * @generated
   */
  EReference getDiagram_System();

  /**
   * Returns the meta object for the containment reference list '{@link de.cooperateproject.modeling.language.usecase.usecase.Diagram#getAssociations <em>Associations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Associations</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Diagram#getAssociations()
   * @see #getDiagram()
   * @generated
   */
  EReference getDiagram_Associations();

  /**
   * Returns the meta object for class '{@link de.cooperateproject.modeling.language.usecase.usecase.UMLModelReference <em>UML Model Reference</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>UML Model Reference</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.UMLModelReference
   * @generated
   */
  EClass getUMLModelReference();

  /**
   * Returns the meta object for the attribute '{@link de.cooperateproject.modeling.language.usecase.usecase.UMLModelReference#getImportURI <em>Import URI</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Import URI</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.UMLModelReference#getImportURI()
   * @see #getUMLModelReference()
   * @generated
   */
  EAttribute getUMLModelReference_ImportURI();

  /**
   * Returns the meta object for class '{@link de.cooperateproject.modeling.language.usecase.usecase.Test <em>Test</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Test</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Test
   * @generated
   */
  EClass getTest();

  /**
   * Returns the meta object for the reference '{@link de.cooperateproject.modeling.language.usecase.usecase.Test#getActor <em>Actor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Actor</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Test#getActor()
   * @see #getTest()
   * @generated
   */
  EReference getTest_Actor();

  /**
   * Returns the meta object for class '{@link de.cooperateproject.modeling.language.usecase.usecase.Test2 <em>Test2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Test2</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Test2
   * @generated
   */
  EClass getTest2();

  /**
   * Returns the meta object for the reference '{@link de.cooperateproject.modeling.language.usecase.usecase.Test2#getActor <em>Actor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Actor</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Test2#getActor()
   * @see #getTest2()
   * @generated
   */
  EReference getTest2_Actor();

  /**
   * Returns the meta object for class '{@link de.cooperateproject.modeling.language.usecase.usecase.Commentable <em>Commentable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Commentable</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Commentable
   * @generated
   */
  EClass getCommentable();

  /**
   * Returns the meta object for the attribute list '{@link de.cooperateproject.modeling.language.usecase.usecase.Commentable#getComments <em>Comments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Comments</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Commentable#getComments()
   * @see #getCommentable()
   * @generated
   */
  EAttribute getCommentable_Comments();

  /**
   * Returns the meta object for the attribute '{@link de.cooperateproject.modeling.language.usecase.usecase.Commentable#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Commentable#getName()
   * @see #getCommentable()
   * @generated
   */
  EAttribute getCommentable_Name();

  /**
   * Returns the meta object for class '{@link de.cooperateproject.modeling.language.usecase.usecase.Actor <em>Actor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Actor</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Actor
   * @generated
   */
  EClass getActor();

  /**
   * Returns the meta object for the attribute '{@link de.cooperateproject.modeling.language.usecase.usecase.Actor#getVisibility <em>Visibility</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Visibility</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Actor#getVisibility()
   * @see #getActor()
   * @generated
   */
  EAttribute getActor_Visibility();

  /**
   * Returns the meta object for the attribute list '{@link de.cooperateproject.modeling.language.usecase.usecase.Actor#getModifiers <em>Modifiers</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Modifiers</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Actor#getModifiers()
   * @see #getActor()
   * @generated
   */
  EAttribute getActor_Modifiers();

  /**
   * Returns the meta object for the reference list '{@link de.cooperateproject.modeling.language.usecase.usecase.Actor#getBaseActors <em>Base Actors</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Base Actors</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Actor#getBaseActors()
   * @see #getActor()
   * @generated
   */
  EReference getActor_BaseActors();

  /**
   * Returns the meta object for class '{@link de.cooperateproject.modeling.language.usecase.usecase.System <em>System</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>System</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.System
   * @generated
   */
  EClass getSystem();

  /**
   * Returns the meta object for the containment reference list '{@link de.cooperateproject.modeling.language.usecase.usecase.System#getUsecases <em>Usecases</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Usecases</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.System#getUsecases()
   * @see #getSystem()
   * @generated
   */
  EReference getSystem_Usecases();

  /**
   * Returns the meta object for class '{@link de.cooperateproject.modeling.language.usecase.usecase.UseCase <em>Use Case</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Use Case</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.UseCase
   * @generated
   */
  EClass getUseCase();

  /**
   * Returns the meta object for the reference list '{@link de.cooperateproject.modeling.language.usecase.usecase.UseCase#getBaseUseCases <em>Base Use Cases</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Base Use Cases</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.UseCase#getBaseUseCases()
   * @see #getUseCase()
   * @generated
   */
  EReference getUseCase_BaseUseCases();

  /**
   * Returns the meta object for the containment reference list '{@link de.cooperateproject.modeling.language.usecase.usecase.UseCase#getExtensionPoints <em>Extension Points</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Extension Points</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.UseCase#getExtensionPoints()
   * @see #getUseCase()
   * @generated
   */
  EReference getUseCase_ExtensionPoints();

  /**
   * Returns the meta object for the containment reference list '{@link de.cooperateproject.modeling.language.usecase.usecase.UseCase#getExtensions <em>Extensions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Extensions</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.UseCase#getExtensions()
   * @see #getUseCase()
   * @generated
   */
  EReference getUseCase_Extensions();

  /**
   * Returns the meta object for the containment reference list '{@link de.cooperateproject.modeling.language.usecase.usecase.UseCase#getIncludes <em>Includes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Includes</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.UseCase#getIncludes()
   * @see #getUseCase()
   * @generated
   */
  EReference getUseCase_Includes();

  /**
   * Returns the meta object for class '{@link de.cooperateproject.modeling.language.usecase.usecase.ExtensionPoint <em>Extension Point</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Extension Point</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.ExtensionPoint
   * @generated
   */
  EClass getExtensionPoint();

  /**
   * Returns the meta object for the attribute '{@link de.cooperateproject.modeling.language.usecase.usecase.ExtensionPoint#getVisibility <em>Visibility</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Visibility</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.ExtensionPoint#getVisibility()
   * @see #getExtensionPoint()
   * @generated
   */
  EAttribute getExtensionPoint_Visibility();

  /**
   * Returns the meta object for the attribute list '{@link de.cooperateproject.modeling.language.usecase.usecase.ExtensionPoint#getModifiers <em>Modifiers</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Modifiers</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.ExtensionPoint#getModifiers()
   * @see #getExtensionPoint()
   * @generated
   */
  EAttribute getExtensionPoint_Modifiers();

  /**
   * Returns the meta object for class '{@link de.cooperateproject.modeling.language.usecase.usecase.Extension <em>Extension</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Extension</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Extension
   * @generated
   */
  EClass getExtension();

  /**
   * Returns the meta object for the attribute '{@link de.cooperateproject.modeling.language.usecase.usecase.Extension#getVisibility <em>Visibility</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Visibility</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Extension#getVisibility()
   * @see #getExtension()
   * @generated
   */
  EAttribute getExtension_Visibility();

  /**
   * Returns the meta object for the reference '{@link de.cooperateproject.modeling.language.usecase.usecase.Extension#getLocation <em>Location</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Location</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Extension#getLocation()
   * @see #getExtension()
   * @generated
   */
  EReference getExtension_Location();

  /**
   * Returns the meta object for the containment reference '{@link de.cooperateproject.modeling.language.usecase.usecase.Extension#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Extension#getCondition()
   * @see #getExtension()
   * @generated
   */
  EReference getExtension_Condition();

  /**
   * Returns the meta object for class '{@link de.cooperateproject.modeling.language.usecase.usecase.Include <em>Include</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Include</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Include
   * @generated
   */
  EClass getInclude();

  /**
   * Returns the meta object for the attribute '{@link de.cooperateproject.modeling.language.usecase.usecase.Include#getVisibility <em>Visibility</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Visibility</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Include#getVisibility()
   * @see #getInclude()
   * @generated
   */
  EAttribute getInclude_Visibility();

  /**
   * Returns the meta object for the reference '{@link de.cooperateproject.modeling.language.usecase.usecase.Include#getAddition <em>Addition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Addition</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Include#getAddition()
   * @see #getInclude()
   * @generated
   */
  EReference getInclude_Addition();

  /**
   * Returns the meta object for class '{@link de.cooperateproject.modeling.language.usecase.usecase.Constraint <em>Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constraint</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Constraint
   * @generated
   */
  EClass getConstraint();

  /**
   * Returns the meta object for the attribute '{@link de.cooperateproject.modeling.language.usecase.usecase.Constraint#getLanguage <em>Language</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Language</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Constraint#getLanguage()
   * @see #getConstraint()
   * @generated
   */
  EAttribute getConstraint_Language();

  /**
   * Returns the meta object for the attribute '{@link de.cooperateproject.modeling.language.usecase.usecase.Constraint#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Expression</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Constraint#getExpression()
   * @see #getConstraint()
   * @generated
   */
  EAttribute getConstraint_Expression();

  /**
   * Returns the meta object for class '{@link de.cooperateproject.modeling.language.usecase.usecase.Association <em>Association</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Association</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Association
   * @generated
   */
  EClass getAssociation();

  /**
   * Returns the meta object for the attribute '{@link de.cooperateproject.modeling.language.usecase.usecase.Association#getVisibility <em>Visibility</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Visibility</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Association#getVisibility()
   * @see #getAssociation()
   * @generated
   */
  EAttribute getAssociation_Visibility();

  /**
   * Returns the meta object for the attribute list '{@link de.cooperateproject.modeling.language.usecase.usecase.Association#getModifiers <em>Modifiers</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Modifiers</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Association#getModifiers()
   * @see #getAssociation()
   * @generated
   */
  EAttribute getAssociation_Modifiers();

  /**
   * Returns the meta object for the reference list '{@link de.cooperateproject.modeling.language.usecase.usecase.Association#getBaseAssociations <em>Base Associations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Base Associations</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Association#getBaseAssociations()
   * @see #getAssociation()
   * @generated
   */
  EReference getAssociation_BaseAssociations();

  /**
   * Returns the meta object for the containment reference '{@link de.cooperateproject.modeling.language.usecase.usecase.Association#getActorMultiplicity <em>Actor Multiplicity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Actor Multiplicity</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Association#getActorMultiplicity()
   * @see #getAssociation()
   * @generated
   */
  EReference getAssociation_ActorMultiplicity();

  /**
   * Returns the meta object for the reference '{@link de.cooperateproject.modeling.language.usecase.usecase.Association#getActor <em>Actor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Actor</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Association#getActor()
   * @see #getAssociation()
   * @generated
   */
  EReference getAssociation_Actor();

  /**
   * Returns the meta object for the containment reference '{@link de.cooperateproject.modeling.language.usecase.usecase.Association#getUsecaseMultiplicity <em>Usecase Multiplicity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Usecase Multiplicity</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Association#getUsecaseMultiplicity()
   * @see #getAssociation()
   * @generated
   */
  EReference getAssociation_UsecaseMultiplicity();

  /**
   * Returns the meta object for the reference '{@link de.cooperateproject.modeling.language.usecase.usecase.Association#getUsecase <em>Usecase</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Usecase</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Association#getUsecase()
   * @see #getAssociation()
   * @generated
   */
  EReference getAssociation_Usecase();

  /**
   * Returns the meta object for the containment reference list '{@link de.cooperateproject.modeling.language.usecase.usecase.Association#getOwnedRules <em>Owned Rules</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Owned Rules</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Association#getOwnedRules()
   * @see #getAssociation()
   * @generated
   */
  EReference getAssociation_OwnedRules();

  /**
   * Returns the meta object for class '{@link de.cooperateproject.modeling.language.usecase.usecase.Multiplicity <em>Multiplicity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiplicity</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Multiplicity
   * @generated
   */
  EClass getMultiplicity();

  /**
   * Returns the meta object for the attribute '{@link de.cooperateproject.modeling.language.usecase.usecase.Multiplicity#getLowerBound <em>Lower Bound</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Lower Bound</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Multiplicity#getLowerBound()
   * @see #getMultiplicity()
   * @generated
   */
  EAttribute getMultiplicity_LowerBound();

  /**
   * Returns the meta object for the attribute '{@link de.cooperateproject.modeling.language.usecase.usecase.Multiplicity#getUpperBound <em>Upper Bound</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Upper Bound</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Multiplicity#getUpperBound()
   * @see #getMultiplicity()
   * @generated
   */
  EAttribute getMultiplicity_UpperBound();

  /**
   * Returns the meta object for enum '{@link de.cooperateproject.modeling.language.usecase.usecase.Modifier <em>Modifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Modifier</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Modifier
   * @generated
   */
  EEnum getModifier();

  /**
   * Returns the meta object for enum '{@link de.cooperateproject.modeling.language.usecase.usecase.Visibility <em>Visibility</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Visibility</em>'.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Visibility
   * @generated
   */
  EEnum getVisibility();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  UsecaseFactory getUsecaseFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.DiagramImpl <em>Diagram</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.DiagramImpl
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getDiagram()
     * @generated
     */
    EClass DIAGRAM = eINSTANCE.getDiagram();

    /**
     * The meta object literal for the '<em><b>Uml Model</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIAGRAM__UML_MODEL = eINSTANCE.getDiagram_UmlModel();

    /**
     * The meta object literal for the '<em><b>Test</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIAGRAM__TEST = eINSTANCE.getDiagram_Test();

    /**
     * The meta object literal for the '<em><b>Test2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIAGRAM__TEST2 = eINSTANCE.getDiagram_Test2();

    /**
     * The meta object literal for the '<em><b>Actors</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIAGRAM__ACTORS = eINSTANCE.getDiagram_Actors();

    /**
     * The meta object literal for the '<em><b>System</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIAGRAM__SYSTEM = eINSTANCE.getDiagram_System();

    /**
     * The meta object literal for the '<em><b>Associations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIAGRAM__ASSOCIATIONS = eINSTANCE.getDiagram_Associations();

    /**
     * The meta object literal for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.UMLModelReferenceImpl <em>UML Model Reference</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UMLModelReferenceImpl
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getUMLModelReference()
     * @generated
     */
    EClass UML_MODEL_REFERENCE = eINSTANCE.getUMLModelReference();

    /**
     * The meta object literal for the '<em><b>Import URI</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UML_MODEL_REFERENCE__IMPORT_URI = eINSTANCE.getUMLModelReference_ImportURI();

    /**
     * The meta object literal for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.TestImpl <em>Test</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.TestImpl
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getTest()
     * @generated
     */
    EClass TEST = eINSTANCE.getTest();

    /**
     * The meta object literal for the '<em><b>Actor</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TEST__ACTOR = eINSTANCE.getTest_Actor();

    /**
     * The meta object literal for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.Test2Impl <em>Test2</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.Test2Impl
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getTest2()
     * @generated
     */
    EClass TEST2 = eINSTANCE.getTest2();

    /**
     * The meta object literal for the '<em><b>Actor</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TEST2__ACTOR = eINSTANCE.getTest2_Actor();

    /**
     * The meta object literal for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.CommentableImpl <em>Commentable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.CommentableImpl
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getCommentable()
     * @generated
     */
    EClass COMMENTABLE = eINSTANCE.getCommentable();

    /**
     * The meta object literal for the '<em><b>Comments</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMMENTABLE__COMMENTS = eINSTANCE.getCommentable_Comments();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMMENTABLE__NAME = eINSTANCE.getCommentable_Name();

    /**
     * The meta object literal for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.ActorImpl <em>Actor</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.ActorImpl
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getActor()
     * @generated
     */
    EClass ACTOR = eINSTANCE.getActor();

    /**
     * The meta object literal for the '<em><b>Visibility</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ACTOR__VISIBILITY = eINSTANCE.getActor_Visibility();

    /**
     * The meta object literal for the '<em><b>Modifiers</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ACTOR__MODIFIERS = eINSTANCE.getActor_Modifiers();

    /**
     * The meta object literal for the '<em><b>Base Actors</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ACTOR__BASE_ACTORS = eINSTANCE.getActor_BaseActors();

    /**
     * The meta object literal for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.SystemImpl <em>System</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.SystemImpl
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getSystem()
     * @generated
     */
    EClass SYSTEM = eINSTANCE.getSystem();

    /**
     * The meta object literal for the '<em><b>Usecases</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SYSTEM__USECASES = eINSTANCE.getSystem_Usecases();

    /**
     * The meta object literal for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.UseCaseImpl <em>Use Case</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UseCaseImpl
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getUseCase()
     * @generated
     */
    EClass USE_CASE = eINSTANCE.getUseCase();

    /**
     * The meta object literal for the '<em><b>Base Use Cases</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference USE_CASE__BASE_USE_CASES = eINSTANCE.getUseCase_BaseUseCases();

    /**
     * The meta object literal for the '<em><b>Extension Points</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference USE_CASE__EXTENSION_POINTS = eINSTANCE.getUseCase_ExtensionPoints();

    /**
     * The meta object literal for the '<em><b>Extensions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference USE_CASE__EXTENSIONS = eINSTANCE.getUseCase_Extensions();

    /**
     * The meta object literal for the '<em><b>Includes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference USE_CASE__INCLUDES = eINSTANCE.getUseCase_Includes();

    /**
     * The meta object literal for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.ExtensionPointImpl <em>Extension Point</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.ExtensionPointImpl
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getExtensionPoint()
     * @generated
     */
    EClass EXTENSION_POINT = eINSTANCE.getExtensionPoint();

    /**
     * The meta object literal for the '<em><b>Visibility</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXTENSION_POINT__VISIBILITY = eINSTANCE.getExtensionPoint_Visibility();

    /**
     * The meta object literal for the '<em><b>Modifiers</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXTENSION_POINT__MODIFIERS = eINSTANCE.getExtensionPoint_Modifiers();

    /**
     * The meta object literal for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.ExtensionImpl <em>Extension</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.ExtensionImpl
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getExtension()
     * @generated
     */
    EClass EXTENSION = eINSTANCE.getExtension();

    /**
     * The meta object literal for the '<em><b>Visibility</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXTENSION__VISIBILITY = eINSTANCE.getExtension_Visibility();

    /**
     * The meta object literal for the '<em><b>Location</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTENSION__LOCATION = eINSTANCE.getExtension_Location();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTENSION__CONDITION = eINSTANCE.getExtension_Condition();

    /**
     * The meta object literal for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.IncludeImpl <em>Include</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.IncludeImpl
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getInclude()
     * @generated
     */
    EClass INCLUDE = eINSTANCE.getInclude();

    /**
     * The meta object literal for the '<em><b>Visibility</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INCLUDE__VISIBILITY = eINSTANCE.getInclude_Visibility();

    /**
     * The meta object literal for the '<em><b>Addition</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INCLUDE__ADDITION = eINSTANCE.getInclude_Addition();

    /**
     * The meta object literal for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.ConstraintImpl <em>Constraint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.ConstraintImpl
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getConstraint()
     * @generated
     */
    EClass CONSTRAINT = eINSTANCE.getConstraint();

    /**
     * The meta object literal for the '<em><b>Language</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTRAINT__LANGUAGE = eINSTANCE.getConstraint_Language();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTRAINT__EXPRESSION = eINSTANCE.getConstraint_Expression();

    /**
     * The meta object literal for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.AssociationImpl <em>Association</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.AssociationImpl
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getAssociation()
     * @generated
     */
    EClass ASSOCIATION = eINSTANCE.getAssociation();

    /**
     * The meta object literal for the '<em><b>Visibility</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSOCIATION__VISIBILITY = eINSTANCE.getAssociation_Visibility();

    /**
     * The meta object literal for the '<em><b>Modifiers</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSOCIATION__MODIFIERS = eINSTANCE.getAssociation_Modifiers();

    /**
     * The meta object literal for the '<em><b>Base Associations</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION__BASE_ASSOCIATIONS = eINSTANCE.getAssociation_BaseAssociations();

    /**
     * The meta object literal for the '<em><b>Actor Multiplicity</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION__ACTOR_MULTIPLICITY = eINSTANCE.getAssociation_ActorMultiplicity();

    /**
     * The meta object literal for the '<em><b>Actor</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION__ACTOR = eINSTANCE.getAssociation_Actor();

    /**
     * The meta object literal for the '<em><b>Usecase Multiplicity</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION__USECASE_MULTIPLICITY = eINSTANCE.getAssociation_UsecaseMultiplicity();

    /**
     * The meta object literal for the '<em><b>Usecase</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION__USECASE = eINSTANCE.getAssociation_Usecase();

    /**
     * The meta object literal for the '<em><b>Owned Rules</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION__OWNED_RULES = eINSTANCE.getAssociation_OwnedRules();

    /**
     * The meta object literal for the '{@link de.cooperateproject.modeling.language.usecase.usecase.impl.MultiplicityImpl <em>Multiplicity</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.MultiplicityImpl
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getMultiplicity()
     * @generated
     */
    EClass MULTIPLICITY = eINSTANCE.getMultiplicity();

    /**
     * The meta object literal for the '<em><b>Lower Bound</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULTIPLICITY__LOWER_BOUND = eINSTANCE.getMultiplicity_LowerBound();

    /**
     * The meta object literal for the '<em><b>Upper Bound</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULTIPLICITY__UPPER_BOUND = eINSTANCE.getMultiplicity_UpperBound();

    /**
     * The meta object literal for the '{@link de.cooperateproject.modeling.language.usecase.usecase.Modifier <em>Modifier</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cooperateproject.modeling.language.usecase.usecase.Modifier
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getModifier()
     * @generated
     */
    EEnum MODIFIER = eINSTANCE.getModifier();

    /**
     * The meta object literal for the '{@link de.cooperateproject.modeling.language.usecase.usecase.Visibility <em>Visibility</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.cooperateproject.modeling.language.usecase.usecase.Visibility
     * @see de.cooperateproject.modeling.language.usecase.usecase.impl.UsecasePackageImpl#getVisibility()
     * @generated
     */
    EEnum VISIBILITY = eINSTANCE.getVisibility();

  }

} //UsecasePackage
