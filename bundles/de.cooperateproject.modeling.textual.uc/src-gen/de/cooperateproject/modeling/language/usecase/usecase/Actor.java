/**
 * generated by Xtext 2.9.0
 */
package de.cooperateproject.modeling.language.usecase.usecase;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Actor</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link de.cooperateproject.modeling.language.usecase.usecase.Actor#getVisibility <em>Visibility</em>}</li>
 *   <li>{@link de.cooperateproject.modeling.language.usecase.usecase.Actor#getModifiers <em>Modifiers</em>}</li>
 *   <li>{@link de.cooperateproject.modeling.language.usecase.usecase.Actor#getBaseActors <em>Base Actors</em>}</li>
 * </ul>
 *
 * @see de.cooperateproject.modeling.language.usecase.usecase.UsecasePackage#getActor()
 * @model
 * @generated
 */
public interface Actor extends Commentable
{
  /**
   * Returns the value of the '<em><b>Visibility</b></em>' attribute.
   * The literals are from the enumeration {@link de.cooperateproject.modeling.language.usecase.usecase.Visibility}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Visibility</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Visibility</em>' attribute.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Visibility
   * @see #setVisibility(Visibility)
   * @see de.cooperateproject.modeling.language.usecase.usecase.UsecasePackage#getActor_Visibility()
   * @model
   * @generated
   */
  Visibility getVisibility();

  /**
   * Sets the value of the '{@link de.cooperateproject.modeling.language.usecase.usecase.Actor#getVisibility <em>Visibility</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Visibility</em>' attribute.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Visibility
   * @see #getVisibility()
   * @generated
   */
  void setVisibility(Visibility value);

  /**
   * Returns the value of the '<em><b>Modifiers</b></em>' attribute list.
   * The list contents are of type {@link de.cooperateproject.modeling.language.usecase.usecase.Modifier}.
   * The literals are from the enumeration {@link de.cooperateproject.modeling.language.usecase.usecase.Modifier}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Modifiers</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Modifiers</em>' attribute list.
   * @see de.cooperateproject.modeling.language.usecase.usecase.Modifier
   * @see de.cooperateproject.modeling.language.usecase.usecase.UsecasePackage#getActor_Modifiers()
   * @model unique="false"
   * @generated
   */
  EList<Modifier> getModifiers();

  /**
   * Returns the value of the '<em><b>Base Actors</b></em>' reference list.
   * The list contents are of type {@link de.cooperateproject.modeling.language.usecase.usecase.Actor}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Base Actors</em>' reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Base Actors</em>' reference list.
   * @see de.cooperateproject.modeling.language.usecase.usecase.UsecasePackage#getActor_BaseActors()
   * @model
   * @generated
   */
  EList<Actor> getBaseActors();

} // Actor
