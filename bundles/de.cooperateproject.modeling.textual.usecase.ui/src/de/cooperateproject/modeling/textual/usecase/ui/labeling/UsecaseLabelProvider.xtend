/*
 * generated by Xtext 2.10.0
 */
package de.cooperateproject.modeling.textual.usecase.ui.labeling

import com.google.inject.Inject
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import de.cooperateproject.modeling.textual.usecase.usecase.Generalization
import de.cooperateproject.ui.outline.UMLImage
import de.cooperateproject.ui.outline.CooperateOutlineLabelProvider

/**
 * Provides labels for Usecase EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class UsecaseLabelProvider extends CooperateOutlineLabelProvider {

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	def text(Generalization element) {
        val general = element.general;
        val specific = element.specific;
        specific.doGetText + " is a " + general.doGetText
    }

    def image(Generalization element) {
        return UMLImage.GENERALIZATION.image
    }
}
