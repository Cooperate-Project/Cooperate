/*
 * generated by Xtext 2.10.0
 */
package de.cooperateproject.modeling.textual.usecase.ui.quickfix

import de.cooperateproject.modeling.textual.usecase.issues.UsecaseUMLReferencingElementMissingElement
import org.eclipse.uml2.uml.Element
import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider
import org.eclipse.xtext.ui.editor.quickfix.Fix
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor
import org.eclipse.xtext.validation.Issue
import de.cooperateproject.modeling.textual.common.metamodel.textualCommons.UMLReferencingElement

class UsecaseQuickfixProvider extends DefaultQuickfixProvider {

	@Fix(UsecaseUMLReferencingElementMissingElement.MISSING_UML_REFERENCE)
	def addMissingUMLElement(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, 'Create UML element', 'Creates the missing UML element.', null) [ element, context |
			val resolution = new UsecaseUMLReferencingElementMissingElement(element as UMLReferencingElement<Element>);
			if (resolution.resolvePossible) {
				resolution.resolve
			}
		]
	}
}
