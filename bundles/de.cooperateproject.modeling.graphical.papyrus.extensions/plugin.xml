<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
   <extension
         point="org.eclipse.papyrus.infra.ui.papyrusContentOutline">
      <contentoutline
            class="de.cooperate.modeling.graphical.papyrus.extensions.outline.PapyrusContentOutlinePage"
            priority="100">
      </contentoutline>
   </extension>
   <extension
         point="org.eclipse.emf.validation.constraintBindings">
      <clientContext
            id="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.cooperateContext">
         <selector
               class="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.CooperateClientSelector">
         </selector>
      </clientContext>
      <binding
            category="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.cooperateConstraints"
            context="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.cooperateContext">
      </binding>
   </extension>
   <extension
         point="org.eclipse.emf.validation.constraintProviders">
      <category
            id="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.cooperateConstraints"
            name="Cooperate Constraints">
      </category>
      <constraintProvider
            cache="true">
         <constraints
               categories="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.cooperateConstraints">
            <constraint
                  class="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.constraints.ClassDiagramAssociationConstraint"
                  id="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.classAssociationConstraint"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="Class Diagram Association Constraint"
                  severity="WARNING"
                  statusCode="1">
               <message>
                  {0} has no proper name.
               </message>
               <description>
                  An association in a class diagram needs a proper non null and non empty name.
               </description>
               <target
                     class="Association">
               </target>
            </constraint>
            <constraint
                  class="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.constraints.UseCaseDiagramAssociationConstraint"
                  id="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.useCaseAssociationConstraint"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="Use Case Diagram Association Constraint"
                  severity="WARNING"
                  statusCode="1">
               <message>
                  {0} must have an empty name.
               </message>
               <description>
                  An association in a use case diagram must have an empty name.
               </description>
               <target
                     class="Association">
               </target>
            </constraint>
            <constraint
                  class="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.constraints.UnambiguousNamesConstraint"
                  id="de.cooperateproject.modeling.graphical.papyrus.extensions.unambiguousNamesConstraint"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="Unambiguous Names Constraint"
                  severity="WARNING"
                  statusCode="2">
               <message>
                  The named element {0} is not distinguishable from all other named elements in the namespace.
               </message>
               <target
                     class="NamedElement">
               </target>
               <description>
                  All named elements in the workspace must be distinguishable by their name.
               </description>
            </constraint>
            <constraint
                  class="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.constraints.CommentHasExactlyOneAnnotatedElementConstraint"
                  id="de.cooperateproject.modeling.graphical.papyrus.extensions.commentHasOnlyOneAnnotatedElement"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="Comment has exactly one annotated element"
                  severity="WARNING"
                  statusCode="2">
               <message>
                  The comment {0} must annotate exactly one element.
               </message>
               <target
                     class="Comment">
               </target>
               <description>
                  A comment must annotate exactly one element.
               </description>
            </constraint>
            <constraint
                  class="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.constraints.AttributeMustHaveATypeConstraint"
                  id="de.cooperateproject.modeling.graphical.papyrus.extensions.attributesMustHaveAType"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="Attributes must have a type"
                  severity="WARNING"
                  statusCode="2">
               <message>
                  The attribute {0} must have a type.
               </message>
               <target
                     class="Property"></target>
               <description>
                  An attribute must have a type.
               </description>
            </constraint>
            <constraint
                  class="ParameterMustHaveATypeConstraint"
                  id="de.cooperateproject.modeling.graphical.papyrus.extensions.parameterMustHaveAType"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="Parameter must have a type"
                  severity="WARNING"
                  statusCode="2">
               <message>
                  The parameter {0} must have a type.
               </message>
               <target
                     class="Parameter">
               </target>
               <description>
                  A property must have a type.
               </description>
            </constraint>
            <constraint
                  class="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.constraints.NameHasToBeIDForNonAliasedElementsClassConstraint"
                  id="de.cooperateproject.modeling.graphical.papyrus.extensions.nameHasToBeIDForNonAliasedElements"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="Name has to be ID if element is not aliased"
                  severity="WARNING"
                  statusCode="2">
               <message>
                  The named element {0} has to have a name that is an ID or has to have an alias that is an ID.
               </message>
               <target
                     class="NamedElement">
               </target>
               <description>
                  A named element has to have a name that is an ID. If the named element can have an alias, the name can be freely chosen but if it is not an ID, there has to be an alias that is an ID.
               </description>
            </constraint>
            <constraint
                  class="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.constraints.CommentOnlyAllowedForCommentableElementsConstraint"
                  id="de.cooperateproject.modeling.graphical.papyrus.extensions.commentOnlyAllowedForCommentableElements"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="Comments can only be used on commentable elements."
                  severity="WARNING"
                  statusCode="2">
               <message>
                  The comment {0} is about an element that is not commentable.
               </message>
               <target
                     class="Comment">
               </target>
               <description>
                  A comment must only be used with elements that are commentable.
               </description>
            </constraint>
            <constraint
                  class="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.constraints.TypedElementHasOnlyAllowedPrimitiveTypeConstraint"
                  id="de.cooperateproject.modeling.graphical.papyrus.extensions.typedElementHasOnlyAllowedPrimitiveType"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="Typed elements have only allowed primitive types"
                  severity="WARNING"
                  statusCode="2">
               <message>
                  The typed element {0} has an invalid primitive type.
               </message>
               <target
                     class="TypedElement">
               </target>
               <description>
                  A primitive type must be an Ecore primitive type that has a common type.
               </description>
            </constraint>
            <constraint
                  class="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.constraints.OperationHasOnlyAllowedPrimitiveTypeConstraint"
                  id="de.cooperateproject.modeling.graphical.papyrus.extensions.operationHasOnlyAllowedPrimitiveType"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="Operation has only allowed primitive types"
                  severity="WARNING"
                  statusCode="2">
               <message>
                  The operation {0} has an invalid primitive type.
               </message>
               <target
                     class="Operation">
               </target>
               <description>
                  A primitive type must be an Ecore primitive type that has a common type.
               </description>
            </constraint>
         </constraints>
         <package
               namespaceUri="http://www.eclipse.org/uml2/5.0.0/UML">
         </package>
      </constraintProvider>
   </extension>
   <extension
         point="org.eclipse.papyrus.infra.core.service">
      <service
            classname="de.cooperateproject.modeling.graphical.papyrus.extensions.validation.CooperateSaveAndDirtyService"
            id="org.eclipse.papyrus.infra.ui.lifecycleevents.ISaveAndDirtyService"
            priority="2"
            startKind="startup">
      </service>
   </extension>
   <extension
      point="org.eclipse.papyrus.infra.properties.contexts">
   <context appliedByDefault="true" contextModel="resource/CooperateProperties.ctx" isCustomizable="true" />
</extension>
</plugin>
