/*
 * generated by Xtext 2.12.0
 */
grammar InternalComponent;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.cooperateproject.modeling.textual.component.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.cooperateproject.modeling.textual.component.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.cooperateproject.modeling.textual.component.services.ComponentGrammarAccess;

}
@parser::members {
	private ComponentGrammarAccess grammarAccess;

	public void setGrammarAccess(ComponentGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleComponentDiagram
entryRuleComponentDiagram
:
{ before(grammarAccess.getComponentDiagramRule()); }
	 ruleComponentDiagram
{ after(grammarAccess.getComponentDiagramRule()); } 
	 EOF 
;

// Rule ComponentDiagram
ruleComponentDiagram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentDiagramAccess().getGroup()); }
		(rule__ComponentDiagram__Group__0)
		{ after(grammarAccess.getComponentDiagramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassifierRelation
entryRuleClassifierRelation
:
{ before(grammarAccess.getClassifierRelationRule()); }
	 ruleClassifierRelation
{ after(grammarAccess.getClassifierRelationRule()); } 
	 EOF 
;

// Rule ClassifierRelation
ruleClassifierRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierRelationAccess().getAlternatives()); }
		(rule__ClassifierRelation__Alternatives)
		{ after(grammarAccess.getClassifierRelationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassifier
entryRuleClassifier
:
{ before(grammarAccess.getClassifierRule()); }
	 ruleClassifier
{ after(grammarAccess.getClassifierRule()); } 
	 EOF 
;

// Rule Classifier
ruleClassifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierAccess().getAlternatives()); }
		(rule__Classifier__Alternatives)
		{ after(grammarAccess.getClassifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceRelation
entryRuleInterfaceRelation
:
{ before(grammarAccess.getInterfaceRelationRule()); }
	 ruleInterfaceRelation
{ after(grammarAccess.getInterfaceRelationRule()); } 
	 EOF 
;

// Rule InterfaceRelation
ruleInterfaceRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceRelationAccess().getAlternatives()); }
		(rule__InterfaceRelation__Alternatives)
		{ after(grammarAccess.getInterfaceRelationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMember
entryRuleMember
:
{ before(grammarAccess.getMemberRule()); }
	 ruleMember
{ after(grammarAccess.getMemberRule()); } 
	 EOF 
;

// Rule Member
ruleMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMemberAccess().getAlternatives()); }
		(rule__Member__Alternatives)
		{ after(grammarAccess.getMemberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRootPackage
entryRuleRootPackage
:
{ before(grammarAccess.getRootPackageRule()); }
	 ruleRootPackage
{ after(grammarAccess.getRootPackageRule()); } 
	 EOF 
;

// Rule RootPackage
ruleRootPackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRootPackageAccess().getGroup()); }
		(rule__RootPackage__Group__0)
		{ after(grammarAccess.getRootPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponent
entryRuleComponent
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentAccess().getGroup()); }
		(rule__Component__Group__0)
		{ after(grammarAccess.getComponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClass
entryRuleClass
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassAccess().getGroup()); }
		(rule__Class__Group__0)
		{ after(grammarAccess.getClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneralization
entryRuleGeneralization
:
{ before(grammarAccess.getGeneralizationRule()); }
	 ruleGeneralization
{ after(grammarAccess.getGeneralizationRule()); } 
	 EOF 
;

// Rule Generalization
ruleGeneralization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneralizationAccess().getGroup()); }
		(rule__Generalization__Group__0)
		{ after(grammarAccess.getGeneralizationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstraction
entryRuleAbstraction
:
{ before(grammarAccess.getAbstractionRule()); }
	 ruleAbstraction
{ after(grammarAccess.getAbstractionRule()); } 
	 EOF 
;

// Rule Abstraction
ruleAbstraction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractionAccess().getGroup()); }
		(rule__Abstraction__Group__0)
		{ after(grammarAccess.getAbstractionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleManifestation
entryRuleManifestation
:
{ before(grammarAccess.getManifestationRule()); }
	 ruleManifestation
{ after(grammarAccess.getManifestationRule()); } 
	 EOF 
;

// Rule Manifestation
ruleManifestation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getManifestationAccess().getGroup()); }
		(rule__Manifestation__Group__0)
		{ after(grammarAccess.getManifestationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubstitution
entryRuleSubstitution
:
{ before(grammarAccess.getSubstitutionRule()); }
	 ruleSubstitution
{ after(grammarAccess.getSubstitutionRule()); } 
	 EOF 
;

// Rule Substitution
ruleSubstitution 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubstitutionAccess().getGroup()); }
		(rule__Substitution__Group__0)
		{ after(grammarAccess.getSubstitutionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDependency
entryRuleDependency
:
{ before(grammarAccess.getDependencyRule()); }
	 ruleDependency
{ after(grammarAccess.getDependencyRule()); } 
	 EOF 
;

// Rule Dependency
ruleDependency 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDependencyAccess().getGroup()); }
		(rule__Dependency__Group__0)
		{ after(grammarAccess.getDependencyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComment
entryRuleComment
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommentAccess().getGroup()); }
		(rule__Comment__Group__0)
		{ after(grammarAccess.getCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePort
entryRulePort
:
{ before(grammarAccess.getPortRule()); }
	 rulePort
{ after(grammarAccess.getPortRule()); } 
	 EOF 
;

// Rule Port
rulePort 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortAccess().getGroup()); }
		(rule__Port__Group__0)
		{ after(grammarAccess.getPortAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterface
entryRuleInterface
:
{ before(grammarAccess.getInterfaceRule()); }
	 ruleInterface
{ after(grammarAccess.getInterfaceRule()); } 
	 EOF 
;

// Rule Interface
ruleInterface 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceAccess().getGroup()); }
		(rule__Interface__Group__0)
		{ after(grammarAccess.getInterfaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnector
entryRuleConnector
:
{ before(grammarAccess.getConnectorRule()); }
	 ruleConnector
{ after(grammarAccess.getConnectorRule()); } 
	 EOF 
;

// Rule Connector
ruleConnector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorAccess().getGroup()); }
		(rule__Connector__Group__0)
		{ after(grammarAccess.getConnectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectorEnd
entryRuleConnectorEnd
:
{ before(grammarAccess.getConnectorEndRule()); }
	 ruleConnectorEnd
{ after(grammarAccess.getConnectorEndRule()); } 
	 EOF 
;

// Rule ConnectorEnd
ruleConnectorEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectorEndAccess().getGroup()); }
		(rule__ConnectorEnd__Group__0)
		{ after(grammarAccess.getConnectorEndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProvide
entryRuleProvide
:
{ before(grammarAccess.getProvideRule()); }
	 ruleProvide
{ after(grammarAccess.getProvideRule()); } 
	 EOF 
;

// Rule Provide
ruleProvide 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProvideAccess().getGroup()); }
		(rule__Provide__Group__0)
		{ after(grammarAccess.getProvideAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequire
entryRuleRequire
:
{ before(grammarAccess.getRequireRule()); }
	 ruleRequire
{ after(grammarAccess.getRequireRule()); } 
	 EOF 
;

// Rule Require
ruleRequire 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequireAccess().getGroup()); }
		(rule__Require__Group__0)
		{ after(grammarAccess.getRequireAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethod
entryRuleMethod
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodAccess().getGroup()); }
		(rule__Method__Group__0)
		{ after(grammarAccess.getMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentTypeAttribute
entryRuleComponentTypeAttribute
:
{ before(grammarAccess.getComponentTypeAttributeRule()); }
	 ruleComponentTypeAttribute
{ after(grammarAccess.getComponentTypeAttributeRule()); } 
	 EOF 
;

// Rule ComponentTypeAttribute
ruleComponentTypeAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentTypeAttributeAccess().getGroup()); }
		(rule__ComponentTypeAttribute__Group__0)
		{ after(grammarAccess.getComponentTypeAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFQN
entryRuleFQN
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFQNAccess().getGroup()); }
		(rule__FQN__Group__0)
		{ after(grammarAccess.getFQNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Visibility
ruleVisibility
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityAccess().getAlternatives()); }
		(rule__Visibility__Alternatives)
		{ after(grammarAccess.getVisibilityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierRelation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierRelationAccess().getGeneralizationParserRuleCall_0()); }
		ruleGeneralization
		{ after(grammarAccess.getClassifierRelationAccess().getGeneralizationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierRelationAccess().getAbstractionParserRuleCall_1()); }
		ruleAbstraction
		{ after(grammarAccess.getClassifierRelationAccess().getAbstractionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierRelationAccess().getManifestationParserRuleCall_2()); }
		ruleManifestation
		{ after(grammarAccess.getClassifierRelationAccess().getManifestationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierRelationAccess().getSubstitutionParserRuleCall_3()); }
		ruleSubstitution
		{ after(grammarAccess.getClassifierRelationAccess().getSubstitutionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierRelationAccess().getDependencyParserRuleCall_4()); }
		ruleDependency
		{ after(grammarAccess.getClassifierRelationAccess().getDependencyParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getInterfaceParserRuleCall_0()); }
		ruleInterface
		{ after(grammarAccess.getClassifierAccess().getInterfaceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierAccess().getComponentParserRuleCall_1()); }
		ruleComponent
		{ after(grammarAccess.getClassifierAccess().getComponentParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierAccess().getClassParserRuleCall_2()); }
		ruleClass
		{ after(grammarAccess.getClassifierAccess().getClassParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceRelation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceRelationAccess().getProvideParserRuleCall_0()); }
		ruleProvide
		{ after(grammarAccess.getInterfaceRelationAccess().getProvideParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInterfaceRelationAccess().getRequireParserRuleCall_1()); }
		ruleRequire
		{ after(grammarAccess.getInterfaceRelationAccess().getRequireParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberAccess().getMethodParserRuleCall_0()); }
		ruleMethod
		{ after(grammarAccess.getMemberAccess().getMethodParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMemberAccess().getAttributeParserRuleCall_1()); }
		ruleAttribute
		{ after(grammarAccess.getMemberAccess().getAttributeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getNameAssignment_1_0()); }
		(rule__Component__NameAssignment_1_0)
		{ after(grammarAccess.getComponentAccess().getNameAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentAccess().getGroup_1_1()); }
		(rule__Component__Group_1_1__0)
		{ after(grammarAccess.getComponentAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getCommentsAssignment_2_0()); }
		(rule__Component__CommentsAssignment_2_0)?
		{ after(grammarAccess.getComponentAccess().getCommentsAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentAccess().getGroup_2_1()); }
		(rule__Component__Group_2_1__0)
		{ after(grammarAccess.getComponentAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getNameAssignment_1_0()); }
		(rule__Class__NameAssignment_1_0)
		{ after(grammarAccess.getClassAccess().getNameAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassAccess().getGroup_1_1()); }
		(rule__Class__Group_1_1__0)
		{ after(grammarAccess.getClassAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getCommentsAssignment_2_0()); }
		(rule__Class__CommentsAssignment_2_0)?
		{ after(grammarAccess.getClassAccess().getCommentsAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassAccess().getGroup_2_1()); }
		(rule__Class__Group_2_1__0)
		{ after(grammarAccess.getClassAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__ConjugatedAlternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getConjugatedTildeKeyword_4_0_0()); }
		'~'
		{ after(grammarAccess.getPortAccess().getConjugatedTildeKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPortAccess().getConjugatedConjugatedKeyword_4_0_1()); }
		'conjugated'
		{ after(grammarAccess.getPortAccess().getConjugatedConjugatedKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceAccess().getNameAssignment_1_0()); }
		(rule__Interface__NameAssignment_1_0)
		{ after(grammarAccess.getInterfaceAccess().getNameAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getInterfaceAccess().getGroup_1_1()); }
		(rule__Interface__Group_1_1__0)
		{ after(grammarAccess.getInterfaceAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceAccess().getCommentsAssignment_2_0()); }
		(rule__Interface__CommentsAssignment_2_0)?
		{ after(grammarAccess.getInterfaceAccess().getCommentsAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getInterfaceAccess().getGroup_2_1()); }
		(rule__Interface__Group_2_1__0)
		{ after(grammarAccess.getInterfaceAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getNameAssignment_1_0()); }
		(rule__Connector__NameAssignment_1_0)
		{ after(grammarAccess.getConnectorAccess().getNameAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getConnectorAccess().getGroup_1_1()); }
		(rule__Connector__Group_1_1__0)
		{ after(grammarAccess.getConnectorAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Provide__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProvideAccess().getNameAssignment_2_0()); }
		(rule__Provide__NameAssignment_2_0)
		{ after(grammarAccess.getProvideAccess().getNameAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getProvideAccess().getGroup_2_1()); }
		(rule__Provide__Group_2_1__0)
		{ after(grammarAccess.getProvideAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireAccess().getNameAssignment_2_0()); }
		(rule__Require__NameAssignment_2_0)
		{ after(grammarAccess.getRequireAccess().getNameAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRequireAccess().getGroup_2_1()); }
		(rule__Require__Group_2_1__0)
		{ after(grammarAccess.getRequireAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0()); }
		('+')
		{ after(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_1()); }
		('public')
		{ after(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_2()); }
		('-')
		{ after(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_3()); }
		('private')
		{ after(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_4()); }
		('#')
		{ after(grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_5()); }
		('protected')
		{ after(grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityAccess().getPackageEnumLiteralDeclaration_6()); }
		('~')
		{ after(grammarAccess.getVisibilityAccess().getPackageEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDiagram__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDiagram__Group__0__Impl
	rule__ComponentDiagram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDiagram__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDiagramAccess().getComponentDiagramAction_0()); }
	()
	{ after(grammarAccess.getComponentDiagramAccess().getComponentDiagramAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDiagram__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDiagram__Group__1__Impl
	rule__ComponentDiagram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDiagram__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDiagramAccess().getStartCpdKeyword_1()); }
	'@start-cpd'
	{ after(grammarAccess.getComponentDiagramAccess().getStartCpdKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDiagram__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDiagram__Group__2__Impl
	rule__ComponentDiagram__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDiagram__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDiagramAccess().getTitleAssignment_2()); }
	(rule__ComponentDiagram__TitleAssignment_2)
	{ after(grammarAccess.getComponentDiagramAccess().getTitleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDiagram__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDiagram__Group__3__Impl
	rule__ComponentDiagram__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDiagram__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDiagramAccess().getRootpackageAssignment_3()); }
	(rule__ComponentDiagram__RootpackageAssignment_3)
	{ after(grammarAccess.getComponentDiagramAccess().getRootpackageAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDiagram__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDiagram__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDiagram__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDiagramAccess().getEndCpdKeyword_4()); }
	'@end-cpd'
	{ after(grammarAccess.getComponentDiagramAccess().getEndCpdKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RootPackage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootPackage__Group__0__Impl
	rule__RootPackage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootPackageAccess().getRootPackageAction_0()); }
	()
	{ after(grammarAccess.getRootPackageAccess().getRootPackageAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootPackage__Group__1__Impl
	rule__RootPackage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootPackageAccess().getGroup_1()); }
	(rule__RootPackage__Group_1__0)?
	{ after(grammarAccess.getRootPackageAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootPackage__Group__2__Impl
	rule__RootPackage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootPackageAccess().getClassifiersAssignment_2()); }
	(rule__RootPackage__ClassifiersAssignment_2)*
	{ after(grammarAccess.getRootPackageAccess().getClassifiersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootPackage__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootPackageAccess().getRelationsAssignment_3()); }
	(rule__RootPackage__RelationsAssignment_3)*
	{ after(grammarAccess.getRootPackageAccess().getRelationsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RootPackage__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootPackage__Group_1__0__Impl
	rule__RootPackage__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootPackageAccess().getRootPackageKeyword_1_0()); }
	'rootPackage'
	{ after(grammarAccess.getRootPackageAccess().getRootPackageKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootPackage__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootPackageAccess().getNameAssignment_1_1()); }
	(rule__RootPackage__NameAssignment_1_1)
	{ after(grammarAccess.getRootPackageAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__0__Impl
	rule__Component__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getComponentKeyword_0()); }
	'component'
	{ after(grammarAccess.getComponentAccess().getComponentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__1__Impl
	rule__Component__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getAlternatives_1()); }
	(rule__Component__Alternatives_1)
	{ after(grammarAccess.getComponentAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getAlternatives_2()); }
	(rule__Component__Alternatives_2)
	{ after(grammarAccess.getComponentAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_1_1__0__Impl
	rule__Component__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getAliasAssignment_1_1_0()); }
	(rule__Component__AliasAssignment_1_1_0)
	{ after(grammarAccess.getComponentAccess().getAliasAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_1_1__1__Impl
	rule__Component__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getAsKeyword_1_1_1()); }
	'as'
	{ after(grammarAccess.getComponentAccess().getAsKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getNameAssignment_1_1_2()); }
	(rule__Component__NameAssignment_1_1_2)
	{ after(grammarAccess.getComponentAccess().getNameAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_2_1__0__Impl
	rule__Component__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_2_1_0()); }
	'{'
	{ after(grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_2_1__1__Impl
	rule__Component__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getCommentsAssignment_2_1_1()); }
	(rule__Component__CommentsAssignment_2_1_1)?
	{ after(grammarAccess.getComponentAccess().getCommentsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_2_1__2__Impl
	rule__Component__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getInterfaceRelationAssignment_2_1_2()); }
	(rule__Component__InterfaceRelationAssignment_2_1_2)*
	{ after(grammarAccess.getComponentAccess().getInterfaceRelationAssignment_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_2_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_2_1__3__Impl
	rule__Component__Group_2_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_2_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getPortAssignment_2_1_3()); }
	(rule__Component__PortAssignment_2_1_3)*
	{ after(grammarAccess.getComponentAccess().getPortAssignment_2_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_2_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_2_1__4__Impl
	rule__Component__Group_2_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_2_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getAttributesAssignment_2_1_4()); }
	(rule__Component__AttributesAssignment_2_1_4)*
	{ after(grammarAccess.getComponentAccess().getAttributesAssignment_2_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_2_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_2_1__5__Impl
	rule__Component__Group_2_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_2_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getConnectorsAssignment_2_1_5()); }
	(rule__Component__ConnectorsAssignment_2_1_5)*
	{ after(grammarAccess.getComponentAccess().getConnectorsAssignment_2_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_2_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_2_1__6__Impl
	rule__Component__Group_2_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_2_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getPackagedElementsAssignment_2_1_6()); }
	(rule__Component__PackagedElementsAssignment_2_1_6)*
	{ after(grammarAccess.getComponentAccess().getPackagedElementsAssignment_2_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_2_1__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group_2_1__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_2_1__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_2_1_7()); }
	'}'
	{ after(grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_2_1_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getClassKeyword_0()); }
	'class'
	{ after(grammarAccess.getClassAccess().getClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getAlternatives_1()); }
	(rule__Class__Alternatives_1)
	{ after(grammarAccess.getClassAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getAlternatives_2()); }
	(rule__Class__Alternatives_2)
	{ after(grammarAccess.getClassAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_1_1__0__Impl
	rule__Class__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getAliasAssignment_1_1_0()); }
	(rule__Class__AliasAssignment_1_1_0)
	{ after(grammarAccess.getClassAccess().getAliasAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_1_1__1__Impl
	rule__Class__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getAsKeyword_1_1_1()); }
	'as'
	{ after(grammarAccess.getClassAccess().getAsKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getNameAssignment_1_1_2()); }
	(rule__Class__NameAssignment_1_1_2)
	{ after(grammarAccess.getClassAccess().getNameAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_2_1__0__Impl
	rule__Class__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_2_1_0()); }
	'{'
	{ after(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_2_1__1__Impl
	rule__Class__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getCommentsAssignment_2_1_1()); }
	(rule__Class__CommentsAssignment_2_1_1)?
	{ after(grammarAccess.getClassAccess().getCommentsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_2_1__2__Impl
	rule__Class__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getInterfaceRelationAssignment_2_1_2()); }
	(rule__Class__InterfaceRelationAssignment_2_1_2)*
	{ after(grammarAccess.getClassAccess().getInterfaceRelationAssignment_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group_2_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_2_1_3()); }
	'}'
	{ after(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_2_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Generalization__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__0__Impl
	rule__Generalization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getIsaKeyword_0()); }
	'isa'
	{ after(grammarAccess.getGeneralizationAccess().getIsaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__1__Impl
	rule__Generalization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getGeneralizationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__2__Impl
	rule__Generalization__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getLeftClassifierAssignment_2()); }
	(rule__Generalization__LeftClassifierAssignment_2)
	{ after(grammarAccess.getGeneralizationAccess().getLeftClassifierAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__3__Impl
	rule__Generalization__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getGeneralizationAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__4__Impl
	rule__Generalization__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getRightClassifierAssignment_4()); }
	(rule__Generalization__RightClassifierAssignment_4)
	{ after(grammarAccess.getGeneralizationAccess().getRightClassifierAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getGeneralizationAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Abstraction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abstraction__Group__0__Impl
	rule__Abstraction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractionAccess().getAbsKeyword_0()); }
	'abs'
	{ after(grammarAccess.getAbstractionAccess().getAbsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abstraction__Group__1__Impl
	rule__Abstraction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAbstractionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abstraction__Group__2__Impl
	rule__Abstraction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractionAccess().getLeftClassifierAssignment_2()); }
	(rule__Abstraction__LeftClassifierAssignment_2)
	{ after(grammarAccess.getAbstractionAccess().getLeftClassifierAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abstraction__Group__3__Impl
	rule__Abstraction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractionAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getAbstractionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abstraction__Group__4__Impl
	rule__Abstraction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractionAccess().getRightClassifierAssignment_4()); }
	(rule__Abstraction__RightClassifierAssignment_4)
	{ after(grammarAccess.getAbstractionAccess().getRightClassifierAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abstraction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getAbstractionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Manifestation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manifestation__Group__0__Impl
	rule__Manifestation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Manifestation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManifestationAccess().getManKeyword_0()); }
	'man'
	{ after(grammarAccess.getManifestationAccess().getManKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manifestation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manifestation__Group__1__Impl
	rule__Manifestation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Manifestation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManifestationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getManifestationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manifestation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manifestation__Group__2__Impl
	rule__Manifestation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Manifestation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManifestationAccess().getLeftClassifierAssignment_2()); }
	(rule__Manifestation__LeftClassifierAssignment_2)
	{ after(grammarAccess.getManifestationAccess().getLeftClassifierAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manifestation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manifestation__Group__3__Impl
	rule__Manifestation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Manifestation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManifestationAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getManifestationAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manifestation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manifestation__Group__4__Impl
	rule__Manifestation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Manifestation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManifestationAccess().getRightClassifierAssignment_4()); }
	(rule__Manifestation__RightClassifierAssignment_4)
	{ after(grammarAccess.getManifestationAccess().getRightClassifierAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manifestation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manifestation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Manifestation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManifestationAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getManifestationAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Substitution__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substitution__Group__0__Impl
	rule__Substitution__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstitutionAccess().getSubKeyword_0()); }
	'sub'
	{ after(grammarAccess.getSubstitutionAccess().getSubKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substitution__Group__1__Impl
	rule__Substitution__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstitutionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSubstitutionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substitution__Group__2__Impl
	rule__Substitution__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstitutionAccess().getLeftClassifierAssignment_2()); }
	(rule__Substitution__LeftClassifierAssignment_2)
	{ after(grammarAccess.getSubstitutionAccess().getLeftClassifierAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substitution__Group__3__Impl
	rule__Substitution__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstitutionAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getSubstitutionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substitution__Group__4__Impl
	rule__Substitution__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstitutionAccess().getRightClassifierAssignment_4()); }
	(rule__Substitution__RightClassifierAssignment_4)
	{ after(grammarAccess.getSubstitutionAccess().getRightClassifierAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substitution__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstitutionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getSubstitutionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dependency__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__0__Impl
	rule__Dependency__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getDepKeyword_0()); }
	'dep'
	{ after(grammarAccess.getDependencyAccess().getDepKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__1__Impl
	rule__Dependency__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getDependencyAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__2__Impl
	rule__Dependency__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getLeftClassifierAssignment_2()); }
	(rule__Dependency__LeftClassifierAssignment_2)
	{ after(grammarAccess.getDependencyAccess().getLeftClassifierAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__3__Impl
	rule__Dependency__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getDependencyAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__4__Impl
	rule__Dependency__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getRightClassifierAssignment_4()); }
	(rule__Dependency__RightClassifierAssignment_4)
	{ after(grammarAccess.getDependencyAccess().getRightClassifierAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getDependencyAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__0__Impl
	rule__Comment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getNoteKeyword_0()); }
	'note'
	{ after(grammarAccess.getCommentAccess().getNoteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getBodyAssignment_1()); }
	(rule__Comment__BodyAssignment_1)
	{ after(grammarAccess.getCommentAccess().getBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Port__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__0__Impl
	rule__Port__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getVisibilityAssignment_0()); }
	(rule__Port__VisibilityAssignment_0)?
	{ after(grammarAccess.getPortAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__1__Impl
	rule__Port__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getPortKeyword_1()); }
	'port'
	{ after(grammarAccess.getPortAccess().getPortKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__2__Impl
	rule__Port__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getNameAssignment_2()); }
	(rule__Port__NameAssignment_2)
	{ after(grammarAccess.getPortAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__3__Impl
	rule__Port__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getRealizesKeyword_3()); }
	'realizes'
	{ after(grammarAccess.getPortAccess().getRealizesKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__4__Impl
	rule__Port__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getConjugatedAssignment_4()); }
	(rule__Port__ConjugatedAssignment_4)?
	{ after(grammarAccess.getPortAccess().getConjugatedAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getRealizedClassifierAssignment_5()); }
	(rule__Port__RealizedClassifierAssignment_5)
	{ after(grammarAccess.getPortAccess().getRealizedClassifierAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group__0__Impl
	rule__Interface__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getInterfaceKeyword_0()); }
	'interface'
	{ after(grammarAccess.getInterfaceAccess().getInterfaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group__1__Impl
	rule__Interface__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getAlternatives_1()); }
	(rule__Interface__Alternatives_1)
	{ after(grammarAccess.getInterfaceAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getAlternatives_2()); }
	(rule__Interface__Alternatives_2)
	{ after(grammarAccess.getInterfaceAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group_1_1__0__Impl
	rule__Interface__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getAliasAssignment_1_1_0()); }
	(rule__Interface__AliasAssignment_1_1_0)
	{ after(grammarAccess.getInterfaceAccess().getAliasAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group_1_1__1__Impl
	rule__Interface__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getAsKeyword_1_1_1()); }
	'as'
	{ after(grammarAccess.getInterfaceAccess().getAsKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getNameAssignment_1_1_2()); }
	(rule__Interface__NameAssignment_1_1_2)
	{ after(grammarAccess.getInterfaceAccess().getNameAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group_2_1__0__Impl
	rule__Interface__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_2_1_0()); }
	'{'
	{ after(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group_2_1__1__Impl
	rule__Interface__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getCommentsAssignment_2_1_1()); }
	(rule__Interface__CommentsAssignment_2_1_1)?
	{ after(grammarAccess.getInterfaceAccess().getCommentsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group_2_1__2__Impl
	rule__Interface__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getMembersAssignment_2_1_2()); }
	(rule__Interface__MembersAssignment_2_1_2)*
	{ after(grammarAccess.getInterfaceAccess().getMembersAssignment_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group_2_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_2_1_3()); }
	'}'
	{ after(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_2_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__0__Impl
	rule__Connector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getConKeyword_0()); }
	'con'
	{ after(grammarAccess.getConnectorAccess().getConKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__1__Impl
	rule__Connector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getAlternatives_1()); }
	(rule__Connector__Alternatives_1)
	{ after(grammarAccess.getConnectorAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__2__Impl
	rule__Connector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getConnectorAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__3__Impl
	rule__Connector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getConnectorEndsAssignment_3()); }
	(rule__Connector__ConnectorEndsAssignment_3)
	{ after(grammarAccess.getConnectorAccess().getConnectorEndsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__4__Impl
	rule__Connector__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getGroup_4()); }
	(rule__Connector__Group_4__0)*
	{ after(grammarAccess.getConnectorAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getConnectorAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group_1_1__0__Impl
	rule__Connector__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getAliasAssignment_1_1_0()); }
	(rule__Connector__AliasAssignment_1_1_0)
	{ after(grammarAccess.getConnectorAccess().getAliasAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group_1_1__1__Impl
	rule__Connector__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getAsKeyword_1_1_1()); }
	'as'
	{ after(grammarAccess.getConnectorAccess().getAsKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getNameAssignment_1_1_2()); }
	(rule__Connector__NameAssignment_1_1_2)
	{ after(grammarAccess.getConnectorAccess().getNameAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connector__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group_4__0__Impl
	rule__Connector__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getConnectorAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connector__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorAccess().getConnectorEndsAssignment_4_1()); }
	(rule__Connector__ConnectorEndsAssignment_4_1)
	{ after(grammarAccess.getConnectorAccess().getConnectorEndsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorEnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorEnd__Group__0__Impl
	rule__ConnectorEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorEndAccess().getGroup_0()); }
	(rule__ConnectorEnd__Group_0__0)?
	{ after(grammarAccess.getConnectorEndAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorEnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorEndAccess().getRoleAssignment_1()); }
	(rule__ConnectorEnd__RoleAssignment_1)
	{ after(grammarAccess.getConnectorEndAccess().getRoleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectorEnd__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorEnd__Group_0__0__Impl
	rule__ConnectorEnd__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorEndAccess().getPartAssignment_0_0()); }
	(rule__ConnectorEnd__PartAssignment_0_0)
	{ after(grammarAccess.getConnectorEndAccess().getPartAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectorEnd__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectorEndAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getConnectorEndAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Provide__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Provide__Group__0__Impl
	rule__Provide__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Provide__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProvideAccess().getProvideAction_0()); }
	()
	{ after(grammarAccess.getProvideAccess().getProvideAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Provide__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Provide__Group__1__Impl
	rule__Provide__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Provide__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProvideAccess().getProvideKeyword_1()); }
	'provide'
	{ after(grammarAccess.getProvideAccess().getProvideKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Provide__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Provide__Group__2__Impl
	rule__Provide__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Provide__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProvideAccess().getAlternatives_2()); }
	(rule__Provide__Alternatives_2)
	{ after(grammarAccess.getProvideAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Provide__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Provide__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Provide__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProvideAccess().getInterfaceAssignment_3()); }
	(rule__Provide__InterfaceAssignment_3)
	{ after(grammarAccess.getProvideAccess().getInterfaceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Provide__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Provide__Group_2_1__0__Impl
	rule__Provide__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Provide__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProvideAccess().getAliasAssignment_2_1_0()); }
	(rule__Provide__AliasAssignment_2_1_0)
	{ after(grammarAccess.getProvideAccess().getAliasAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Provide__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Provide__Group_2_1__1__Impl
	rule__Provide__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Provide__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProvideAccess().getAsKeyword_2_1_1()); }
	'as'
	{ after(grammarAccess.getProvideAccess().getAsKeyword_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Provide__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Provide__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Provide__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProvideAccess().getNameAssignment_2_1_2()); }
	(rule__Provide__NameAssignment_2_1_2)
	{ after(grammarAccess.getProvideAccess().getNameAssignment_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Require__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group__0__Impl
	rule__Require__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getRequireAction_0()); }
	()
	{ after(grammarAccess.getRequireAccess().getRequireAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group__1__Impl
	rule__Require__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getRequireKeyword_1()); }
	'require'
	{ after(grammarAccess.getRequireAccess().getRequireKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group__2__Impl
	rule__Require__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getAlternatives_2()); }
	(rule__Require__Alternatives_2)
	{ after(grammarAccess.getRequireAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getInterfaceAssignment_3()); }
	(rule__Require__InterfaceAssignment_3)
	{ after(grammarAccess.getRequireAccess().getInterfaceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Require__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group_2_1__0__Impl
	rule__Require__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getAliasAssignment_2_1_0()); }
	(rule__Require__AliasAssignment_2_1_0)
	{ after(grammarAccess.getRequireAccess().getAliasAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group_2_1__1__Impl
	rule__Require__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getAsKeyword_2_1_1()); }
	'as'
	{ after(grammarAccess.getRequireAccess().getAsKeyword_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getNameAssignment_2_1_2()); }
	(rule__Require__NameAssignment_2_1_2)
	{ after(grammarAccess.getRequireAccess().getNameAssignment_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getMethodAction_0()); }
	()
	{ after(grammarAccess.getMethodAccess().getMethodAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getVisibilityAssignment_1()); }
	(rule__Method__VisibilityAssignment_1)?
	{ after(grammarAccess.getMethodAccess().getVisibilityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getAbstractAssignment_2()); }
	(rule__Method__AbstractAssignment_2)?
	{ after(grammarAccess.getMethodAccess().getAbstractAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getStaticAssignment_3()); }
	(rule__Method__StaticAssignment_3)?
	{ after(grammarAccess.getMethodAccess().getStaticAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__4__Impl
	rule__Method__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getNameAssignment_4()); }
	(rule__Method__NameAssignment_4)
	{ after(grammarAccess.getMethodAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__5__Impl
	rule__Method__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__6__Impl
	rule__Method__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_6()); }
	(rule__Method__Group_6__0)*
	{ after(grammarAccess.getMethodAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__7__Impl
	rule__Method__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getMethodAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_8()); }
	(rule__Method__Group_8__0)?
	{ after(grammarAccess.getMethodAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_6__0__Impl
	rule__Method__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getParametersAssignment_6_0()); }
	(rule__Method__ParametersAssignment_6_0)
	{ after(grammarAccess.getMethodAccess().getParametersAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_6_1()); }
	(rule__Method__Group_6_1__0)*
	{ after(grammarAccess.getMethodAccess().getGroup_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_6_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_6_1__0__Impl
	rule__Method__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getCommaKeyword_6_1_0()); }
	','
	{ after(grammarAccess.getMethodAccess().getCommaKeyword_6_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getParametersAssignment_6_1_1()); }
	(rule__Method__ParametersAssignment_6_1_1)
	{ after(grammarAccess.getMethodAccess().getParametersAssignment_6_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_8__0__Impl
	rule__Method__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getColonKeyword_8_0()); }
	':'
	{ after(grammarAccess.getMethodAccess().getColonKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getTypeAssignment_8_1()); }
	(rule__Method__TypeAssignment_8_1)
	{ after(grammarAccess.getMethodAccess().getTypeAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getVisibilityAssignment_0()); }
	(rule__Attribute__VisibilityAssignment_0)?
	{ after(grammarAccess.getAttributeAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getStaticAssignment_1()); }
	(rule__Attribute__StaticAssignment_1)?
	{ after(grammarAccess.getAttributeAccess().getStaticAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_2()); }
	(rule__Attribute__NameAssignment_2)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getAttributeAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getTypeAssignment_4()); }
	(rule__Attribute__TypeAssignment_4)
	{ after(grammarAccess.getAttributeAccess().getTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentTypeAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentTypeAttribute__Group__0__Impl
	rule__ComponentTypeAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentTypeAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentTypeAttributeAccess().getNameAssignment_0()); }
	(rule__ComponentTypeAttribute__NameAssignment_0)
	{ after(grammarAccess.getComponentTypeAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentTypeAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentTypeAttribute__Group__1__Impl
	rule__ComponentTypeAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentTypeAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentTypeAttributeAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getComponentTypeAttributeAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentTypeAttribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentTypeAttribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentTypeAttribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentTypeAttributeAccess().getTypeAssignment_2()); }
	(rule__ComponentTypeAttribute__TypeAssignment_2)
	{ after(grammarAccess.getComponentTypeAttributeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getVisibilityAssignment_0()); }
	(rule__Parameter__VisibilityAssignment_0)?
	{ after(grammarAccess.getParameterAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
	(rule__Parameter__NameAssignment_1)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeAssignment_3()); }
	(rule__Parameter__TypeAssignment_3)
	{ after(grammarAccess.getParameterAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getGroup_1()); }
	(rule__FQN__Group_1__0)*
	{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDiagram__TitleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentDiagramAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getComponentDiagramAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDiagram__RootpackageAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentDiagramAccess().getRootpackageRootPackageParserRuleCall_3_0()); }
		ruleRootPackage
		{ after(grammarAccess.getComponentDiagramAccess().getRootpackageRootPackageParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootPackageAccess().getNameFQNParserRuleCall_1_1_0()); }
		ruleFQN
		{ after(grammarAccess.getRootPackageAccess().getNameFQNParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__ClassifiersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootPackageAccess().getClassifiersClassifierParserRuleCall_2_0()); }
		ruleClassifier
		{ after(grammarAccess.getRootPackageAccess().getClassifiersClassifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__RelationsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootPackageAccess().getRelationsClassifierRelationParserRuleCall_3_0()); }
		ruleClassifierRelation
		{ after(grammarAccess.getRootPackageAccess().getRelationsClassifierRelationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__AliasAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getAliasIDTerminalRuleCall_1_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getComponentAccess().getAliasIDTerminalRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__NameAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getNameSTRINGTerminalRuleCall_1_1_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getComponentAccess().getNameSTRINGTerminalRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__CommentsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getCommentsCommentParserRuleCall_2_0_0()); }
		ruleComment
		{ after(grammarAccess.getComponentAccess().getCommentsCommentParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__CommentsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getCommentsCommentParserRuleCall_2_1_1_0()); }
		ruleComment
		{ after(grammarAccess.getComponentAccess().getCommentsCommentParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__InterfaceRelationAssignment_2_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getInterfaceRelationInterfaceRelationParserRuleCall_2_1_2_0()); }
		ruleInterfaceRelation
		{ after(grammarAccess.getComponentAccess().getInterfaceRelationInterfaceRelationParserRuleCall_2_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__PortAssignment_2_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getPortPortParserRuleCall_2_1_3_0()); }
		rulePort
		{ after(grammarAccess.getComponentAccess().getPortPortParserRuleCall_2_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__AttributesAssignment_2_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getAttributesComponentTypeAttributeParserRuleCall_2_1_4_0()); }
		ruleComponentTypeAttribute
		{ after(grammarAccess.getComponentAccess().getAttributesComponentTypeAttributeParserRuleCall_2_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__ConnectorsAssignment_2_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getConnectorsConnectorParserRuleCall_2_1_5_0()); }
		ruleConnector
		{ after(grammarAccess.getComponentAccess().getConnectorsConnectorParserRuleCall_2_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__PackagedElementsAssignment_2_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getPackagedElementsClassifierParserRuleCall_2_1_6_0()); }
		ruleClassifier
		{ after(grammarAccess.getComponentAccess().getPackagedElementsClassifierParserRuleCall_2_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__AliasAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getAliasIDTerminalRuleCall_1_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getClassAccess().getAliasIDTerminalRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__NameAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getNameSTRINGTerminalRuleCall_1_1_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getClassAccess().getNameSTRINGTerminalRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__CommentsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getCommentsCommentParserRuleCall_2_0_0()); }
		ruleComment
		{ after(grammarAccess.getClassAccess().getCommentsCommentParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__CommentsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getCommentsCommentParserRuleCall_2_1_1_0()); }
		ruleComment
		{ after(grammarAccess.getClassAccess().getCommentsCommentParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__InterfaceRelationAssignment_2_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getInterfaceRelationInterfaceRelationParserRuleCall_2_1_2_0()); }
		ruleInterfaceRelation
		{ after(grammarAccess.getClassAccess().getInterfaceRelationInterfaceRelationParserRuleCall_2_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__LeftClassifierAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationAccess().getLeftClassifierClassifierCrossReference_2_0()); }
		(
			{ before(grammarAccess.getGeneralizationAccess().getLeftClassifierClassifierIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGeneralizationAccess().getLeftClassifierClassifierIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getGeneralizationAccess().getLeftClassifierClassifierCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__RightClassifierAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationAccess().getRightClassifierClassifierCrossReference_4_0()); }
		(
			{ before(grammarAccess.getGeneralizationAccess().getRightClassifierClassifierIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGeneralizationAccess().getRightClassifierClassifierIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getGeneralizationAccess().getRightClassifierClassifierCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__LeftClassifierAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractionAccess().getLeftClassifierClassifierCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAbstractionAccess().getLeftClassifierClassifierIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAbstractionAccess().getLeftClassifierClassifierIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAbstractionAccess().getLeftClassifierClassifierCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__RightClassifierAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractionAccess().getRightClassifierClassifierCrossReference_4_0()); }
		(
			{ before(grammarAccess.getAbstractionAccess().getRightClassifierClassifierIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAbstractionAccess().getRightClassifierClassifierIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getAbstractionAccess().getRightClassifierClassifierCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manifestation__LeftClassifierAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getManifestationAccess().getLeftClassifierClassifierCrossReference_2_0()); }
		(
			{ before(grammarAccess.getManifestationAccess().getLeftClassifierClassifierIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getManifestationAccess().getLeftClassifierClassifierIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getManifestationAccess().getLeftClassifierClassifierCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manifestation__RightClassifierAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getManifestationAccess().getRightClassifierClassifierCrossReference_4_0()); }
		(
			{ before(grammarAccess.getManifestationAccess().getRightClassifierClassifierIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getManifestationAccess().getRightClassifierClassifierIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getManifestationAccess().getRightClassifierClassifierCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__LeftClassifierAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubstitutionAccess().getLeftClassifierClassifierCrossReference_2_0()); }
		(
			{ before(grammarAccess.getSubstitutionAccess().getLeftClassifierClassifierIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSubstitutionAccess().getLeftClassifierClassifierIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getSubstitutionAccess().getLeftClassifierClassifierCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__RightClassifierAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubstitutionAccess().getRightClassifierClassifierCrossReference_4_0()); }
		(
			{ before(grammarAccess.getSubstitutionAccess().getRightClassifierClassifierIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSubstitutionAccess().getRightClassifierClassifierIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getSubstitutionAccess().getRightClassifierClassifierCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__LeftClassifierAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getLeftClassifierClassifierCrossReference_2_0()); }
		(
			{ before(grammarAccess.getDependencyAccess().getLeftClassifierClassifierIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDependencyAccess().getLeftClassifierClassifierIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getDependencyAccess().getLeftClassifierClassifierCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__RightClassifierAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getRightClassifierClassifierCrossReference_4_0()); }
		(
			{ before(grammarAccess.getDependencyAccess().getRightClassifierClassifierIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDependencyAccess().getRightClassifierClassifierIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getDependencyAccess().getRightClassifierClassifierCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getBodySTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getCommentAccess().getBodySTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
		ruleVisibility
		{ after(grammarAccess.getPortAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getPortAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__ConjugatedAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getConjugatedAlternatives_4_0()); }
		(rule__Port__ConjugatedAlternatives_4_0)
		{ after(grammarAccess.getPortAccess().getConjugatedAlternatives_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__RealizedClassifierAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getRealizedClassifierClassifierCrossReference_5_0()); }
		(
			{ before(grammarAccess.getPortAccess().getRealizedClassifierClassifierIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPortAccess().getRealizedClassifierClassifierIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getPortAccess().getRealizedClassifierClassifierCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getInterfaceAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__AliasAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceAccess().getAliasIDTerminalRuleCall_1_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getInterfaceAccess().getAliasIDTerminalRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__NameAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceAccess().getNameSTRINGTerminalRuleCall_1_1_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getInterfaceAccess().getNameSTRINGTerminalRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__CommentsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceAccess().getCommentsCommentParserRuleCall_2_0_0()); }
		ruleComment
		{ after(grammarAccess.getInterfaceAccess().getCommentsCommentParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__CommentsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceAccess().getCommentsCommentParserRuleCall_2_1_1_0()); }
		ruleComment
		{ after(grammarAccess.getInterfaceAccess().getCommentsCommentParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__MembersAssignment_2_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceAccess().getMembersMemberParserRuleCall_2_1_2_0()); }
		ruleMember
		{ after(grammarAccess.getInterfaceAccess().getMembersMemberParserRuleCall_2_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getConnectorAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__AliasAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getAliasIDTerminalRuleCall_1_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getConnectorAccess().getAliasIDTerminalRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__NameAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getNameSTRINGTerminalRuleCall_1_1_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getConnectorAccess().getNameSTRINGTerminalRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__ConnectorEndsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getConnectorEndsConnectorEndParserRuleCall_3_0()); }
		ruleConnectorEnd
		{ after(grammarAccess.getConnectorAccess().getConnectorEndsConnectorEndParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__ConnectorEndsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorAccess().getConnectorEndsConnectorEndParserRuleCall_4_1_0()); }
		ruleConnectorEnd
		{ after(grammarAccess.getConnectorAccess().getConnectorEndsConnectorEndParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__PartAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorEndAccess().getPartAttributeCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getConnectorEndAccess().getPartAttributeIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConnectorEndAccess().getPartAttributeIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getConnectorEndAccess().getPartAttributeCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectorEnd__RoleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectorEndAccess().getRolePortCrossReference_1_0()); }
		(
			{ before(grammarAccess.getConnectorEndAccess().getRolePortIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConnectorEndAccess().getRolePortIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getConnectorEndAccess().getRolePortCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Provide__NameAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProvideAccess().getNameIDTerminalRuleCall_2_0_0()); }
		RULE_ID
		{ after(grammarAccess.getProvideAccess().getNameIDTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Provide__AliasAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProvideAccess().getAliasIDTerminalRuleCall_2_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getProvideAccess().getAliasIDTerminalRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Provide__NameAssignment_2_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProvideAccess().getNameSTRINGTerminalRuleCall_2_1_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getProvideAccess().getNameSTRINGTerminalRuleCall_2_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Provide__InterfaceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProvideAccess().getInterfaceInterfaceCrossReference_3_0()); }
		(
			{ before(grammarAccess.getProvideAccess().getInterfaceInterfaceFQNParserRuleCall_3_0_1()); }
			ruleFQN
			{ after(grammarAccess.getProvideAccess().getInterfaceInterfaceFQNParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getProvideAccess().getInterfaceInterfaceCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__NameAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireAccess().getNameIDTerminalRuleCall_2_0_0()); }
		RULE_ID
		{ after(grammarAccess.getRequireAccess().getNameIDTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__AliasAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireAccess().getAliasIDTerminalRuleCall_2_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getRequireAccess().getAliasIDTerminalRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__NameAssignment_2_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireAccess().getNameSTRINGTerminalRuleCall_2_1_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getRequireAccess().getNameSTRINGTerminalRuleCall_2_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__InterfaceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireAccess().getInterfaceInterfaceCrossReference_3_0()); }
		(
			{ before(grammarAccess.getRequireAccess().getInterfaceInterfaceFQNParserRuleCall_3_0_1()); }
			ruleFQN
			{ after(grammarAccess.getRequireAccess().getInterfaceInterfaceFQNParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getRequireAccess().getInterfaceInterfaceCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__VisibilityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
		ruleVisibility
		{ after(grammarAccess.getMethodAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__AbstractAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getAbstractAbstractKeyword_2_0()); }
		(
			{ before(grammarAccess.getMethodAccess().getAbstractAbstractKeyword_2_0()); }
			'abstract'
			{ after(grammarAccess.getMethodAccess().getAbstractAbstractKeyword_2_0()); }
		)
		{ after(grammarAccess.getMethodAccess().getAbstractAbstractKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__StaticAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getStaticStaticKeyword_3_0()); }
		(
			{ before(grammarAccess.getMethodAccess().getStaticStaticKeyword_3_0()); }
			'static'
			{ after(grammarAccess.getMethodAccess().getStaticStaticKeyword_3_0()); }
		)
		{ after(grammarAccess.getMethodAccess().getStaticStaticKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParametersAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getParametersParameterParserRuleCall_6_0_0()); }
		ruleParameter
		{ after(grammarAccess.getMethodAccess().getParametersParameterParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParametersAssignment_6_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getParametersParameterParserRuleCall_6_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getMethodAccess().getParametersParameterParserRuleCall_6_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__TypeAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getTypeClassifierCrossReference_8_1_0()); }
		(
			{ before(grammarAccess.getMethodAccess().getTypeClassifierFQNParserRuleCall_8_1_0_1()); }
			ruleFQN
			{ after(grammarAccess.getMethodAccess().getTypeClassifierFQNParserRuleCall_8_1_0_1()); }
		)
		{ after(grammarAccess.getMethodAccess().getTypeClassifierCrossReference_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
		ruleVisibility
		{ after(grammarAccess.getAttributeAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__StaticAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getStaticStaticKeyword_1_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getStaticStaticKeyword_1_0()); }
			'static'
			{ after(grammarAccess.getAttributeAccess().getStaticStaticKeyword_1_0()); }
		)
		{ after(grammarAccess.getAttributeAccess().getStaticStaticKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getTypeClassifierCrossReference_4_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getTypeClassifierFQNParserRuleCall_4_0_1()); }
			ruleFQN
			{ after(grammarAccess.getAttributeAccess().getTypeClassifierFQNParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getAttributeAccess().getTypeClassifierCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentTypeAttribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentTypeAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getComponentTypeAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentTypeAttribute__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentTypeAttributeAccess().getTypeComponentCrossReference_2_0()); }
		(
			{ before(grammarAccess.getComponentTypeAttributeAccess().getTypeComponentFQNParserRuleCall_2_0_1()); }
			ruleFQN
			{ after(grammarAccess.getComponentTypeAttributeAccess().getTypeComponentFQNParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getComponentTypeAttributeAccess().getTypeComponentCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
		ruleVisibility
		{ after(grammarAccess.getParameterAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeClassifierCrossReference_3_0()); }
		(
			{ before(grammarAccess.getParameterAccess().getTypeClassifierFQNParserRuleCall_3_0_1()); }
			ruleFQN
			{ after(grammarAccess.getParameterAccess().getTypeClassifierFQNParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getParameterAccess().getTypeClassifierCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
