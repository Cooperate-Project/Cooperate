/*
 * generated by Xtext
 */
grammar InternalCls;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.cooperateproject.modeling.textual.cls.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.cooperateproject.modeling.textual.cls.ide.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.cooperateproject.modeling.textual.cls.services.ClsGrammarAccess;

}

@parser::members {
 
 	private ClsGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ClsGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleClassDiagram
entryRuleClassDiagram 
:
{ before(grammarAccess.getClassDiagramRule()); }
	 ruleClassDiagram
{ after(grammarAccess.getClassDiagramRule()); } 
	 EOF 
;

// Rule ClassDiagram
ruleClassDiagram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassDiagramAccess().getGroup()); }
(rule__ClassDiagram__Group__0)
{ after(grammarAccess.getClassDiagramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRootPackage
entryRuleRootPackage 
:
{ before(grammarAccess.getRootPackageRule()); }
	 ruleRootPackage
{ after(grammarAccess.getRootPackageRule()); } 
	 EOF 
;

// Rule RootPackage
ruleRootPackage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRootPackageAccess().getGroup()); }
(rule__RootPackage__Group__0)
{ after(grammarAccess.getRootPackageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackage
entryRulePackage 
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageAccess().getGroup()); }
(rule__Package__Group__0)
{ after(grammarAccess.getPackageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageImport
entryRulePackageImport 
:
{ before(grammarAccess.getPackageImportRule()); }
	 rulePackageImport
{ after(grammarAccess.getPackageImportRule()); } 
	 EOF 
;

// Rule PackageImport
rulePackageImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageImportAccess().getGroup()); }
(rule__PackageImport__Group__0)
{ after(grammarAccess.getPackageImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFQN
entryRuleFQN 
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFQNAccess().getGroup()); }
(rule__FQN__Group__0)
{ after(grammarAccess.getFQNAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifier
entryRuleClassifier 
:
{ before(grammarAccess.getClassifierRule()); }
	 ruleClassifier
{ after(grammarAccess.getClassifierRule()); } 
	 EOF 
;

// Rule Classifier
ruleClassifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassifierAccess().getAlternatives()); }
(rule__Classifier__Alternatives)
{ after(grammarAccess.getClassifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass
entryRuleClass 
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAccess().getGroup()); }
(rule__Class__Group__0)
{ after(grammarAccess.getClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterface
entryRuleInterface 
:
{ before(grammarAccess.getInterfaceRule()); }
	 ruleInterface
{ after(grammarAccess.getInterfaceRule()); } 
	 EOF 
;

// Rule Interface
ruleInterface
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceAccess().getGroup()); }
(rule__Interface__Group__0)
{ after(grammarAccess.getInterfaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeReference
entryRuleTypeReference 
:
{ before(grammarAccess.getTypeReferenceRule()); }
	 ruleTypeReference
{ after(grammarAccess.getTypeReferenceRule()); } 
	 EOF 
;

// Rule TypeReference
ruleTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeReferenceAccess().getAlternatives()); }
(rule__TypeReference__Alternatives)
{ after(grammarAccess.getTypeReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeReference
entryRuleDataTypeReference 
:
{ before(grammarAccess.getDataTypeReferenceRule()); }
	 ruleDataTypeReference
{ after(grammarAccess.getDataTypeReferenceRule()); } 
	 EOF 
;

// Rule DataTypeReference
ruleDataTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeReferenceAccess().getTypeAssignment()); }
(rule__DataTypeReference__TypeAssignment)
{ after(grammarAccess.getDataTypeReferenceAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUMLTypeReference
entryRuleUMLTypeReference 
:
{ before(grammarAccess.getUMLTypeReferenceRule()); }
	 ruleUMLTypeReference
{ after(grammarAccess.getUMLTypeReferenceRule()); } 
	 EOF 
;

// Rule UMLTypeReference
ruleUMLTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUMLTypeReferenceAccess().getTypeAssignment()); }
(rule__UMLTypeReference__TypeAssignment)
{ after(grammarAccess.getUMLTypeReferenceAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMember
entryRuleMember 
:
{ before(grammarAccess.getMemberRule()); }
	 ruleMember
{ after(grammarAccess.getMemberRule()); } 
	 EOF 
;

// Rule Member
ruleMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberAccess().getAlternatives()); }
(rule__Member__Alternatives)
{ after(grammarAccess.getMemberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethod
entryRuleMethod 
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodAccess().getGroup()); }
(rule__Method__Group__0)
{ after(grammarAccess.getMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConnector
entryRuleConnector 
:
{ before(grammarAccess.getConnectorRule()); }
	 ruleConnector
{ after(grammarAccess.getConnectorRule()); } 
	 EOF 
;

// Rule Connector
ruleConnector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConnectorAccess().getAlternatives()); }
(rule__Connector__Alternatives)
{ after(grammarAccess.getConnectorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGeneralization
entryRuleGeneralization 
:
{ before(grammarAccess.getGeneralizationRule()); }
	 ruleGeneralization
{ after(grammarAccess.getGeneralizationRule()); } 
	 EOF 
;

// Rule Generalization
ruleGeneralization
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGeneralizationAccess().getGroup()); }
(rule__Generalization__Group__0)
{ after(grammarAccess.getGeneralizationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImplementation
entryRuleImplementation 
:
{ before(grammarAccess.getImplementationRule()); }
	 ruleImplementation
{ after(grammarAccess.getImplementationRule()); } 
	 EOF 
;

// Rule Implementation
ruleImplementation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImplementationAccess().getGroup()); }
(rule__Implementation__Group__0)
{ after(grammarAccess.getImplementationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommentLink
entryRuleCommentLink 
:
{ before(grammarAccess.getCommentLinkRule()); }
	 ruleCommentLink
{ after(grammarAccess.getCommentLinkRule()); } 
	 EOF 
;

// Rule CommentLink
ruleCommentLink
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentLinkAccess().getGroup()); }
(rule__CommentLink__Group__0)
{ after(grammarAccess.getCommentLinkAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssociation
entryRuleAssociation 
:
{ before(grammarAccess.getAssociationRule()); }
	 ruleAssociation
{ after(grammarAccess.getAssociationRule()); } 
	 EOF 
;

// Rule Association
ruleAssociation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssociationAccess().getGroup()); }
(rule__Association__Group__0)
{ after(grammarAccess.getAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiAssociation
entryRuleMultiAssociation 
:
{ before(grammarAccess.getMultiAssociationRule()); }
	 ruleMultiAssociation
{ after(grammarAccess.getMultiAssociationRule()); } 
	 EOF 
;

// Rule MultiAssociation
ruleMultiAssociation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiAssociationAccess().getGroup()); }
(rule__MultiAssociation__Group__0)
{ after(grammarAccess.getMultiAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMemberEnd
entryRuleMemberEnd 
:
{ before(grammarAccess.getMemberEndRule()); }
	 ruleMemberEnd
{ after(grammarAccess.getMemberEndRule()); } 
	 EOF 
;

// Rule MemberEnd
ruleMemberEnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberEndAccess().getGroup()); }
(rule__MemberEnd__Group__0)
{ after(grammarAccess.getMemberEndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssociationProperties
entryRuleAssociationProperties 
:
{ before(grammarAccess.getAssociationPropertiesRule()); }
	 ruleAssociationProperties
{ after(grammarAccess.getAssociationPropertiesRule()); } 
	 EOF 
;

// Rule AssociationProperties
ruleAssociationProperties
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssociationPropertiesAccess().getGroup()); }
(rule__AssociationProperties__Group__0)
{ after(grammarAccess.getAssociationPropertiesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCardinality
entryRuleCardinality 
:
{ before(grammarAccess.getCardinalityRule()); }
	 ruleCardinality
{ after(grammarAccess.getCardinalityRule()); } 
	 EOF 
;

// Rule Cardinality
ruleCardinality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCardinalityAccess().getGroup()); }
(rule__Cardinality__Group__0)
{ after(grammarAccess.getCardinalityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommentBody
entryRuleCommentBody 
:
{ before(grammarAccess.getCommentBodyRule()); }
	 ruleCommentBody
{ after(grammarAccess.getCommentBodyRule()); } 
	 EOF 
;

// Rule CommentBody
ruleCommentBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentBodyAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getCommentBodyAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCardinalityBound
entryRuleCardinalityBound 
:
{ before(grammarAccess.getCardinalityBoundRule()); }
	 ruleCardinalityBound
{ after(grammarAccess.getCardinalityBoundRule()); } 
	 EOF 
;

// Rule CardinalityBound
ruleCardinalityBound
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCardinalityBoundAccess().getAlternatives()); }
(rule__CardinalityBound__Alternatives)
{ after(grammarAccess.getCardinalityBoundAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Visibility
ruleVisibility
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getAlternatives()); }
(rule__Visibility__Alternatives)
{ after(grammarAccess.getVisibilityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PrimitiveType
rulePrimitiveType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
(rule__PrimitiveType__Alternatives)
{ after(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AggregationKind
ruleAggregationKind
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationKindAccess().getAlternatives()); }
(rule__AggregationKind__Alternatives)
{ after(grammarAccess.getAggregationKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Classifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierAccess().getClassParserRuleCall_0()); }
	ruleClass
{ after(grammarAccess.getClassifierAccess().getClassParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassifierAccess().getInterfaceParserRuleCall_1()); }
	ruleInterface
{ after(grammarAccess.getClassifierAccess().getInterfaceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_3_0()); }
(rule__Class__Group_3_0__0)
{ after(grammarAccess.getClassAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getClassAccess().getGroup_3_1()); }
(rule__Class__Group_3_1__0)
{ after(grammarAccess.getClassAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getGroup_2_0()); }
(rule__Interface__Group_2_0__0)
{ after(grammarAccess.getInterfaceAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getInterfaceAccess().getGroup_2_1()); }
(rule__Interface__Group_2_1__0)
{ after(grammarAccess.getInterfaceAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getDataTypeReferenceParserRuleCall_0()); }
	ruleDataTypeReference
{ after(grammarAccess.getTypeReferenceAccess().getDataTypeReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeReferenceAccess().getUMLTypeReferenceParserRuleCall_1()); }
	ruleUMLTypeReference
{ after(grammarAccess.getTypeReferenceAccess().getUMLTypeReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getAttributeParserRuleCall_0()); }
	ruleAttribute
{ after(grammarAccess.getMemberAccess().getAttributeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMemberAccess().getMethodParserRuleCall_1()); }
	ruleMethod
{ after(grammarAccess.getMemberAccess().getMethodParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connector__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectorAccess().getGeneralizationParserRuleCall_0()); }
	ruleGeneralization
{ after(grammarAccess.getConnectorAccess().getGeneralizationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConnectorAccess().getAssociationParserRuleCall_1()); }
	ruleAssociation
{ after(grammarAccess.getConnectorAccess().getAssociationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getConnectorAccess().getImplementationParserRuleCall_2()); }
	ruleImplementation
{ after(grammarAccess.getConnectorAccess().getImplementationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getConnectorAccess().getCommentLinkParserRuleCall_3()); }
	ruleCommentLink
{ after(grammarAccess.getConnectorAccess().getCommentLinkParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getConnectorAccess().getMultiAssociationParserRuleCall_4()); }
	ruleMultiAssociation
{ after(grammarAccess.getConnectorAccess().getMultiAssociationParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getReferencedElementAssignment_3_0()); }
(rule__Association__ReferencedElementAssignment_3_0)
{ after(grammarAccess.getAssociationAccess().getReferencedElementAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getAssociationAccess().getReferencedElementAssignment_3_1()); }
(rule__Association__ReferencedElementAssignment_3_1)
{ after(grammarAccess.getAssociationAccess().getReferencedElementAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiAssociation__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiAssociationAccess().getReferencedElementAssignment_1_0()); }
(rule__MultiAssociation__ReferencedElementAssignment_1_0)
{ after(grammarAccess.getMultiAssociationAccess().getReferencedElementAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getMultiAssociationAccess().getReferencedElementAssignment_1_1()); }
(rule__MultiAssociation__ReferencedElementAssignment_1_1)
{ after(grammarAccess.getMultiAssociationAccess().getReferencedElementAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CardinalityBound__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityBoundAccess().getAsteriskKeyword_0()); }

	'*' 

{ after(grammarAccess.getCardinalityBoundAccess().getAsteriskKeyword_0()); }
)

    |(
{ before(grammarAccess.getCardinalityBoundAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getCardinalityBoundAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_1()); }
(	'public' 
)
{ after(grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_2()); }
(	'-' 
)
{ after(grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_3()); }
(	'private' 
)
{ after(grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPROTECTEDEnumLiteralDeclaration_4()); }
(	'#' 
)
{ after(grammarAccess.getVisibilityAccess().getPROTECTEDEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPROTECTEDEnumLiteralDeclaration_5()); }
(	'protected' 
)
{ after(grammarAccess.getVisibilityAccess().getPROTECTEDEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPACKAGEEnumLiteralDeclaration_6()); }
(	'~' 
)
{ after(grammarAccess.getVisibilityAccess().getPACKAGEEnumLiteralDeclaration_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getSTRINGEnumLiteralDeclaration_0()); }
(	'string' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getSTRINGEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getINTEnumLiteralDeclaration_1()); }
(	'int' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getINTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getDOUBLEEnumLiteralDeclaration_2()); }
(	'double' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getDOUBLEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getBOOLEANEnumLiteralDeclaration_3()); }
(	'boolean' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getBOOLEANEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getCHAREnumLiteralDeclaration_4()); }
(	'char' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getCHAREnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getBYTEEnumLiteralDeclaration_5()); }
(	'byte' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getBYTEEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getSHORTEnumLiteralDeclaration_6()); }
(	'short' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getSHORTEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getLONGEnumLiteralDeclaration_7()); }
(	'long' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getLONGEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getFLOATEnumLiteralDeclaration_8()); }
(	'float' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getFLOATEnumLiteralDeclaration_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AggregationKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregationKindAccess().getNONEEnumLiteralDeclaration_0()); }
(	'asc' 
)
{ after(grammarAccess.getAggregationKindAccess().getNONEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAggregationKindAccess().getAGGREGATIONEnumLiteralDeclaration_1()); }
(	'agg' 
)
{ after(grammarAccess.getAggregationKindAccess().getAGGREGATIONEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAggregationKindAccess().getCOMPOSITIONEnumLiteralDeclaration_2()); }
(	'com' 
)
{ after(grammarAccess.getAggregationKindAccess().getCOMPOSITIONEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ClassDiagram__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDiagram__Group__0__Impl
	rule__ClassDiagram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDiagram__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDiagramAccess().getClassDiagramAction_0()); }
(

)
{ after(grammarAccess.getClassDiagramAccess().getClassDiagramAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDiagram__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDiagram__Group__1__Impl
	rule__ClassDiagram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDiagram__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDiagramAccess().getStartclassKeyword_1()); }

	'@startclass' 

{ after(grammarAccess.getClassDiagramAccess().getStartclassKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDiagram__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDiagram__Group__2__Impl
	rule__ClassDiagram__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDiagram__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDiagramAccess().getTitleAssignment_2()); }
(rule__ClassDiagram__TitleAssignment_2)
{ after(grammarAccess.getClassDiagramAccess().getTitleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDiagram__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDiagram__Group__3__Impl
	rule__ClassDiagram__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDiagram__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDiagramAccess().getRootPackageAssignment_3()); }
(rule__ClassDiagram__RootPackageAssignment_3)
{ after(grammarAccess.getClassDiagramAccess().getRootPackageAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDiagram__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDiagram__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDiagram__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDiagramAccess().getEndclassKeyword_4()); }

	'@endclass' 

{ after(grammarAccess.getClassDiagramAccess().getEndclassKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RootPackage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootPackage__Group__0__Impl
	rule__RootPackage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootPackageAccess().getRootPackageKeyword_0()); }

	'rootPackage' 

{ after(grammarAccess.getRootPackageAccess().getRootPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootPackage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootPackage__Group__1__Impl
	rule__RootPackage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootPackageAccess().getReferencedElementAssignment_1()); }
(rule__RootPackage__ReferencedElementAssignment_1)
{ after(grammarAccess.getRootPackageAccess().getReferencedElementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootPackage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootPackage__Group__2__Impl
	rule__RootPackage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootPackageAccess().getPackageImportsAssignment_2()); }
(rule__RootPackage__PackageImportsAssignment_2)*
{ after(grammarAccess.getRootPackageAccess().getPackageImportsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootPackage__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootPackage__Group__3__Impl
	rule__RootPackage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootPackageAccess().getClassifiersAssignment_3()); }
(rule__RootPackage__ClassifiersAssignment_3)*
{ after(grammarAccess.getRootPackageAccess().getClassifiersAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootPackage__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootPackage__Group__4__Impl
	rule__RootPackage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootPackageAccess().getConnectorsAssignment_4()); }
(rule__RootPackage__ConnectorsAssignment_4)*
{ after(grammarAccess.getRootPackageAccess().getConnectorsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootPackage__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootPackage__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootPackageAccess().getPackagesAssignment_5()); }
(rule__RootPackage__PackagesAssignment_5)*
{ after(grammarAccess.getRootPackageAccess().getPackagesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Package__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__1__Impl
	rule__Package__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getReferencedElementAssignment_1()); }
(rule__Package__ReferencedElementAssignment_1)
{ after(grammarAccess.getPackageAccess().getReferencedElementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__2__Impl
	rule__Package__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__3__Impl
	rule__Package__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackageImportsAssignment_3()); }
(rule__Package__PackageImportsAssignment_3)*
{ after(grammarAccess.getPackageAccess().getPackageImportsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__4__Impl
	rule__Package__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getClassifiersAssignment_4()); }
(rule__Package__ClassifiersAssignment_4)*
{ after(grammarAccess.getPackageAccess().getClassifiersAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__5__Impl
	rule__Package__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getConnectorsAssignment_5()); }
(rule__Package__ConnectorsAssignment_5)*
{ after(grammarAccess.getPackageAccess().getConnectorsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__6__Impl
	rule__Package__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackagesAssignment_6()); }
(rule__Package__PackagesAssignment_6)*
{ after(grammarAccess.getPackageAccess().getPackagesAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__PackageImport__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageImport__Group__0__Impl
	rule__PackageImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getPackageImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageImport__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageImport__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportAccess().getReferencedElementAssignment_1()); }
(rule__PackageImport__ReferencedElementAssignment_1)
{ after(grammarAccess.getPackageImportAccess().getReferencedElementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getGroup_1()); }
(rule__FQN__Group_1__0)*
{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getVisibilityAssignment_0()); }
(rule__Class__VisibilityAssignment_0)?
{ after(grammarAccess.getClassAccess().getVisibilityAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getAbstractAssignment_1()); }
(rule__Class__AbstractAssignment_1)?
{ after(grammarAccess.getClassAccess().getAbstractAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__2__Impl
	rule__Class__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getClassKeyword_2()); }

	'class' 

{ after(grammarAccess.getClassAccess().getClassKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__3__Impl
	rule__Class__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getAlternatives_3()); }
(rule__Class__Alternatives_3)
{ after(grammarAccess.getClassAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_4()); }
(rule__Class__Group_4__0)?
{ after(grammarAccess.getClassAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Class__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_3_0__0__Impl
	rule__Class__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getReferencedElementAssignment_3_0_0()); }
(rule__Class__ReferencedElementAssignment_3_0_0)
{ after(grammarAccess.getClassAccess().getReferencedElementAssignment_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_3_0_1()); }
(rule__Class__Group_3_0_1__0)?
{ after(grammarAccess.getClassAccess().getGroup_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class__Group_3_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_3_0_1__0__Impl
	rule__Class__Group_3_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getAsKeyword_3_0_1_0()); }

	'as' 

{ after(grammarAccess.getClassAccess().getAsKeyword_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_3_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_3_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getAliasExpressionAssignment_3_0_1_1()); }
(rule__Class__AliasExpressionAssignment_3_0_1_1)
{ after(grammarAccess.getClassAccess().getAliasExpressionAssignment_3_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_3_1__0__Impl
	rule__Class__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getReferencedElementAssignment_3_1_0()); }
(rule__Class__ReferencedElementAssignment_3_1_0)
{ after(grammarAccess.getClassAccess().getReferencedElementAssignment_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_3_1__1__Impl
	rule__Class__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getAsKeyword_3_1_1()); }

	'as' 

{ after(grammarAccess.getClassAccess().getAsKeyword_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getAliasExpressionAssignment_3_1_2()); }
(rule__Class__AliasExpressionAssignment_3_1_2)
{ after(grammarAccess.getClassAccess().getAliasExpressionAssignment_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Class__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_4__0__Impl
	rule__Class__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_4_0()); }

	'{' 

{ after(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_4__1__Impl
	rule__Class__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getMembersAssignment_4_1()); }
(rule__Class__MembersAssignment_4_1)*
{ after(grammarAccess.getClassAccess().getMembersAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_4_2()); }

	'}' 

{ after(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Interface__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__0__Impl
	rule__Interface__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getVisibilityAssignment_0()); }
(rule__Interface__VisibilityAssignment_0)?
{ after(grammarAccess.getInterfaceAccess().getVisibilityAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__1__Impl
	rule__Interface__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getInterfaceKeyword_1()); }

	'interface' 

{ after(grammarAccess.getInterfaceAccess().getInterfaceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__2__Impl
	rule__Interface__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getAlternatives_2()); }
(rule__Interface__Alternatives_2)
{ after(grammarAccess.getInterfaceAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getGroup_3()); }
(rule__Interface__Group_3__0)?
{ after(grammarAccess.getInterfaceAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Interface__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_2_0__0__Impl
	rule__Interface__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getReferencedElementAssignment_2_0_0()); }
(rule__Interface__ReferencedElementAssignment_2_0_0)
{ after(grammarAccess.getInterfaceAccess().getReferencedElementAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getGroup_2_0_1()); }
(rule__Interface__Group_2_0_1__0)?
{ after(grammarAccess.getInterfaceAccess().getGroup_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Interface__Group_2_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_2_0_1__0__Impl
	rule__Interface__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getAsKeyword_2_0_1_0()); }

	'as' 

{ after(grammarAccess.getInterfaceAccess().getAsKeyword_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_2_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_2_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getAliasExpressionAssignment_2_0_1_1()); }
(rule__Interface__AliasExpressionAssignment_2_0_1_1)
{ after(grammarAccess.getInterfaceAccess().getAliasExpressionAssignment_2_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Interface__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_2_1__0__Impl
	rule__Interface__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getReferencedElementAssignment_2_1_0()); }
(rule__Interface__ReferencedElementAssignment_2_1_0)
{ after(grammarAccess.getInterfaceAccess().getReferencedElementAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_2_1__1__Impl
	rule__Interface__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getAsKeyword_2_1_1()); }

	'as' 

{ after(grammarAccess.getInterfaceAccess().getAsKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getAliasExpressionAssignment_2_1_2()); }
(rule__Interface__AliasExpressionAssignment_2_1_2)
{ after(grammarAccess.getInterfaceAccess().getAliasExpressionAssignment_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Interface__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_3__0__Impl
	rule__Interface__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_3_0()); }

	'{' 

{ after(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_3__1__Impl
	rule__Interface__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getMembersAssignment_3_1()); }
(rule__Interface__MembersAssignment_3_1)*
{ after(grammarAccess.getInterfaceAccess().getMembersAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_3_2()); }

	'}' 

{ after(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAttributeAction_0()); }
(

)
{ after(grammarAccess.getAttributeAccess().getAttributeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getVisibilityAssignment_1()); }
(rule__Attribute__VisibilityAssignment_1)?
{ after(grammarAccess.getAttributeAccess().getVisibilityAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getStaticAssignment_2()); }
(rule__Attribute__StaticAssignment_2)?
{ after(grammarAccess.getAttributeAccess().getStaticAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getFinalAssignment_3()); }
(rule__Attribute__FinalAssignment_3)?
{ after(grammarAccess.getAttributeAccess().getFinalAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__4__Impl
	rule__Attribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getReferencedElementAssignment_4()); }
(rule__Attribute__ReferencedElementAssignment_4)
{ after(grammarAccess.getAttributeAccess().getReferencedElementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__5__Impl
	rule__Attribute__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getColonKeyword_5()); }

	':' 

{ after(grammarAccess.getAttributeAccess().getColonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeAssignment_6()); }
(rule__Attribute__TypeAssignment_6)
{ after(grammarAccess.getAttributeAccess().getTypeAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Method__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getVisibilityAssignment_0()); }
(rule__Method__VisibilityAssignment_0)?
{ after(grammarAccess.getMethodAccess().getVisibilityAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getAbstractAssignment_1()); }
(rule__Method__AbstractAssignment_1)?
{ after(grammarAccess.getMethodAccess().getAbstractAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getStaticAssignment_2()); }
(rule__Method__StaticAssignment_2)?
{ after(grammarAccess.getMethodAccess().getStaticAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getFinalAssignment_3()); }
(rule__Method__FinalAssignment_3)?
{ after(grammarAccess.getMethodAccess().getFinalAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__4__Impl
	rule__Method__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getReferencedElementAssignment_4()); }
(rule__Method__ReferencedElementAssignment_4)
{ after(grammarAccess.getMethodAccess().getReferencedElementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__5__Impl
	rule__Method__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_5()); }

	'(' 

{ after(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__6__Impl
	rule__Method__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_6()); }
(rule__Method__Group_6__0)*
{ after(grammarAccess.getMethodAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__7__Impl
	rule__Method__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getMethodAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_8()); }
(rule__Method__Group_8__0)?
{ after(grammarAccess.getMethodAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Method__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_6__0__Impl
	rule__Method__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParametersAssignment_6_0()); }
(rule__Method__ParametersAssignment_6_0)
{ after(grammarAccess.getMethodAccess().getParametersAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_6_1()); }
(rule__Method__Group_6_1__0)*
{ after(grammarAccess.getMethodAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_6_1__0__Impl
	rule__Method__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getCommaKeyword_6_1_0()); }

	',' 

{ after(grammarAccess.getMethodAccess().getCommaKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParametersAssignment_6_1_1()); }
(rule__Method__ParametersAssignment_6_1_1)
{ after(grammarAccess.getMethodAccess().getParametersAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_8__0__Impl
	rule__Method__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getColonKeyword_8_0()); }

	':' 

{ after(grammarAccess.getMethodAccess().getColonKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getTypeAssignment_8_1()); }
(rule__Method__TypeAssignment_8_1)
{ after(grammarAccess.getMethodAccess().getTypeAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getVisibilityAssignment_0()); }
(rule__Parameter__VisibilityAssignment_0)?
{ after(grammarAccess.getParameterAccess().getVisibilityAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getStaticAssignment_1()); }
(rule__Parameter__StaticAssignment_1)?
{ after(grammarAccess.getParameterAccess().getStaticAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getFinalAssignment_2()); }
(rule__Parameter__FinalAssignment_2)?
{ after(grammarAccess.getParameterAccess().getFinalAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__3__Impl
	rule__Parameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getReferencedElementAssignment_3()); }
(rule__Parameter__ReferencedElementAssignment_3)
{ after(grammarAccess.getParameterAccess().getReferencedElementAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__4__Impl
	rule__Parameter__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getParameterAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_5()); }
(rule__Parameter__TypeAssignment_5)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Generalization__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generalization__Group__0__Impl
	rule__Generalization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizationAccess().getLeftAssignment_0()); }
(rule__Generalization__LeftAssignment_0)
{ after(grammarAccess.getGeneralizationAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generalization__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generalization__Group__1__Impl
	rule__Generalization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizationAccess().getIsaKeyword_1()); }

	'isa' 

{ after(grammarAccess.getGeneralizationAccess().getIsaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generalization__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generalization__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizationAccess().getRightAssignment_2()); }
(rule__Generalization__RightAssignment_2)
{ after(grammarAccess.getGeneralizationAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Implementation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Implementation__Group__0__Impl
	rule__Implementation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementationAccess().getLeftAssignment_0()); }
(rule__Implementation__LeftAssignment_0)
{ after(grammarAccess.getImplementationAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Implementation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Implementation__Group__1__Impl
	rule__Implementation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementationAccess().getImplKeyword_1()); }

	'impl' 

{ after(grammarAccess.getImplementationAccess().getImplKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Implementation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Implementation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementationAccess().getRightAssignment_2()); }
(rule__Implementation__RightAssignment_2)
{ after(grammarAccess.getImplementationAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CommentLink__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommentLink__Group__0__Impl
	rule__CommentLink__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommentLink__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentLinkAccess().getLeftAssignment_0()); }
(rule__CommentLink__LeftAssignment_0)
{ after(grammarAccess.getCommentLinkAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommentLink__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommentLink__Group__1__Impl
	rule__CommentLink__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommentLink__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentLinkAccess().getNoteKeyword_1()); }

	'note' 

{ after(grammarAccess.getCommentLinkAccess().getNoteKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommentLink__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommentLink__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommentLink__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentLinkAccess().getCommentAssignment_2()); }
(rule__CommentLink__CommentAssignment_2)
{ after(grammarAccess.getCommentLinkAccess().getCommentAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Association__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__0__Impl
	rule__Association__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getBidirectionalAssignment_0()); }
(rule__Association__BidirectionalAssignment_0)?
{ after(grammarAccess.getAssociationAccess().getBidirectionalAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__1__Impl
	rule__Association__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getAggregationKindAssignment_1()); }
(rule__Association__AggregationKindAssignment_1)
{ after(grammarAccess.getAssociationAccess().getAggregationKindAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__2__Impl
	rule__Association__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getLeftAssignment_2()); }
(rule__Association__LeftAssignment_2)
{ after(grammarAccess.getAssociationAccess().getLeftAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__3__Impl
	rule__Association__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getAlternatives_3()); }
(rule__Association__Alternatives_3)
{ after(grammarAccess.getAssociationAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__4__Impl
	rule__Association__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getRightAssignment_4()); }
(rule__Association__RightAssignment_4)
{ after(grammarAccess.getAssociationAccess().getRightAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__5__Impl
	rule__Association__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getPropertiesAssignment_5()); }
(rule__Association__PropertiesAssignment_5)?
{ after(grammarAccess.getAssociationAccess().getPropertiesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getGroup_6()); }
(rule__Association__Group_6__0)?
{ after(grammarAccess.getAssociationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Association__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group_6__0__Impl
	rule__Association__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getNoteKeyword_6_0()); }

	'note' 

{ after(grammarAccess.getAssociationAccess().getNoteKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getCommentAssignment_6_1()); }
(rule__Association__CommentAssignment_6_1)
{ after(grammarAccess.getAssociationAccess().getCommentAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiAssociation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiAssociation__Group__0__Impl
	rule__MultiAssociation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiAssociation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiAssociationAccess().getAscKeyword_0()); }

	'asc' 

{ after(grammarAccess.getMultiAssociationAccess().getAscKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiAssociation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiAssociation__Group__1__Impl
	rule__MultiAssociation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiAssociation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiAssociationAccess().getAlternatives_1()); }
(rule__MultiAssociation__Alternatives_1)
{ after(grammarAccess.getMultiAssociationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiAssociation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiAssociation__Group__2__Impl
	rule__MultiAssociation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiAssociation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiAssociationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getMultiAssociationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiAssociation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiAssociation__Group__3__Impl
	rule__MultiAssociation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiAssociation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMultiAssociationAccess().getGroup_3()); }
(rule__MultiAssociation__Group_3__0)
{ after(grammarAccess.getMultiAssociationAccess().getGroup_3()); }
)
(
{ before(grammarAccess.getMultiAssociationAccess().getGroup_3()); }
(rule__MultiAssociation__Group_3__0)*
{ after(grammarAccess.getMultiAssociationAccess().getGroup_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiAssociation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiAssociation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiAssociation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiAssociationAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getMultiAssociationAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MultiAssociation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiAssociation__Group_3__0__Impl
	rule__MultiAssociation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiAssociation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiAssociationAccess().getConnectorEndsAssignment_3_0()); }
(rule__MultiAssociation__ConnectorEndsAssignment_3_0)
{ after(grammarAccess.getMultiAssociationAccess().getConnectorEndsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiAssociation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiAssociation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiAssociation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiAssociationAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getMultiAssociationAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberEnd__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberEnd__Group__0__Impl
	rule__MemberEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberEnd__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberEndAccess().getTypeAssignment_0()); }
(rule__MemberEnd__TypeAssignment_0)
{ after(grammarAccess.getMemberEndAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberEnd__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberEnd__Group__1__Impl
	rule__MemberEnd__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberEnd__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberEndAccess().getReferencedElementAssignment_1()); }
(rule__MemberEnd__ReferencedElementAssignment_1)?
{ after(grammarAccess.getMemberEndAccess().getReferencedElementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberEnd__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberEnd__Group__2__Impl
	rule__MemberEnd__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberEnd__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberEndAccess().getCardinalityAssignment_2()); }
(rule__MemberEnd__CardinalityAssignment_2)?
{ after(grammarAccess.getMemberEndAccess().getCardinalityAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberEnd__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberEnd__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberEnd__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberEndAccess().getNavigableAssignment_3()); }
(rule__MemberEnd__NavigableAssignment_3)?
{ after(grammarAccess.getMemberEndAccess().getNavigableAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AssociationProperties__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationProperties__Group__0__Impl
	rule__AssociationProperties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationProperties__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPropertiesAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getAssociationPropertiesAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationProperties__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationProperties__Group__1__Impl
	rule__AssociationProperties__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationProperties__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPropertiesAccess().getCardinalityLeftAssignment_1()); }
(rule__AssociationProperties__CardinalityLeftAssignment_1)
{ after(grammarAccess.getAssociationPropertiesAccess().getCardinalityLeftAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationProperties__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationProperties__Group__2__Impl
	rule__AssociationProperties__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationProperties__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPropertiesAccess().getGroup_2()); }
(rule__AssociationProperties__Group_2__0)?
{ after(grammarAccess.getAssociationPropertiesAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationProperties__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationProperties__Group__3__Impl
	rule__AssociationProperties__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationProperties__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPropertiesAccess().getGroup_3()); }
(rule__AssociationProperties__Group_3__0)?
{ after(grammarAccess.getAssociationPropertiesAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationProperties__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationProperties__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationProperties__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPropertiesAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getAssociationPropertiesAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AssociationProperties__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationProperties__Group_2__0__Impl
	rule__AssociationProperties__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationProperties__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPropertiesAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getAssociationPropertiesAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationProperties__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationProperties__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationProperties__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPropertiesAccess().getPropertyLeftAssignment_2_1()); }
(rule__AssociationProperties__PropertyLeftAssignment_2_1)
{ after(grammarAccess.getAssociationPropertiesAccess().getPropertyLeftAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssociationProperties__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationProperties__Group_3__0__Impl
	rule__AssociationProperties__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationProperties__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPropertiesAccess().getVerticalLineKeyword_3_0()); }

	'|' 

{ after(grammarAccess.getAssociationPropertiesAccess().getVerticalLineKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationProperties__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationProperties__Group_3__1__Impl
	rule__AssociationProperties__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationProperties__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPropertiesAccess().getCardinalityRightAssignment_3_1()); }
(rule__AssociationProperties__CardinalityRightAssignment_3_1)
{ after(grammarAccess.getAssociationPropertiesAccess().getCardinalityRightAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationProperties__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationProperties__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationProperties__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPropertiesAccess().getGroup_3_2()); }
(rule__AssociationProperties__Group_3_2__0)?
{ after(grammarAccess.getAssociationPropertiesAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AssociationProperties__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationProperties__Group_3_2__0__Impl
	rule__AssociationProperties__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationProperties__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPropertiesAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getAssociationPropertiesAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationProperties__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationProperties__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationProperties__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPropertiesAccess().getPropertyRightAssignment_3_2_1()); }
(rule__AssociationProperties__PropertyRightAssignment_3_2_1)
{ after(grammarAccess.getAssociationPropertiesAccess().getPropertyRightAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Cardinality__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group__0__Impl
	rule__Cardinality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getLowerBoundAssignment_0()); }
(rule__Cardinality__LowerBoundAssignment_0)
{ after(grammarAccess.getCardinalityAccess().getLowerBoundAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cardinality__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getGroup_1()); }
(rule__Cardinality__Group_1__0)?
{ after(grammarAccess.getCardinalityAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Cardinality__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_1__0__Impl
	rule__Cardinality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getFullStopFullStopKeyword_1_0()); }

	'..' 

{ after(grammarAccess.getCardinalityAccess().getFullStopFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cardinality__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getUpperBoundAssignment_1_1()); }
(rule__Cardinality__UpperBoundAssignment_1_1)
{ after(grammarAccess.getCardinalityAccess().getUpperBoundAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__ClassDiagram__TitleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDiagramAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getClassDiagramAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDiagram__RootPackageAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDiagramAccess().getRootPackageRootPackageParserRuleCall_3_0()); }
	ruleRootPackage{ after(grammarAccess.getClassDiagramAccess().getRootPackageRootPackageParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__ReferencedElementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootPackageAccess().getReferencedElementPackageCrossReference_1_0()); }
(
{ before(grammarAccess.getRootPackageAccess().getReferencedElementPackageFQNParserRuleCall_1_0_1()); }
	ruleFQN{ after(grammarAccess.getRootPackageAccess().getReferencedElementPackageFQNParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRootPackageAccess().getReferencedElementPackageCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__PackageImportsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootPackageAccess().getPackageImportsPackageImportParserRuleCall_2_0()); }
	rulePackageImport{ after(grammarAccess.getRootPackageAccess().getPackageImportsPackageImportParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__ClassifiersAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootPackageAccess().getClassifiersClassifierParserRuleCall_3_0()); }
	ruleClassifier{ after(grammarAccess.getRootPackageAccess().getClassifiersClassifierParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__ConnectorsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootPackageAccess().getConnectorsConnectorParserRuleCall_4_0()); }
	ruleConnector{ after(grammarAccess.getRootPackageAccess().getConnectorsConnectorParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__PackagesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootPackageAccess().getPackagesPackageParserRuleCall_5_0()); }
	rulePackage{ after(grammarAccess.getRootPackageAccess().getPackagesPackageParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__ReferencedElementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getReferencedElementPackageCrossReference_1_0()); }
(
{ before(grammarAccess.getPackageAccess().getReferencedElementPackageFQNParserRuleCall_1_0_1()); }
	ruleFQN{ after(grammarAccess.getPackageAccess().getReferencedElementPackageFQNParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getPackageAccess().getReferencedElementPackageCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__PackageImportsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackageImportsPackageImportParserRuleCall_3_0()); }
	rulePackageImport{ after(grammarAccess.getPackageAccess().getPackageImportsPackageImportParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__ClassifiersAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getClassifiersClassifierParserRuleCall_4_0()); }
	ruleClassifier{ after(grammarAccess.getPackageAccess().getClassifiersClassifierParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__ConnectorsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getConnectorsConnectorParserRuleCall_5_0()); }
	ruleConnector{ after(grammarAccess.getPackageAccess().getConnectorsConnectorParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__PackagesAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackagesPackageParserRuleCall_6_0()); }
	rulePackage{ after(grammarAccess.getPackageAccess().getPackagesPackageParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImport__ReferencedElementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportAccess().getReferencedElementPackageImportCrossReference_1_0()); }
(
{ before(grammarAccess.getPackageImportAccess().getReferencedElementPackageImportFQNParserRuleCall_1_0_1()); }
	ruleFQN{ after(grammarAccess.getPackageImportAccess().getReferencedElementPackageImportFQNParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getPackageImportAccess().getReferencedElementPackageImportCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__VisibilityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	ruleVisibility{ after(grammarAccess.getClassAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__AbstractAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getAbstractAbstractKeyword_1_0()); }
(
{ before(grammarAccess.getClassAccess().getAbstractAbstractKeyword_1_0()); }

	'abstract' 

{ after(grammarAccess.getClassAccess().getAbstractAbstractKeyword_1_0()); }
)

{ after(grammarAccess.getClassAccess().getAbstractAbstractKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ReferencedElementAssignment_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getReferencedElementClassCrossReference_3_0_0_0()); }
(
{ before(grammarAccess.getClassAccess().getReferencedElementClassIDTerminalRuleCall_3_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getReferencedElementClassIDTerminalRuleCall_3_0_0_0_1()); }
)
{ after(grammarAccess.getClassAccess().getReferencedElementClassCrossReference_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__AliasExpressionAssignment_3_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getAliasExpressionStringExpressionCrossReference_3_0_1_1_0()); }
(
{ before(grammarAccess.getClassAccess().getAliasExpressionStringExpressionIDTerminalRuleCall_3_0_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getAliasExpressionStringExpressionIDTerminalRuleCall_3_0_1_1_0_1()); }
)
{ after(grammarAccess.getClassAccess().getAliasExpressionStringExpressionCrossReference_3_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ReferencedElementAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getReferencedElementClassCrossReference_3_1_0_0()); }
(
{ before(grammarAccess.getClassAccess().getReferencedElementClassSTRINGTerminalRuleCall_3_1_0_0_1()); }
	RULE_STRING{ after(grammarAccess.getClassAccess().getReferencedElementClassSTRINGTerminalRuleCall_3_1_0_0_1()); }
)
{ after(grammarAccess.getClassAccess().getReferencedElementClassCrossReference_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__AliasExpressionAssignment_3_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getAliasExpressionStringExpressionCrossReference_3_1_2_0()); }
(
{ before(grammarAccess.getClassAccess().getAliasExpressionStringExpressionIDTerminalRuleCall_3_1_2_0_1()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getAliasExpressionStringExpressionIDTerminalRuleCall_3_1_2_0_1()); }
)
{ after(grammarAccess.getClassAccess().getAliasExpressionStringExpressionCrossReference_3_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__MembersAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getMembersMemberParserRuleCall_4_1_0()); }
	ruleMember{ after(grammarAccess.getClassAccess().getMembersMemberParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__VisibilityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	ruleVisibility{ after(grammarAccess.getInterfaceAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__ReferencedElementAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getReferencedElementInterfaceCrossReference_2_0_0_0()); }
(
{ before(grammarAccess.getInterfaceAccess().getReferencedElementInterfaceIDTerminalRuleCall_2_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getInterfaceAccess().getReferencedElementInterfaceIDTerminalRuleCall_2_0_0_0_1()); }
)
{ after(grammarAccess.getInterfaceAccess().getReferencedElementInterfaceCrossReference_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__AliasExpressionAssignment_2_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getAliasExpressionStringExpressionCrossReference_2_0_1_1_0()); }
(
{ before(grammarAccess.getInterfaceAccess().getAliasExpressionStringExpressionIDTerminalRuleCall_2_0_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getInterfaceAccess().getAliasExpressionStringExpressionIDTerminalRuleCall_2_0_1_1_0_1()); }
)
{ after(grammarAccess.getInterfaceAccess().getAliasExpressionStringExpressionCrossReference_2_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__ReferencedElementAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getReferencedElementInterfaceCrossReference_2_1_0_0()); }
(
{ before(grammarAccess.getInterfaceAccess().getReferencedElementInterfaceSTRINGTerminalRuleCall_2_1_0_0_1()); }
	RULE_STRING{ after(grammarAccess.getInterfaceAccess().getReferencedElementInterfaceSTRINGTerminalRuleCall_2_1_0_0_1()); }
)
{ after(grammarAccess.getInterfaceAccess().getReferencedElementInterfaceCrossReference_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__AliasExpressionAssignment_2_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getAliasExpressionStringExpressionCrossReference_2_1_2_0()); }
(
{ before(grammarAccess.getInterfaceAccess().getAliasExpressionStringExpressionIDTerminalRuleCall_2_1_2_0_1()); }
	RULE_ID{ after(grammarAccess.getInterfaceAccess().getAliasExpressionStringExpressionIDTerminalRuleCall_2_1_2_0_1()); }
)
{ after(grammarAccess.getInterfaceAccess().getAliasExpressionStringExpressionCrossReference_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__MembersAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getMembersMemberParserRuleCall_3_1_0()); }
	ruleMember{ after(grammarAccess.getInterfaceAccess().getMembersMemberParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeReference__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeReferenceAccess().getTypePrimitiveTypeEnumRuleCall_0()); }
	rulePrimitiveType{ after(grammarAccess.getDataTypeReferenceAccess().getTypePrimitiveTypeEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UMLTypeReference__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUMLTypeReferenceAccess().getTypeTypeCrossReference_0()); }
(
{ before(grammarAccess.getUMLTypeReferenceAccess().getTypeTypeFQNParserRuleCall_0_1()); }
	ruleFQN{ after(grammarAccess.getUMLTypeReferenceAccess().getTypeTypeFQNParserRuleCall_0_1()); }
)
{ after(grammarAccess.getUMLTypeReferenceAccess().getTypeTypeCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__VisibilityAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
	ruleVisibility{ after(grammarAccess.getAttributeAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__StaticAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getStaticStaticKeyword_2_0()); }
(
{ before(grammarAccess.getAttributeAccess().getStaticStaticKeyword_2_0()); }

	'static' 

{ after(grammarAccess.getAttributeAccess().getStaticStaticKeyword_2_0()); }
)

{ after(grammarAccess.getAttributeAccess().getStaticStaticKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__FinalAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getFinalFinalKeyword_3_0()); }
(
{ before(grammarAccess.getAttributeAccess().getFinalFinalKeyword_3_0()); }

	'final' 

{ after(grammarAccess.getAttributeAccess().getFinalFinalKeyword_3_0()); }
)

{ after(grammarAccess.getAttributeAccess().getFinalFinalKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ReferencedElementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getReferencedElementPropertyCrossReference_4_0()); }
(
{ before(grammarAccess.getAttributeAccess().getReferencedElementPropertyIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getReferencedElementPropertyIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getAttributeAccess().getReferencedElementPropertyCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeTypeReferenceParserRuleCall_6_0()); }
	ruleTypeReference{ after(grammarAccess.getAttributeAccess().getTypeTypeReferenceParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__VisibilityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	ruleVisibility{ after(grammarAccess.getMethodAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__AbstractAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getAbstractAbstractKeyword_1_0()); }
(
{ before(grammarAccess.getMethodAccess().getAbstractAbstractKeyword_1_0()); }

	'abstract' 

{ after(grammarAccess.getMethodAccess().getAbstractAbstractKeyword_1_0()); }
)

{ after(grammarAccess.getMethodAccess().getAbstractAbstractKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__StaticAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getStaticStaticKeyword_2_0()); }
(
{ before(grammarAccess.getMethodAccess().getStaticStaticKeyword_2_0()); }

	'static' 

{ after(grammarAccess.getMethodAccess().getStaticStaticKeyword_2_0()); }
)

{ after(grammarAccess.getMethodAccess().getStaticStaticKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__FinalAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getFinalFinalKeyword_3_0()); }
(
{ before(grammarAccess.getMethodAccess().getFinalFinalKeyword_3_0()); }

	'final' 

{ after(grammarAccess.getMethodAccess().getFinalFinalKeyword_3_0()); }
)

{ after(grammarAccess.getMethodAccess().getFinalFinalKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ReferencedElementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getReferencedElementOperationCrossReference_4_0()); }
(
{ before(grammarAccess.getMethodAccess().getReferencedElementOperationIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getMethodAccess().getReferencedElementOperationIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getMethodAccess().getReferencedElementOperationCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParametersAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParametersParameterParserRuleCall_6_0_0()); }
	ruleParameter{ after(grammarAccess.getMethodAccess().getParametersParameterParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParametersAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParametersParameterParserRuleCall_6_1_1_0()); }
	ruleParameter{ after(grammarAccess.getMethodAccess().getParametersParameterParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__TypeAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getTypeTypeReferenceParserRuleCall_8_1_0()); }
	ruleTypeReference{ after(grammarAccess.getMethodAccess().getTypeTypeReferenceParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__VisibilityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	ruleVisibility{ after(grammarAccess.getParameterAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__StaticAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getStaticStaticKeyword_1_0()); }
(
{ before(grammarAccess.getParameterAccess().getStaticStaticKeyword_1_0()); }

	'static' 

{ after(grammarAccess.getParameterAccess().getStaticStaticKeyword_1_0()); }
)

{ after(grammarAccess.getParameterAccess().getStaticStaticKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__FinalAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getFinalFinalKeyword_2_0()); }
(
{ before(grammarAccess.getParameterAccess().getFinalFinalKeyword_2_0()); }

	'final' 

{ after(grammarAccess.getParameterAccess().getFinalFinalKeyword_2_0()); }
)

{ after(grammarAccess.getParameterAccess().getFinalFinalKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ReferencedElementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getReferencedElementParameterCrossReference_3_0()); }
(
{ before(grammarAccess.getParameterAccess().getReferencedElementParameterIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getReferencedElementParameterIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getParameterAccess().getReferencedElementParameterCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeTypeReferenceParserRuleCall_5_0()); }
	ruleTypeReference{ after(grammarAccess.getParameterAccess().getTypeTypeReferenceParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizationAccess().getLeftUMLTypeReferenceParserRuleCall_0_0()); }
	ruleUMLTypeReference{ after(grammarAccess.getGeneralizationAccess().getLeftUMLTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneralizationAccess().getRightUMLTypeReferenceParserRuleCall_2_0()); }
	ruleUMLTypeReference{ after(grammarAccess.getGeneralizationAccess().getRightUMLTypeReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementationAccess().getLeftUMLTypeReferenceParserRuleCall_0_0()); }
	ruleUMLTypeReference{ after(grammarAccess.getImplementationAccess().getLeftUMLTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementationAccess().getRightUMLTypeReferenceParserRuleCall_2_0()); }
	ruleUMLTypeReference{ after(grammarAccess.getImplementationAccess().getRightUMLTypeReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommentLink__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentLinkAccess().getLeftUMLTypeReferenceParserRuleCall_0_0()); }
	ruleUMLTypeReference{ after(grammarAccess.getCommentLinkAccess().getLeftUMLTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommentLink__CommentAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentLinkAccess().getCommentCommentCrossReference_2_0()); }
(
{ before(grammarAccess.getCommentLinkAccess().getCommentCommentCommentBodyParserRuleCall_2_0_1()); }
	ruleCommentBody{ after(grammarAccess.getCommentLinkAccess().getCommentCommentCommentBodyParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getCommentLinkAccess().getCommentCommentCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__BidirectionalAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getBidirectionalBiKeyword_0_0()); }
(
{ before(grammarAccess.getAssociationAccess().getBidirectionalBiKeyword_0_0()); }

	'bi' 

{ after(grammarAccess.getAssociationAccess().getBidirectionalBiKeyword_0_0()); }
)

{ after(grammarAccess.getAssociationAccess().getBidirectionalBiKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__AggregationKindAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getAggregationKindAggregationKindEnumRuleCall_1_0()); }
	ruleAggregationKind{ after(grammarAccess.getAssociationAccess().getAggregationKindAggregationKindEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__LeftAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getLeftUMLTypeReferenceParserRuleCall_2_0()); }
	ruleUMLTypeReference{ after(grammarAccess.getAssociationAccess().getLeftUMLTypeReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__ReferencedElementAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getReferencedElementAssociationCrossReference_3_0_0()); }
(
{ before(grammarAccess.getAssociationAccess().getReferencedElementAssociationIDTerminalRuleCall_3_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAssociationAccess().getReferencedElementAssociationIDTerminalRuleCall_3_0_0_1()); }
)
{ after(grammarAccess.getAssociationAccess().getReferencedElementAssociationCrossReference_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__ReferencedElementAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getReferencedElementAssociationCrossReference_3_1_0()); }
(
{ before(grammarAccess.getAssociationAccess().getReferencedElementAssociationSTRINGTerminalRuleCall_3_1_0_1()); }
	RULE_STRING{ after(grammarAccess.getAssociationAccess().getReferencedElementAssociationSTRINGTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getAssociationAccess().getReferencedElementAssociationCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__RightAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getRightUMLTypeReferenceParserRuleCall_4_0()); }
	ruleUMLTypeReference{ after(grammarAccess.getAssociationAccess().getRightUMLTypeReferenceParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__PropertiesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getPropertiesAssociationPropertiesParserRuleCall_5_0()); }
	ruleAssociationProperties{ after(grammarAccess.getAssociationAccess().getPropertiesAssociationPropertiesParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__CommentAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getCommentCommentCrossReference_6_1_0()); }
(
{ before(grammarAccess.getAssociationAccess().getCommentCommentCommentBodyParserRuleCall_6_1_0_1()); }
	ruleCommentBody{ after(grammarAccess.getAssociationAccess().getCommentCommentCommentBodyParserRuleCall_6_1_0_1()); }
)
{ after(grammarAccess.getAssociationAccess().getCommentCommentCrossReference_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiAssociation__ReferencedElementAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiAssociationAccess().getReferencedElementAssociationCrossReference_1_0_0()); }
(
{ before(grammarAccess.getMultiAssociationAccess().getReferencedElementAssociationIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getMultiAssociationAccess().getReferencedElementAssociationIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getMultiAssociationAccess().getReferencedElementAssociationCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiAssociation__ReferencedElementAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiAssociationAccess().getReferencedElementAssociationCrossReference_1_1_0()); }
(
{ before(grammarAccess.getMultiAssociationAccess().getReferencedElementAssociationSTRINGTerminalRuleCall_1_1_0_1()); }
	RULE_STRING{ after(grammarAccess.getMultiAssociationAccess().getReferencedElementAssociationSTRINGTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getMultiAssociationAccess().getReferencedElementAssociationCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiAssociation__ConnectorEndsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiAssociationAccess().getConnectorEndsMemberEndParserRuleCall_3_0_0()); }
	ruleMemberEnd{ after(grammarAccess.getMultiAssociationAccess().getConnectorEndsMemberEndParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberEnd__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberEndAccess().getTypeUMLTypeReferenceParserRuleCall_0_0()); }
	ruleUMLTypeReference{ after(grammarAccess.getMemberEndAccess().getTypeUMLTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberEnd__ReferencedElementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberEndAccess().getReferencedElementPropertyCrossReference_1_0()); }
(
{ before(grammarAccess.getMemberEndAccess().getReferencedElementPropertyIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getMemberEndAccess().getReferencedElementPropertyIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getMemberEndAccess().getReferencedElementPropertyCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberEnd__CardinalityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberEndAccess().getCardinalityCardinalityParserRuleCall_2_0()); }
	ruleCardinality{ after(grammarAccess.getMemberEndAccess().getCardinalityCardinalityParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberEnd__NavigableAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberEndAccess().getNavigableLessThanSignKeyword_3_0()); }
(
{ before(grammarAccess.getMemberEndAccess().getNavigableLessThanSignKeyword_3_0()); }

	'<' 

{ after(grammarAccess.getMemberEndAccess().getNavigableLessThanSignKeyword_3_0()); }
)

{ after(grammarAccess.getMemberEndAccess().getNavigableLessThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationProperties__CardinalityLeftAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPropertiesAccess().getCardinalityLeftCardinalityParserRuleCall_1_0()); }
	ruleCardinality{ after(grammarAccess.getAssociationPropertiesAccess().getCardinalityLeftCardinalityParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationProperties__PropertyLeftAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPropertiesAccess().getPropertyLeftPropertyCrossReference_2_1_0()); }
(
{ before(grammarAccess.getAssociationPropertiesAccess().getPropertyLeftPropertyIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAssociationPropertiesAccess().getPropertyLeftPropertyIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getAssociationPropertiesAccess().getPropertyLeftPropertyCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationProperties__CardinalityRightAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPropertiesAccess().getCardinalityRightCardinalityParserRuleCall_3_1_0()); }
	ruleCardinality{ after(grammarAccess.getAssociationPropertiesAccess().getCardinalityRightCardinalityParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationProperties__PropertyRightAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationPropertiesAccess().getPropertyRightPropertyCrossReference_3_2_1_0()); }
(
{ before(grammarAccess.getAssociationPropertiesAccess().getPropertyRightPropertyIDTerminalRuleCall_3_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAssociationPropertiesAccess().getPropertyRightPropertyIDTerminalRuleCall_3_2_1_0_1()); }
)
{ after(grammarAccess.getAssociationPropertiesAccess().getPropertyRightPropertyCrossReference_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__LowerBoundAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getLowerBoundCardinalityBoundParserRuleCall_0_0()); }
	ruleCardinalityBound{ after(grammarAccess.getCardinalityAccess().getLowerBoundCardinalityBoundParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__UpperBoundAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getUpperBoundCardinalityBoundParserRuleCall_1_1_0()); }
	ruleCardinalityBound{ after(grammarAccess.getCardinalityAccess().getUpperBoundCardinalityBoundParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


