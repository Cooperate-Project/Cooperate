/*
 * generated by Xtext 2.12.0
 */
package de.cooperateproject.modeling.textual.cls.ide.contentassist.antlr;

import com.google.inject.Inject;
import de.cooperateproject.modeling.textual.cls.ide.contentassist.antlr.internal.InternalClsParser;
import de.cooperateproject.modeling.textual.cls.services.ClsGrammarAccess;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class ClsParser extends AbstractContentAssistParser {

	@Inject
	private ClsGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalClsParser createParser() {
		InternalClsParser result = new InternalClsParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getClassifierAccess().getAlternatives(), "rule__Classifier__Alternatives");
					put(grammarAccess.getClassAccess().getAlternatives_3(), "rule__Class__Alternatives_3");
					put(grammarAccess.getClassAccess().getAlternatives_4(), "rule__Class__Alternatives_4");
					put(grammarAccess.getInterfaceAccess().getAlternatives_2(), "rule__Interface__Alternatives_2");
					put(grammarAccess.getInterfaceAccess().getAlternatives_3(), "rule__Interface__Alternatives_3");
					put(grammarAccess.getMemberAccess().getAlternatives(), "rule__Member__Alternatives");
					put(grammarAccess.getConnectorAccess().getAlternatives(), "rule__Connector__Alternatives");
					put(grammarAccess.getCardinalityBoundAccess().getAlternatives(), "rule__CardinalityBound__Alternatives");
					put(grammarAccess.getRoleNameAccess().getAlternatives(), "rule__RoleName__Alternatives");
					put(grammarAccess.getVisibilityAccess().getAlternatives(), "rule__Visibility__Alternatives");
					put(grammarAccess.getAggregationKindAccess().getAlternatives(), "rule__AggregationKind__Alternatives");
					put(grammarAccess.getClassDiagramAccess().getGroup(), "rule__ClassDiagram__Group__0");
					put(grammarAccess.getRootPackageAccess().getGroup(), "rule__RootPackage__Group__0");
					put(grammarAccess.getRootPackageAccess().getGroup_1(), "rule__RootPackage__Group_1__0");
					put(grammarAccess.getPackageAccess().getGroup(), "rule__Package__Group__0");
					put(grammarAccess.getPackageImportAccess().getGroup(), "rule__PackageImport__Group__0");
					put(grammarAccess.getFQNAccess().getGroup(), "rule__FQN__Group__0");
					put(grammarAccess.getFQNAccess().getGroup_1(), "rule__FQN__Group_1__0");
					put(grammarAccess.getClassAccess().getGroup(), "rule__Class__Group__0");
					put(grammarAccess.getClassAccess().getGroup_3_1(), "rule__Class__Group_3_1__0");
					put(grammarAccess.getClassAccess().getGroup_4_1(), "rule__Class__Group_4_1__0");
					put(grammarAccess.getInterfaceAccess().getGroup(), "rule__Interface__Group__0");
					put(grammarAccess.getInterfaceAccess().getGroup_2_1(), "rule__Interface__Group_2_1__0");
					put(grammarAccess.getInterfaceAccess().getGroup_3_1(), "rule__Interface__Group_3_1__0");
					put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
					put(grammarAccess.getMethodAccess().getGroup(), "rule__Method__Group__0");
					put(grammarAccess.getMethodAccess().getGroup_5(), "rule__Method__Group_5__0");
					put(grammarAccess.getMethodAccess().getGroup_5_1(), "rule__Method__Group_5_1__0");
					put(grammarAccess.getMethodAccess().getGroup_7(), "rule__Method__Group_7__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getGeneralizationAccess().getGroup(), "rule__Generalization__Group__0");
					put(grammarAccess.getImplementationAccess().getGroup(), "rule__Implementation__Group__0");
					put(grammarAccess.getXtextAssociationAccess().getGroup(), "rule__XtextAssociation__Group__0");
					put(grammarAccess.getXtextAssociationAccess().getGroup_5(), "rule__XtextAssociation__Group_5__0");
					put(grammarAccess.getXtextAssociationAccess().getGroup_7(), "rule__XtextAssociation__Group_7__0");
					put(grammarAccess.getXtextAssociationAccess().getGroup_7_3(), "rule__XtextAssociation__Group_7_3__0");
					put(grammarAccess.getXtextAssociationAccess().getGroup_8(), "rule__XtextAssociation__Group_8__0");
					put(grammarAccess.getXtextAssociationAccess().getGroup_8_3(), "rule__XtextAssociation__Group_8_3__0");
					put(grammarAccess.getCommentAccess().getGroup(), "rule__Comment__Group__0");
					put(grammarAccess.getCardinalityAccess().getGroup(), "rule__Cardinality__Group__0");
					put(grammarAccess.getCardinalityAccess().getGroup_1(), "rule__Cardinality__Group_1__0");
					put(grammarAccess.getClassDiagramAccess().getTitleAssignment_2(), "rule__ClassDiagram__TitleAssignment_2");
					put(grammarAccess.getClassDiagramAccess().getRootPackageAssignment_3(), "rule__ClassDiagram__RootPackageAssignment_3");
					put(grammarAccess.getRootPackageAccess().getNameAssignment_1_1(), "rule__RootPackage__NameAssignment_1_1");
					put(grammarAccess.getRootPackageAccess().getPackageImportsAssignment_2(), "rule__RootPackage__PackageImportsAssignment_2");
					put(grammarAccess.getRootPackageAccess().getClassifiersAssignment_3(), "rule__RootPackage__ClassifiersAssignment_3");
					put(grammarAccess.getRootPackageAccess().getConnectorsAssignment_4(), "rule__RootPackage__ConnectorsAssignment_4");
					put(grammarAccess.getRootPackageAccess().getPackagesAssignment_5(), "rule__RootPackage__PackagesAssignment_5");
					put(grammarAccess.getPackageAccess().getNameAssignment_1(), "rule__Package__NameAssignment_1");
					put(grammarAccess.getPackageAccess().getPackageImportsAssignment_3(), "rule__Package__PackageImportsAssignment_3");
					put(grammarAccess.getPackageAccess().getClassifiersAssignment_4(), "rule__Package__ClassifiersAssignment_4");
					put(grammarAccess.getPackageAccess().getConnectorsAssignment_5(), "rule__Package__ConnectorsAssignment_5");
					put(grammarAccess.getPackageAccess().getPackagesAssignment_6(), "rule__Package__PackagesAssignment_6");
					put(grammarAccess.getPackageImportAccess().getImportedPackageAssignment_1(), "rule__PackageImport__ImportedPackageAssignment_1");
					put(grammarAccess.getPackageImportAccess().getCommentsAssignment_2(), "rule__PackageImport__CommentsAssignment_2");
					put(grammarAccess.getClassAccess().getVisibilityAssignment_0(), "rule__Class__VisibilityAssignment_0");
					put(grammarAccess.getClassAccess().getAbstractAssignment_1(), "rule__Class__AbstractAssignment_1");
					put(grammarAccess.getClassAccess().getNameAssignment_3_0(), "rule__Class__NameAssignment_3_0");
					put(grammarAccess.getClassAccess().getAliasAssignment_3_1_0(), "rule__Class__AliasAssignment_3_1_0");
					put(grammarAccess.getClassAccess().getNameAssignment_3_1_2(), "rule__Class__NameAssignment_3_1_2");
					put(grammarAccess.getClassAccess().getCommentsAssignment_4_0(), "rule__Class__CommentsAssignment_4_0");
					put(grammarAccess.getClassAccess().getCommentsAssignment_4_1_1(), "rule__Class__CommentsAssignment_4_1_1");
					put(grammarAccess.getClassAccess().getMembersAssignment_4_1_2(), "rule__Class__MembersAssignment_4_1_2");
					put(grammarAccess.getInterfaceAccess().getVisibilityAssignment_0(), "rule__Interface__VisibilityAssignment_0");
					put(grammarAccess.getInterfaceAccess().getNameAssignment_2_0(), "rule__Interface__NameAssignment_2_0");
					put(grammarAccess.getInterfaceAccess().getAliasAssignment_2_1_0(), "rule__Interface__AliasAssignment_2_1_0");
					put(grammarAccess.getInterfaceAccess().getNameAssignment_2_1_2(), "rule__Interface__NameAssignment_2_1_2");
					put(grammarAccess.getInterfaceAccess().getCommentsAssignment_3_0(), "rule__Interface__CommentsAssignment_3_0");
					put(grammarAccess.getInterfaceAccess().getCommentsAssignment_3_1_1(), "rule__Interface__CommentsAssignment_3_1_1");
					put(grammarAccess.getInterfaceAccess().getMembersAssignment_3_1_2(), "rule__Interface__MembersAssignment_3_1_2");
					put(grammarAccess.getAttributeAccess().getVisibilityAssignment_1(), "rule__Attribute__VisibilityAssignment_1");
					put(grammarAccess.getAttributeAccess().getStaticAssignment_2(), "rule__Attribute__StaticAssignment_2");
					put(grammarAccess.getAttributeAccess().getNameAssignment_3(), "rule__Attribute__NameAssignment_3");
					put(grammarAccess.getAttributeAccess().getTypeAssignment_5(), "rule__Attribute__TypeAssignment_5");
					put(grammarAccess.getMethodAccess().getVisibilityAssignment_0(), "rule__Method__VisibilityAssignment_0");
					put(grammarAccess.getMethodAccess().getAbstractAssignment_1(), "rule__Method__AbstractAssignment_1");
					put(grammarAccess.getMethodAccess().getStaticAssignment_2(), "rule__Method__StaticAssignment_2");
					put(grammarAccess.getMethodAccess().getNameAssignment_3(), "rule__Method__NameAssignment_3");
					put(grammarAccess.getMethodAccess().getParametersAssignment_5_0(), "rule__Method__ParametersAssignment_5_0");
					put(grammarAccess.getMethodAccess().getParametersAssignment_5_1_1(), "rule__Method__ParametersAssignment_5_1_1");
					put(grammarAccess.getMethodAccess().getTypeAssignment_7_1(), "rule__Method__TypeAssignment_7_1");
					put(grammarAccess.getParameterAccess().getVisibilityAssignment_0(), "rule__Parameter__VisibilityAssignment_0");
					put(grammarAccess.getParameterAccess().getNameAssignment_1(), "rule__Parameter__NameAssignment_1");
					put(grammarAccess.getParameterAccess().getTypeAssignment_3(), "rule__Parameter__TypeAssignment_3");
					put(grammarAccess.getGeneralizationAccess().getLeftAssignment_2(), "rule__Generalization__LeftAssignment_2");
					put(grammarAccess.getGeneralizationAccess().getRightAssignment_4(), "rule__Generalization__RightAssignment_4");
					put(grammarAccess.getGeneralizationAccess().getCommentsAssignment_6(), "rule__Generalization__CommentsAssignment_6");
					put(grammarAccess.getImplementationAccess().getLeftAssignment_2(), "rule__Implementation__LeftAssignment_2");
					put(grammarAccess.getImplementationAccess().getRightAssignment_4(), "rule__Implementation__RightAssignment_4");
					put(grammarAccess.getImplementationAccess().getCommentsAssignment_6(), "rule__Implementation__CommentsAssignment_6");
					put(grammarAccess.getXtextAssociationAccess().getTwoSideBidirectionalityAssignment_0(), "rule__XtextAssociation__TwoSideBidirectionalityAssignment_0");
					put(grammarAccess.getXtextAssociationAccess().getTwoSideAggregationKindAssignment_1(), "rule__XtextAssociation__TwoSideAggregationKindAssignment_1");
					put(grammarAccess.getXtextAssociationAccess().getNameAssignment_2(), "rule__XtextAssociation__NameAssignment_2");
					put(grammarAccess.getXtextAssociationAccess().getMemberEndTypesAssignment_4(), "rule__XtextAssociation__MemberEndTypesAssignment_4");
					put(grammarAccess.getXtextAssociationAccess().getMemberEndTypesAssignment_5_1(), "rule__XtextAssociation__MemberEndTypesAssignment_5_1");
					put(grammarAccess.getXtextAssociationAccess().getMemberEndNamesAssignment_7_2(), "rule__XtextAssociation__MemberEndNamesAssignment_7_2");
					put(grammarAccess.getXtextAssociationAccess().getMemberEndNamesAssignment_7_3_1(), "rule__XtextAssociation__MemberEndNamesAssignment_7_3_1");
					put(grammarAccess.getXtextAssociationAccess().getMemberEndCardinalitiesAssignment_8_2(), "rule__XtextAssociation__MemberEndCardinalitiesAssignment_8_2");
					put(grammarAccess.getXtextAssociationAccess().getMemberEndCardinalitiesAssignment_8_3_1(), "rule__XtextAssociation__MemberEndCardinalitiesAssignment_8_3_1");
					put(grammarAccess.getXtextAssociationAccess().getCommentsAssignment_9(), "rule__XtextAssociation__CommentsAssignment_9");
					put(grammarAccess.getXtextAssociationMemberEndReferencedTypeAccess().getTypeAssignment(), "rule__XtextAssociationMemberEndReferencedType__TypeAssignment");
					put(grammarAccess.getCommentAccess().getBodyAssignment_1(), "rule__Comment__BodyAssignment_1");
					put(grammarAccess.getCardinalityAccess().getLowerBoundAssignment_0(), "rule__Cardinality__LowerBoundAssignment_0");
					put(grammarAccess.getCardinalityAccess().getUpperBoundAssignment_1_1(), "rule__Cardinality__UpperBoundAssignment_1_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ClsGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ClsGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
