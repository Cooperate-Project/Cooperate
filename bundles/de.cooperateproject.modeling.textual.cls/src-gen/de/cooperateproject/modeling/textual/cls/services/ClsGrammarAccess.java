/*
 * generated by Xtext
 */
package de.cooperateproject.modeling.textual.cls.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class ClsGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ClassDiagramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.ClassDiagram");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClassDiagramAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStartclassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTitleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTitleSTRINGTerminalRuleCall_2_0 = (RuleCall)cTitleAssignment_2.eContents().get(0);
		private final Assignment cRootPackageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRootPackageRootPackageParserRuleCall_3_0 = (RuleCall)cRootPackageAssignment_3.eContents().get(0);
		private final Keyword cEndclassKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//// ------------------------------------------------------------------------------------------
		//// ---------------------------------Root-----------------------------------------------------
		//// ------------------------------------------------------------------------------------------
		//ClassDiagram:
		//	{ClassDiagram}
		//	'@startclass' title=STRING
		//	rootPackage=RootPackage
		//	'@endclass';
		@Override public ParserRule getRule() { return rule; }

		//{ClassDiagram} '@startclass' title=STRING rootPackage=RootPackage '@endclass'
		public Group getGroup() { return cGroup; }

		//{ClassDiagram}
		public Action getClassDiagramAction_0() { return cClassDiagramAction_0; }

		//'@startclass'
		public Keyword getStartclassKeyword_1() { return cStartclassKeyword_1; }

		//title=STRING
		public Assignment getTitleAssignment_2() { return cTitleAssignment_2; }

		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_2_0() { return cTitleSTRINGTerminalRuleCall_2_0; }

		//rootPackage=RootPackage
		public Assignment getRootPackageAssignment_3() { return cRootPackageAssignment_3; }

		//RootPackage
		public RuleCall getRootPackageRootPackageParserRuleCall_3_0() { return cRootPackageRootPackageParserRuleCall_3_0; }

		//'@endclass'
		public Keyword getEndclassKeyword_4() { return cEndclassKeyword_4; }
	}

	public class RootPackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.RootPackage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRootPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferencedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cReferencedElementPackageCrossReference_1_0 = (CrossReference)cReferencedElementAssignment_1.eContents().get(0);
		private final RuleCall cReferencedElementPackageFQNParserRuleCall_1_0_1 = (RuleCall)cReferencedElementPackageCrossReference_1_0.eContents().get(1);
		private final Assignment cPackageImportsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPackageImportsPackageImportParserRuleCall_2_0 = (RuleCall)cPackageImportsAssignment_2.eContents().get(0);
		private final Assignment cClassifiersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cClassifiersClassifierParserRuleCall_3_0 = (RuleCall)cClassifiersAssignment_3.eContents().get(0);
		private final Assignment cConnectorsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cConnectorsConnectorParserRuleCall_4_0 = (RuleCall)cConnectorsAssignment_4.eContents().get(0);
		private final Assignment cPackagesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPackagesPackageParserRuleCall_5_0 = (RuleCall)cPackagesAssignment_5.eContents().get(0);
		
		//RootPackage Package:
		//	'rootPackage' referencedElement=[uml::Package|FQN] packageImports+=PackageImport*
		//	classifiers+=Classifier*
		//	connectors+=Connector*
		//	packages+=Package*
		@Override public ParserRule getRule() { return rule; }

		//'rootPackage' referencedElement=[uml::Package|FQN] packageImports+=PackageImport* classifiers+=Classifier*
		//connectors+=Connector* packages+=Package*
		public Group getGroup() { return cGroup; }

		//'rootPackage'
		public Keyword getRootPackageKeyword_0() { return cRootPackageKeyword_0; }

		//referencedElement=[uml::Package|FQN]
		public Assignment getReferencedElementAssignment_1() { return cReferencedElementAssignment_1; }

		//[uml::Package|FQN]
		public CrossReference getReferencedElementPackageCrossReference_1_0() { return cReferencedElementPackageCrossReference_1_0; }

		//FQN
		public RuleCall getReferencedElementPackageFQNParserRuleCall_1_0_1() { return cReferencedElementPackageFQNParserRuleCall_1_0_1; }

		//packageImports+=PackageImport*
		public Assignment getPackageImportsAssignment_2() { return cPackageImportsAssignment_2; }

		//PackageImport
		public RuleCall getPackageImportsPackageImportParserRuleCall_2_0() { return cPackageImportsPackageImportParserRuleCall_2_0; }

		//classifiers+=Classifier*
		public Assignment getClassifiersAssignment_3() { return cClassifiersAssignment_3; }

		//Classifier
		public RuleCall getClassifiersClassifierParserRuleCall_3_0() { return cClassifiersClassifierParserRuleCall_3_0; }

		//connectors+=Connector*
		public Assignment getConnectorsAssignment_4() { return cConnectorsAssignment_4; }

		//Connector
		public RuleCall getConnectorsConnectorParserRuleCall_4_0() { return cConnectorsConnectorParserRuleCall_4_0; }

		//packages+=Package*
		public Assignment getPackagesAssignment_5() { return cPackagesAssignment_5; }

		//Package
		public RuleCall getPackagesPackageParserRuleCall_5_0() { return cPackagesPackageParserRuleCall_5_0; }
	}

	public class PackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Package");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferencedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cReferencedElementPackageCrossReference_1_0 = (CrossReference)cReferencedElementAssignment_1.eContents().get(0);
		private final RuleCall cReferencedElementPackageFQNParserRuleCall_1_0_1 = (RuleCall)cReferencedElementPackageCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPackageImportsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPackageImportsPackageImportParserRuleCall_3_0 = (RuleCall)cPackageImportsAssignment_3.eContents().get(0);
		private final Assignment cClassifiersAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cClassifiersClassifierParserRuleCall_4_0 = (RuleCall)cClassifiersAssignment_4.eContents().get(0);
		private final Assignment cConnectorsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cConnectorsConnectorParserRuleCall_5_0 = (RuleCall)cConnectorsAssignment_5.eContents().get(0);
		private final Assignment cPackagesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPackagesPackageParserRuleCall_6_0 = (RuleCall)cPackagesAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Package:
		//	'package' referencedElement=[uml::Package|FQN] '{'
		//	packageImports+=PackageImport*
		//	classifiers+=Classifier*
		//	connectors+=Connector*
		//	packages+=Package*
		//	'}';
		@Override public ParserRule getRule() { return rule; }

		//'package' referencedElement=[uml::Package|FQN] '{' packageImports+=PackageImport* classifiers+=Classifier*
		//connectors+=Connector* packages+=Package* '}'
		public Group getGroup() { return cGroup; }

		//'package'
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//referencedElement=[uml::Package|FQN]
		public Assignment getReferencedElementAssignment_1() { return cReferencedElementAssignment_1; }

		//[uml::Package|FQN]
		public CrossReference getReferencedElementPackageCrossReference_1_0() { return cReferencedElementPackageCrossReference_1_0; }

		//FQN
		public RuleCall getReferencedElementPackageFQNParserRuleCall_1_0_1() { return cReferencedElementPackageFQNParserRuleCall_1_0_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//packageImports+=PackageImport*
		public Assignment getPackageImportsAssignment_3() { return cPackageImportsAssignment_3; }

		//PackageImport
		public RuleCall getPackageImportsPackageImportParserRuleCall_3_0() { return cPackageImportsPackageImportParserRuleCall_3_0; }

		//classifiers+=Classifier*
		public Assignment getClassifiersAssignment_4() { return cClassifiersAssignment_4; }

		//Classifier
		public RuleCall getClassifiersClassifierParserRuleCall_4_0() { return cClassifiersClassifierParserRuleCall_4_0; }

		//connectors+=Connector*
		public Assignment getConnectorsAssignment_5() { return cConnectorsAssignment_5; }

		//Connector
		public RuleCall getConnectorsConnectorParserRuleCall_5_0() { return cConnectorsConnectorParserRuleCall_5_0; }

		//packages+=Package*
		public Assignment getPackagesAssignment_6() { return cPackagesAssignment_6; }

		//Package
		public RuleCall getPackagesPackageParserRuleCall_6_0() { return cPackagesPackageParserRuleCall_6_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class PackageImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.PackageImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferencedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cReferencedElementPackageImportCrossReference_1_0 = (CrossReference)cReferencedElementAssignment_1.eContents().get(0);
		private final RuleCall cReferencedElementPackageImportFQNParserRuleCall_1_0_1 = (RuleCall)cReferencedElementPackageImportCrossReference_1_0.eContents().get(1);
		
		//PackageImport:
		//	"import" referencedElement=[uml::PackageImport|FQN];
		@Override public ParserRule getRule() { return rule; }

		//"import" referencedElement=[uml::PackageImport|FQN]
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//referencedElement=[uml::PackageImport|FQN]
		public Assignment getReferencedElementAssignment_1() { return cReferencedElementAssignment_1; }

		//[uml::PackageImport|FQN]
		public CrossReference getReferencedElementPackageImportCrossReference_1_0() { return cReferencedElementPackageImportCrossReference_1_0; }

		//FQN
		public RuleCall getReferencedElementPackageImportFQNParserRuleCall_1_0_1() { return cReferencedElementPackageImportFQNParserRuleCall_1_0_1; }
	}

	public class FQNElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.FQN");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//FQN:
		//	ID ("." ID)*;
		@Override public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class ClassifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Classifier");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cInterfaceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// ------------------------------------------------------------------------------------------
		//// ---------------------------------Class Diagram--------------------------------------------
		//// ------------------------------------------------------------------------------------------
		//Classifier:
		//	Class | Interface;
		@Override public ParserRule getRule() { return rule; }

		//Class | Interface
		public Alternatives getAlternatives() { return cAlternatives; }

		//Class
		public RuleCall getClassParserRuleCall_0() { return cClassParserRuleCall_0; }

		//Interface
		public RuleCall getInterfaceParserRuleCall_1() { return cInterfaceParserRuleCall_1; }
	}

	public class ClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Class");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Assignment cAbstractAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cAbstractAbstractKeyword_1_0 = (Keyword)cAbstractAssignment_1.eContents().get(0);
		private final Keyword cClassKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cReferencedElementAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cReferencedElementClassCrossReference_3_0 = (CrossReference)cReferencedElementAssignment_3.eContents().get(0);
		private final RuleCall cReferencedElementClassIDTerminalRuleCall_3_0_1 = (RuleCall)cReferencedElementClassCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAliasExpressionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cAliasExpressionStringExpressionCrossReference_4_1_0 = (CrossReference)cAliasExpressionAssignment_4_1.eContents().get(0);
		private final RuleCall cAliasExpressionStringExpressionIDTerminalRuleCall_4_1_0_1 = (RuleCall)cAliasExpressionStringExpressionCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMembersAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMembersMemberParserRuleCall_5_1_0 = (RuleCall)cMembersAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		
		//Class:
		//	visibility=Visibility? abstract?='abstract'? 'class' referencedElement=[uml::Class] ('as'
		//	aliasExpression=[uml::StringExpression])? ('{' members+=Member* '}')?;
		@Override public ParserRule getRule() { return rule; }

		//visibility=Visibility? abstract?='abstract'? 'class' referencedElement=[uml::Class] ('as'
		//aliasExpression=[uml::StringExpression])? ('{' members+=Member* '}')?
		public Group getGroup() { return cGroup; }

		//visibility=Visibility?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_0_0() { return cVisibilityVisibilityEnumRuleCall_0_0; }

		//abstract?='abstract'?
		public Assignment getAbstractAssignment_1() { return cAbstractAssignment_1; }

		//'abstract'
		public Keyword getAbstractAbstractKeyword_1_0() { return cAbstractAbstractKeyword_1_0; }

		//'class'
		public Keyword getClassKeyword_2() { return cClassKeyword_2; }

		//referencedElement=[uml::Class]
		public Assignment getReferencedElementAssignment_3() { return cReferencedElementAssignment_3; }

		//[uml::Class]
		public CrossReference getReferencedElementClassCrossReference_3_0() { return cReferencedElementClassCrossReference_3_0; }

		//ID
		public RuleCall getReferencedElementClassIDTerminalRuleCall_3_0_1() { return cReferencedElementClassIDTerminalRuleCall_3_0_1; }

		//('as' aliasExpression=[uml::StringExpression])?
		public Group getGroup_4() { return cGroup_4; }

		//'as'
		public Keyword getAsKeyword_4_0() { return cAsKeyword_4_0; }

		//aliasExpression=[uml::StringExpression]
		public Assignment getAliasExpressionAssignment_4_1() { return cAliasExpressionAssignment_4_1; }

		//[uml::StringExpression]
		public CrossReference getAliasExpressionStringExpressionCrossReference_4_1_0() { return cAliasExpressionStringExpressionCrossReference_4_1_0; }

		//ID
		public RuleCall getAliasExpressionStringExpressionIDTerminalRuleCall_4_1_0_1() { return cAliasExpressionStringExpressionIDTerminalRuleCall_4_1_0_1; }

		//('{' members+=Member* '}')?
		public Group getGroup_5() { return cGroup_5; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_0() { return cLeftCurlyBracketKeyword_5_0; }

		//members+=Member*
		public Assignment getMembersAssignment_5_1() { return cMembersAssignment_5_1; }

		//Member
		public RuleCall getMembersMemberParserRuleCall_5_1_0() { return cMembersMemberParserRuleCall_5_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_5_2() { return cRightCurlyBracketKeyword_5_2; }
	}

	public class InterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Interface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cInterfaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cReferencedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cReferencedElementInterfaceCrossReference_2_0 = (CrossReference)cReferencedElementAssignment_2.eContents().get(0);
		private final RuleCall cReferencedElementInterfaceIDTerminalRuleCall_2_0_1 = (RuleCall)cReferencedElementInterfaceCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAliasExpressionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cAliasExpressionStringExpressionCrossReference_3_1_0 = (CrossReference)cAliasExpressionAssignment_3_1.eContents().get(0);
		private final RuleCall cAliasExpressionStringExpressionIDTerminalRuleCall_3_1_0_1 = (RuleCall)cAliasExpressionStringExpressionCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMembersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMembersMemberParserRuleCall_4_1_0 = (RuleCall)cMembersAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		
		//Interface:
		//	visibility=Visibility? 'interface' referencedElement=[uml::Interface] ('as' aliasExpression=[uml::StringExpression])?
		//	('{' members+=Member* '}')?;
		@Override public ParserRule getRule() { return rule; }

		//visibility=Visibility? 'interface' referencedElement=[uml::Interface] ('as' aliasExpression=[uml::StringExpression])?
		//('{' members+=Member* '}')?
		public Group getGroup() { return cGroup; }

		//visibility=Visibility?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_0_0() { return cVisibilityVisibilityEnumRuleCall_0_0; }

		//'interface'
		public Keyword getInterfaceKeyword_1() { return cInterfaceKeyword_1; }

		//referencedElement=[uml::Interface]
		public Assignment getReferencedElementAssignment_2() { return cReferencedElementAssignment_2; }

		//[uml::Interface]
		public CrossReference getReferencedElementInterfaceCrossReference_2_0() { return cReferencedElementInterfaceCrossReference_2_0; }

		//ID
		public RuleCall getReferencedElementInterfaceIDTerminalRuleCall_2_0_1() { return cReferencedElementInterfaceIDTerminalRuleCall_2_0_1; }

		//('as' aliasExpression=[uml::StringExpression])?
		public Group getGroup_3() { return cGroup_3; }

		//'as'
		public Keyword getAsKeyword_3_0() { return cAsKeyword_3_0; }

		//aliasExpression=[uml::StringExpression]
		public Assignment getAliasExpressionAssignment_3_1() { return cAliasExpressionAssignment_3_1; }

		//[uml::StringExpression]
		public CrossReference getAliasExpressionStringExpressionCrossReference_3_1_0() { return cAliasExpressionStringExpressionCrossReference_3_1_0; }

		//ID
		public RuleCall getAliasExpressionStringExpressionIDTerminalRuleCall_3_1_0_1() { return cAliasExpressionStringExpressionIDTerminalRuleCall_3_1_0_1; }

		//('{' members+=Member* '}')?
		public Group getGroup_4() { return cGroup_4; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }

		//members+=Member*
		public Assignment getMembersAssignment_4_1() { return cMembersAssignment_4_1; }

		//Member
		public RuleCall getMembersMemberParserRuleCall_4_1_0() { return cMembersMemberParserRuleCall_4_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_4_2() { return cRightCurlyBracketKeyword_4_2; }
	}

	public class TypeReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.TypeReference");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDataTypeReferenceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUMLTypeReferenceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TypeReference:
		//	DataTypeReference | UMLTypeReference;
		@Override public ParserRule getRule() { return rule; }

		//DataTypeReference | UMLTypeReference
		public Alternatives getAlternatives() { return cAlternatives; }

		//DataTypeReference
		public RuleCall getDataTypeReferenceParserRuleCall_0() { return cDataTypeReferenceParserRuleCall_0; }

		//UMLTypeReference
		public RuleCall getUMLTypeReferenceParserRuleCall_1() { return cUMLTypeReferenceParserRuleCall_1; }
	}

	public class DataTypeReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.DataTypeReference");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cTypePrimitiveTypeEnumRuleCall_0 = (RuleCall)cTypeAssignment.eContents().get(0);
		
		//DataTypeReference:
		//	type=PrimitiveType;
		@Override public ParserRule getRule() { return rule; }

		//type=PrimitiveType
		public Assignment getTypeAssignment() { return cTypeAssignment; }

		//PrimitiveType
		public RuleCall getTypePrimitiveTypeEnumRuleCall_0() { return cTypePrimitiveTypeEnumRuleCall_0; }
	}

	public class UMLTypeReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.UMLTypeReference");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeTypeCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeTypeFQNParserRuleCall_0_1 = (RuleCall)cTypeTypeCrossReference_0.eContents().get(1);
		
		//UMLTypeReference:
		//	type=[uml::Type|FQN];
		@Override public ParserRule getRule() { return rule; }

		//type=[uml::Type|FQN]
		public Assignment getTypeAssignment() { return cTypeAssignment; }

		//[uml::Type|FQN]
		public CrossReference getTypeTypeCrossReference_0() { return cTypeTypeCrossReference_0; }

		//FQN
		public RuleCall getTypeTypeFQNParserRuleCall_0_1() { return cTypeTypeFQNParserRuleCall_0_1; }
	}

	public class MemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Member");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMethodParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Member:
		//	Attribute
		//	| Method;
		@Override public ParserRule getRule() { return rule; }

		//Attribute | Method
		public Alternatives getAlternatives() { return cAlternatives; }

		//Attribute
		public RuleCall getAttributeParserRuleCall_0() { return cAttributeParserRuleCall_0; }

		//Method
		public RuleCall getMethodParserRuleCall_1() { return cMethodParserRuleCall_1; }
	}

	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAttributeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Assignment cStaticAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cStaticStaticKeyword_2_0 = (Keyword)cStaticAssignment_2.eContents().get(0);
		private final Assignment cFinalAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cFinalFinalKeyword_3_0 = (Keyword)cFinalAssignment_3.eContents().get(0);
		private final Assignment cReferencedElementAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cReferencedElementPropertyCrossReference_4_0 = (CrossReference)cReferencedElementAssignment_4.eContents().get(0);
		private final RuleCall cReferencedElementPropertyIDTerminalRuleCall_4_0_1 = (RuleCall)cReferencedElementPropertyCrossReference_4_0.eContents().get(1);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeTypeReferenceParserRuleCall_6_0 = (RuleCall)cTypeAssignment_6.eContents().get(0);
		
		//Attribute:
		//	{Attribute} visibility=Visibility?
		//	static?='static'?
		//	final?='final'?
		//	referencedElement=[uml::Property] ':' type=TypeReference;
		@Override public ParserRule getRule() { return rule; }

		//{Attribute} visibility=Visibility? static?='static'? final?='final'? referencedElement=[uml::Property] ':'
		//type=TypeReference
		public Group getGroup() { return cGroup; }

		//{Attribute}
		public Action getAttributeAction_0() { return cAttributeAction_0; }

		//visibility=Visibility?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }

		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_1_0() { return cVisibilityVisibilityEnumRuleCall_1_0; }

		//static?='static'?
		public Assignment getStaticAssignment_2() { return cStaticAssignment_2; }

		//'static'
		public Keyword getStaticStaticKeyword_2_0() { return cStaticStaticKeyword_2_0; }

		//final?='final'?
		public Assignment getFinalAssignment_3() { return cFinalAssignment_3; }

		//'final'
		public Keyword getFinalFinalKeyword_3_0() { return cFinalFinalKeyword_3_0; }

		//referencedElement=[uml::Property]
		public Assignment getReferencedElementAssignment_4() { return cReferencedElementAssignment_4; }

		//[uml::Property]
		public CrossReference getReferencedElementPropertyCrossReference_4_0() { return cReferencedElementPropertyCrossReference_4_0; }

		//ID
		public RuleCall getReferencedElementPropertyIDTerminalRuleCall_4_0_1() { return cReferencedElementPropertyIDTerminalRuleCall_4_0_1; }

		//':'
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }

		//type=TypeReference
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }

		//TypeReference
		public RuleCall getTypeTypeReferenceParserRuleCall_6_0() { return cTypeTypeReferenceParserRuleCall_6_0; }
	}

	public class MethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Method");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Assignment cAbstractAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cAbstractAbstractKeyword_1_0 = (Keyword)cAbstractAssignment_1.eContents().get(0);
		private final Assignment cStaticAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cStaticStaticKeyword_2_0 = (Keyword)cStaticAssignment_2.eContents().get(0);
		private final Assignment cFinalAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cFinalFinalKeyword_3_0 = (Keyword)cFinalAssignment_3.eContents().get(0);
		private final Assignment cReferencedElementAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cReferencedElementOperationCrossReference_4_0 = (CrossReference)cReferencedElementAssignment_4.eContents().get(0);
		private final RuleCall cReferencedElementOperationIDTerminalRuleCall_4_0_1 = (RuleCall)cReferencedElementOperationCrossReference_4_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cParametersAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cParametersParameterParserRuleCall_6_0_0 = (RuleCall)cParametersAssignment_6_0.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Keyword cCommaKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cParametersAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_1_1_0 = (RuleCall)cParametersAssignment_6_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cTypeAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cTypeTypeReferenceParserRuleCall_8_1_0 = (RuleCall)cTypeAssignment_8_1.eContents().get(0);
		
		//Method:
		//	visibility=Visibility?
		//	abstract?='abstract'?
		//	static?='static'?
		//	final?='final'?
		//	referencedElement=[uml::Operation] '(' (parameters+=Parameter (',' parameters+=Parameter)*)* ')' (':'
		//	type=TypeReference)?;
		@Override public ParserRule getRule() { return rule; }

		//visibility=Visibility? abstract?='abstract'? static?='static'? final?='final'? referencedElement=[uml::Operation] '('
		//(parameters+=Parameter (',' parameters+=Parameter)*)* ')' (':' type=TypeReference)?
		public Group getGroup() { return cGroup; }

		//visibility=Visibility?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_0_0() { return cVisibilityVisibilityEnumRuleCall_0_0; }

		//abstract?='abstract'?
		public Assignment getAbstractAssignment_1() { return cAbstractAssignment_1; }

		//'abstract'
		public Keyword getAbstractAbstractKeyword_1_0() { return cAbstractAbstractKeyword_1_0; }

		//static?='static'?
		public Assignment getStaticAssignment_2() { return cStaticAssignment_2; }

		//'static'
		public Keyword getStaticStaticKeyword_2_0() { return cStaticStaticKeyword_2_0; }

		//final?='final'?
		public Assignment getFinalAssignment_3() { return cFinalAssignment_3; }

		//'final'
		public Keyword getFinalFinalKeyword_3_0() { return cFinalFinalKeyword_3_0; }

		//referencedElement=[uml::Operation]
		public Assignment getReferencedElementAssignment_4() { return cReferencedElementAssignment_4; }

		//[uml::Operation]
		public CrossReference getReferencedElementOperationCrossReference_4_0() { return cReferencedElementOperationCrossReference_4_0; }

		//ID
		public RuleCall getReferencedElementOperationIDTerminalRuleCall_4_0_1() { return cReferencedElementOperationIDTerminalRuleCall_4_0_1; }

		//'('
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }

		//(parameters+=Parameter (',' parameters+=Parameter)*)*
		public Group getGroup_6() { return cGroup_6; }

		//parameters+=Parameter
		public Assignment getParametersAssignment_6_0() { return cParametersAssignment_6_0; }

		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_0_0() { return cParametersParameterParserRuleCall_6_0_0; }

		//(',' parameters+=Parameter)*
		public Group getGroup_6_1() { return cGroup_6_1; }

		//','
		public Keyword getCommaKeyword_6_1_0() { return cCommaKeyword_6_1_0; }

		//parameters+=Parameter
		public Assignment getParametersAssignment_6_1_1() { return cParametersAssignment_6_1_1; }

		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_1_1_0() { return cParametersParameterParserRuleCall_6_1_1_0; }

		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }

		//(':' type=TypeReference)?
		public Group getGroup_8() { return cGroup_8; }

		//':'
		public Keyword getColonKeyword_8_0() { return cColonKeyword_8_0; }

		//type=TypeReference
		public Assignment getTypeAssignment_8_1() { return cTypeAssignment_8_1; }

		//TypeReference
		public RuleCall getTypeTypeReferenceParserRuleCall_8_1_0() { return cTypeTypeReferenceParserRuleCall_8_1_0; }
	}

	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Assignment cStaticAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cStaticStaticKeyword_1_0 = (Keyword)cStaticAssignment_1.eContents().get(0);
		private final Assignment cFinalAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cFinalFinalKeyword_2_0 = (Keyword)cFinalAssignment_2.eContents().get(0);
		private final Assignment cReferencedElementAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cReferencedElementParameterCrossReference_3_0 = (CrossReference)cReferencedElementAssignment_3.eContents().get(0);
		private final RuleCall cReferencedElementParameterIDTerminalRuleCall_3_0_1 = (RuleCall)cReferencedElementParameterCrossReference_3_0.eContents().get(1);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeTypeReferenceParserRuleCall_5_0 = (RuleCall)cTypeAssignment_5.eContents().get(0);
		
		//Parameter:
		//	visibility=Visibility?
		//	static?='static'?
		//	final?='final'?
		//	referencedElement=[uml::Parameter] ':' type=TypeReference;
		@Override public ParserRule getRule() { return rule; }

		//visibility=Visibility? static?='static'? final?='final'? referencedElement=[uml::Parameter] ':' type=TypeReference
		public Group getGroup() { return cGroup; }

		//visibility=Visibility?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }

		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_0_0() { return cVisibilityVisibilityEnumRuleCall_0_0; }

		//static?='static'?
		public Assignment getStaticAssignment_1() { return cStaticAssignment_1; }

		//'static'
		public Keyword getStaticStaticKeyword_1_0() { return cStaticStaticKeyword_1_0; }

		//final?='final'?
		public Assignment getFinalAssignment_2() { return cFinalAssignment_2; }

		//'final'
		public Keyword getFinalFinalKeyword_2_0() { return cFinalFinalKeyword_2_0; }

		//referencedElement=[uml::Parameter]
		public Assignment getReferencedElementAssignment_3() { return cReferencedElementAssignment_3; }

		//[uml::Parameter]
		public CrossReference getReferencedElementParameterCrossReference_3_0() { return cReferencedElementParameterCrossReference_3_0; }

		//ID
		public RuleCall getReferencedElementParameterIDTerminalRuleCall_3_0_1() { return cReferencedElementParameterIDTerminalRuleCall_3_0_1; }

		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//type=TypeReference
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }

		//TypeReference
		public RuleCall getTypeTypeReferenceParserRuleCall_5_0() { return cTypeTypeReferenceParserRuleCall_5_0; }
	}

	public class ConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Connector");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGeneralizationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAssociationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cImplementationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cCommentLinkParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cMultiAssociationParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Connector:
		//	Generalization
		//	| Association
		//	| Implementation
		//	| CommentLink
		//	| MultiAssociation;
		@Override public ParserRule getRule() { return rule; }

		//Generalization | Association | Implementation | CommentLink | MultiAssociation
		public Alternatives getAlternatives() { return cAlternatives; }

		//Generalization
		public RuleCall getGeneralizationParserRuleCall_0() { return cGeneralizationParserRuleCall_0; }

		//Association
		public RuleCall getAssociationParserRuleCall_1() { return cAssociationParserRuleCall_1; }

		//Implementation
		public RuleCall getImplementationParserRuleCall_2() { return cImplementationParserRuleCall_2; }

		//CommentLink
		public RuleCall getCommentLinkParserRuleCall_3() { return cCommentLinkParserRuleCall_3; }

		//MultiAssociation
		public RuleCall getMultiAssociationParserRuleCall_4() { return cMultiAssociationParserRuleCall_4; }
	}

	public class GeneralizationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Generalization");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLeftAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cLeftUMLTypeReferenceParserRuleCall_0_0 = (RuleCall)cLeftAssignment_0.eContents().get(0);
		private final Keyword cIsaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRightAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRightUMLTypeReferenceParserRuleCall_2_0 = (RuleCall)cRightAssignment_2.eContents().get(0);
		
		//Generalization:
		//	left=UMLTypeReference 'isa' right=UMLTypeReference;
		@Override public ParserRule getRule() { return rule; }

		//left=UMLTypeReference 'isa' right=UMLTypeReference
		public Group getGroup() { return cGroup; }

		//left=UMLTypeReference
		public Assignment getLeftAssignment_0() { return cLeftAssignment_0; }

		//UMLTypeReference
		public RuleCall getLeftUMLTypeReferenceParserRuleCall_0_0() { return cLeftUMLTypeReferenceParserRuleCall_0_0; }

		//'isa'
		public Keyword getIsaKeyword_1() { return cIsaKeyword_1; }

		//right=UMLTypeReference
		public Assignment getRightAssignment_2() { return cRightAssignment_2; }

		//UMLTypeReference
		public RuleCall getRightUMLTypeReferenceParserRuleCall_2_0() { return cRightUMLTypeReferenceParserRuleCall_2_0; }
	}

	public class ImplementationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Implementation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLeftAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cLeftUMLTypeReferenceParserRuleCall_0_0 = (RuleCall)cLeftAssignment_0.eContents().get(0);
		private final Keyword cImplKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRightAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRightUMLTypeReferenceParserRuleCall_2_0 = (RuleCall)cRightAssignment_2.eContents().get(0);
		
		//Implementation:
		//	left=UMLTypeReference 'impl' right=UMLTypeReference;
		@Override public ParserRule getRule() { return rule; }

		//left=UMLTypeReference 'impl' right=UMLTypeReference
		public Group getGroup() { return cGroup; }

		//left=UMLTypeReference
		public Assignment getLeftAssignment_0() { return cLeftAssignment_0; }

		//UMLTypeReference
		public RuleCall getLeftUMLTypeReferenceParserRuleCall_0_0() { return cLeftUMLTypeReferenceParserRuleCall_0_0; }

		//'impl'
		public Keyword getImplKeyword_1() { return cImplKeyword_1; }

		//right=UMLTypeReference
		public Assignment getRightAssignment_2() { return cRightAssignment_2; }

		//UMLTypeReference
		public RuleCall getRightUMLTypeReferenceParserRuleCall_2_0() { return cRightUMLTypeReferenceParserRuleCall_2_0; }
	}

	public class CommentLinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.CommentLink");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLeftAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cLeftUMLTypeReferenceParserRuleCall_0_0 = (RuleCall)cLeftAssignment_0.eContents().get(0);
		private final Keyword cNoteKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCommentAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cCommentCommentCrossReference_2_0 = (CrossReference)cCommentAssignment_2.eContents().get(0);
		private final RuleCall cCommentCommentCommentBodyParserRuleCall_2_0_1 = (RuleCall)cCommentCommentCrossReference_2_0.eContents().get(1);
		
		//CommentLink:
		//	left=UMLTypeReference 'note' comment=[uml::Comment|CommentBody];
		@Override public ParserRule getRule() { return rule; }

		//left=UMLTypeReference 'note' comment=[uml::Comment|CommentBody]
		public Group getGroup() { return cGroup; }

		//left=UMLTypeReference
		public Assignment getLeftAssignment_0() { return cLeftAssignment_0; }

		//UMLTypeReference
		public RuleCall getLeftUMLTypeReferenceParserRuleCall_0_0() { return cLeftUMLTypeReferenceParserRuleCall_0_0; }

		//'note'
		public Keyword getNoteKeyword_1() { return cNoteKeyword_1; }

		//comment=[uml::Comment|CommentBody]
		public Assignment getCommentAssignment_2() { return cCommentAssignment_2; }

		//[uml::Comment|CommentBody]
		public CrossReference getCommentCommentCrossReference_2_0() { return cCommentCommentCrossReference_2_0; }

		//CommentBody
		public RuleCall getCommentCommentCommentBodyParserRuleCall_2_0_1() { return cCommentCommentCommentBodyParserRuleCall_2_0_1; }
	}

	public class AssociationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Association");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cBidirectionalAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cBidirectionalBiKeyword_0_0 = (Keyword)cBidirectionalAssignment_0.eContents().get(0);
		private final Assignment cAggregationKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAggregationKindAggregationKindEnumRuleCall_1_0 = (RuleCall)cAggregationKindAssignment_1.eContents().get(0);
		private final Assignment cLeftAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLeftUMLTypeReferenceParserRuleCall_2_0 = (RuleCall)cLeftAssignment_2.eContents().get(0);
		private final Assignment cReferencedElementAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cReferencedElementAssociationCrossReference_3_0 = (CrossReference)cReferencedElementAssignment_3.eContents().get(0);
		private final RuleCall cReferencedElementAssociationIDTerminalRuleCall_3_0_1 = (RuleCall)cReferencedElementAssociationCrossReference_3_0.eContents().get(1);
		private final Assignment cRightAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRightUMLTypeReferenceParserRuleCall_4_0 = (RuleCall)cRightAssignment_4.eContents().get(0);
		private final Assignment cPropertiesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPropertiesAssociationPropertiesParserRuleCall_5_0 = (RuleCall)cPropertiesAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cNoteKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cCommentAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cCommentCommentCrossReference_6_1_0 = (CrossReference)cCommentAssignment_6_1.eContents().get(0);
		private final RuleCall cCommentCommentCommentBodyParserRuleCall_6_1_0_1 = (RuleCall)cCommentCommentCrossReference_6_1_0.eContents().get(1);
		
		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#XtextFragmentProvider_de.cooperateproject.modeling.textual.cls.Cls/Association'
		@Override public ParserRule getRule() { return rule; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives'
		public Group getGroup() { return cGroup; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.0'
		public Assignment getBidirectionalAssignment_0() { return cBidirectionalAssignment_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.0/@terminal'
		public Keyword getBidirectionalBiKeyword_0_0() { return cBidirectionalBiKeyword_0_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.1'
		public Assignment getAggregationKindAssignment_1() { return cAggregationKindAssignment_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.1/@terminal'
		public RuleCall getAggregationKindAggregationKindEnumRuleCall_1_0() { return cAggregationKindAggregationKindEnumRuleCall_1_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.2'
		public Assignment getLeftAssignment_2() { return cLeftAssignment_2; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.2/@terminal'
		public RuleCall getLeftUMLTypeReferenceParserRuleCall_2_0() { return cLeftUMLTypeReferenceParserRuleCall_2_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.3'
		public Assignment getReferencedElementAssignment_3() { return cReferencedElementAssignment_3; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.3/@terminal'
		public CrossReference getReferencedElementAssociationCrossReference_3_0() { return cReferencedElementAssociationCrossReference_3_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.3/@terminal/@terminal'
		public RuleCall getReferencedElementAssociationIDTerminalRuleCall_3_0_1() { return cReferencedElementAssociationIDTerminalRuleCall_3_0_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.4'
		public Assignment getRightAssignment_4() { return cRightAssignment_4; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.4/@terminal'
		public RuleCall getRightUMLTypeReferenceParserRuleCall_4_0() { return cRightUMLTypeReferenceParserRuleCall_4_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.5'
		public Assignment getPropertiesAssignment_5() { return cPropertiesAssignment_5; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.5/@terminal'
		public RuleCall getPropertiesAssociationPropertiesParserRuleCall_5_0() { return cPropertiesAssociationPropertiesParserRuleCall_5_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.6'
		public Group getGroup_6() { return cGroup_6; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.6/@elements.0'
		public Keyword getNoteKeyword_6_0() { return cNoteKeyword_6_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.6/@elements.1'
		public Assignment getCommentAssignment_6_1() { return cCommentAssignment_6_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.6/@elements.1/@terminal'
		public CrossReference getCommentCommentCrossReference_6_1_0() { return cCommentCommentCrossReference_6_1_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.19/@alternatives/@elements.6/@elements.1/@terminal/@terminal'
		public RuleCall getCommentCommentCommentBodyParserRuleCall_6_1_0_1() { return cCommentCommentCommentBodyParserRuleCall_6_1_0_1; }
	}

	public class MultiAssociationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.MultiAssociation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAscKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferencedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cReferencedElementAssociationCrossReference_1_0 = (CrossReference)cReferencedElementAssignment_1.eContents().get(0);
		private final RuleCall cReferencedElementAssociationIDTerminalRuleCall_1_0_1 = (RuleCall)cReferencedElementAssociationCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cConnectorEndsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cConnectorEndsMemberEndParserRuleCall_3_0_0 = (RuleCall)cConnectorEndsAssignment_3_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#XtextFragmentProvider_de.cooperateproject.modeling.textual.cls.Cls/MultiAssociation'
		@Override public ParserRule getRule() { return rule; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.20/@alternatives'
		public Group getGroup() { return cGroup; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.20/@alternatives/@elements.0'
		public Keyword getAscKeyword_0() { return cAscKeyword_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.20/@alternatives/@elements.1'
		public Assignment getReferencedElementAssignment_1() { return cReferencedElementAssignment_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.20/@alternatives/@elements.1/@terminal'
		public CrossReference getReferencedElementAssociationCrossReference_1_0() { return cReferencedElementAssociationCrossReference_1_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.20/@alternatives/@elements.1/@terminal/@terminal'
		public RuleCall getReferencedElementAssociationIDTerminalRuleCall_1_0_1() { return cReferencedElementAssociationIDTerminalRuleCall_1_0_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//(connectorEnds+=MemberEnd ';')+
		public Group getGroup_3() { return cGroup_3; }

		//connectorEnds+=MemberEnd
		public Assignment getConnectorEndsAssignment_3_0() { return cConnectorEndsAssignment_3_0; }

		//MemberEnd
		public RuleCall getConnectorEndsMemberEndParserRuleCall_3_0_0() { return cConnectorEndsMemberEndParserRuleCall_3_0_0; }

		//';'
		public Keyword getSemicolonKeyword_3_1() { return cSemicolonKeyword_3_1; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class MemberEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.MemberEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeUMLTypeReferenceParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cReferencedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cReferencedElementPropertyCrossReference_1_0 = (CrossReference)cReferencedElementAssignment_1.eContents().get(0);
		private final RuleCall cReferencedElementPropertyIDTerminalRuleCall_1_0_1 = (RuleCall)cReferencedElementPropertyCrossReference_1_0.eContents().get(1);
		private final Assignment cCardinalityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCardinalityCardinalityParserRuleCall_2_0 = (RuleCall)cCardinalityAssignment_2.eContents().get(0);
		private final Assignment cNavigableAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNavigableLessThanSignKeyword_3_0 = (Keyword)cNavigableAssignment_3.eContents().get(0);
		
		//MemberEnd:
		//	type=UMLTypeReference referencedElement=[uml::Property]? cardinality=Cardinality? navigable?='<'?;
		@Override public ParserRule getRule() { return rule; }

		//type=UMLTypeReference referencedElement=[uml::Property]? cardinality=Cardinality? navigable?='<'?
		public Group getGroup() { return cGroup; }

		//type=UMLTypeReference
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//UMLTypeReference
		public RuleCall getTypeUMLTypeReferenceParserRuleCall_0_0() { return cTypeUMLTypeReferenceParserRuleCall_0_0; }

		//referencedElement=[uml::Property]?
		public Assignment getReferencedElementAssignment_1() { return cReferencedElementAssignment_1; }

		//[uml::Property]
		public CrossReference getReferencedElementPropertyCrossReference_1_0() { return cReferencedElementPropertyCrossReference_1_0; }

		//ID
		public RuleCall getReferencedElementPropertyIDTerminalRuleCall_1_0_1() { return cReferencedElementPropertyIDTerminalRuleCall_1_0_1; }

		//cardinality=Cardinality?
		public Assignment getCardinalityAssignment_2() { return cCardinalityAssignment_2; }

		//Cardinality
		public RuleCall getCardinalityCardinalityParserRuleCall_2_0() { return cCardinalityCardinalityParserRuleCall_2_0; }

		//navigable?='<'?
		public Assignment getNavigableAssignment_3() { return cNavigableAssignment_3; }

		//'<'
		public Keyword getNavigableLessThanSignKeyword_3_0() { return cNavigableLessThanSignKeyword_3_0; }
	}

	public class AssociationPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.AssociationProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCardinalityLeftAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCardinalityLeftCardinalityParserRuleCall_1_0 = (RuleCall)cCardinalityLeftAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPropertyLeftAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cPropertyLeftPropertyCrossReference_2_1_0 = (CrossReference)cPropertyLeftAssignment_2_1.eContents().get(0);
		private final RuleCall cPropertyLeftPropertyIDTerminalRuleCall_2_1_0_1 = (RuleCall)cPropertyLeftPropertyCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cVerticalLineKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCardinalityRightAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCardinalityRightCardinalityParserRuleCall_3_1_0 = (RuleCall)cCardinalityRightAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cPropertyRightAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cPropertyRightPropertyCrossReference_3_2_1_0 = (CrossReference)cPropertyRightAssignment_3_2_1.eContents().get(0);
		private final RuleCall cPropertyRightPropertyIDTerminalRuleCall_3_2_1_0_1 = (RuleCall)cPropertyRightPropertyCrossReference_3_2_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AssociationProperties:
		//	'[' cardinalityLeft=Cardinality (',' propertyLeft=[uml::Property])? ('|' cardinalityRight=Cardinality (','
		//	propertyRight=[uml::Property])?)? ']';
		@Override public ParserRule getRule() { return rule; }

		//'[' cardinalityLeft=Cardinality (',' propertyLeft=[uml::Property])? ('|' cardinalityRight=Cardinality (','
		//propertyRight=[uml::Property])?)? ']'
		public Group getGroup() { return cGroup; }

		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//cardinalityLeft=Cardinality
		public Assignment getCardinalityLeftAssignment_1() { return cCardinalityLeftAssignment_1; }

		//Cardinality
		public RuleCall getCardinalityLeftCardinalityParserRuleCall_1_0() { return cCardinalityLeftCardinalityParserRuleCall_1_0; }

		//(',' propertyLeft=[uml::Property])?
		public Group getGroup_2() { return cGroup_2; }

		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//propertyLeft=[uml::Property]
		public Assignment getPropertyLeftAssignment_2_1() { return cPropertyLeftAssignment_2_1; }

		//[uml::Property]
		public CrossReference getPropertyLeftPropertyCrossReference_2_1_0() { return cPropertyLeftPropertyCrossReference_2_1_0; }

		//ID
		public RuleCall getPropertyLeftPropertyIDTerminalRuleCall_2_1_0_1() { return cPropertyLeftPropertyIDTerminalRuleCall_2_1_0_1; }

		//('|' cardinalityRight=Cardinality (',' propertyRight=[uml::Property])?)?
		public Group getGroup_3() { return cGroup_3; }

		//'|'
		public Keyword getVerticalLineKeyword_3_0() { return cVerticalLineKeyword_3_0; }

		//cardinalityRight=Cardinality
		public Assignment getCardinalityRightAssignment_3_1() { return cCardinalityRightAssignment_3_1; }

		//Cardinality
		public RuleCall getCardinalityRightCardinalityParserRuleCall_3_1_0() { return cCardinalityRightCardinalityParserRuleCall_3_1_0; }

		//(',' propertyRight=[uml::Property])?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//','
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//propertyRight=[uml::Property]
		public Assignment getPropertyRightAssignment_3_2_1() { return cPropertyRightAssignment_3_2_1; }

		//[uml::Property]
		public CrossReference getPropertyRightPropertyCrossReference_3_2_1_0() { return cPropertyRightPropertyCrossReference_3_2_1_0; }

		//ID
		public RuleCall getPropertyRightPropertyIDTerminalRuleCall_3_2_1_0_1() { return cPropertyRightPropertyIDTerminalRuleCall_3_2_1_0_1; }

		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class CardinalityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Cardinality");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLowerBoundAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cLowerBoundCardinalityBoundParserRuleCall_0_0 = (RuleCall)cLowerBoundAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cUpperBoundAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cUpperBoundCardinalityBoundParserRuleCall_1_1_0 = (RuleCall)cUpperBoundAssignment_1_1.eContents().get(0);
		
		//Cardinality:
		//	lowerBound=CardinalityBound ('..' upperBound=CardinalityBound)?;
		@Override public ParserRule getRule() { return rule; }

		//lowerBound=CardinalityBound ('..' upperBound=CardinalityBound)?
		public Group getGroup() { return cGroup; }

		//lowerBound=CardinalityBound
		public Assignment getLowerBoundAssignment_0() { return cLowerBoundAssignment_0; }

		//CardinalityBound
		public RuleCall getLowerBoundCardinalityBoundParserRuleCall_0_0() { return cLowerBoundCardinalityBoundParserRuleCall_0_0; }

		//('..' upperBound=CardinalityBound)?
		public Group getGroup_1() { return cGroup_1; }

		//'..'
		public Keyword getFullStopFullStopKeyword_1_0() { return cFullStopFullStopKeyword_1_0; }

		//upperBound=CardinalityBound
		public Assignment getUpperBoundAssignment_1_1() { return cUpperBoundAssignment_1_1; }

		//CardinalityBound
		public RuleCall getUpperBoundCardinalityBoundParserRuleCall_1_1_0() { return cUpperBoundCardinalityBoundParserRuleCall_1_1_0; }
	}

	public class CommentBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.CommentBody");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//CommentBody:
		//	STRING;
		@Override public ParserRule getRule() { return rule; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}

	public class CardinalityBoundElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.CardinalityBound");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAsteriskKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//CardinalityBound ecore::EInt:
		//	'*' | INT
		@Override public ParserRule getRule() { return rule; }

		//'*' | INT
		public Alternatives getAlternatives() { return cAlternatives; }

		//'*'
		public Keyword getAsteriskKeyword_0() { return cAsteriskKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	
	
	public class VisibilityElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Visibility");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPUBLICEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPUBLICPlusSignKeyword_0_0 = (Keyword)cPUBLICEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPUBLICEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPUBLICPublicKeyword_1_0 = (Keyword)cPUBLICEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPRIVATEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPRIVATEHyphenMinusKeyword_2_0 = (Keyword)cPRIVATEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPRIVATEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPRIVATEPrivateKeyword_3_0 = (Keyword)cPRIVATEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cPROTECTEDEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cPROTECTEDNumberSignKeyword_4_0 = (Keyword)cPROTECTEDEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cPROTECTEDEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cPROTECTEDProtectedKeyword_5_0 = (Keyword)cPROTECTEDEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cPACKAGEEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cPACKAGETildeKeyword_6_0 = (Keyword)cPACKAGEEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum Visibility:
		//	PUBLIC='+'
		//	| PUBLIC='public'
		//	| PRIVATE='-'
		//	| PRIVATE='private'
		//	| PROTECTED='#'
		//	| PROTECTED='protected'
		//	| PACKAGE='~';
		public EnumRule getRule() { return rule; }

		//PUBLIC='+' | PUBLIC='public' | PRIVATE='-' | PRIVATE='private' | PROTECTED='#' | PROTECTED='protected' | PACKAGE='~'
		public Alternatives getAlternatives() { return cAlternatives; }

		//PUBLIC='+'
		public EnumLiteralDeclaration getPUBLICEnumLiteralDeclaration_0() { return cPUBLICEnumLiteralDeclaration_0; }

		//'+'
		public Keyword getPUBLICPlusSignKeyword_0_0() { return cPUBLICPlusSignKeyword_0_0; }

		//PUBLIC='public'
		public EnumLiteralDeclaration getPUBLICEnumLiteralDeclaration_1() { return cPUBLICEnumLiteralDeclaration_1; }

		//'public'
		public Keyword getPUBLICPublicKeyword_1_0() { return cPUBLICPublicKeyword_1_0; }

		//PRIVATE='-'
		public EnumLiteralDeclaration getPRIVATEEnumLiteralDeclaration_2() { return cPRIVATEEnumLiteralDeclaration_2; }

		//'-'
		public Keyword getPRIVATEHyphenMinusKeyword_2_0() { return cPRIVATEHyphenMinusKeyword_2_0; }

		//PRIVATE='private'
		public EnumLiteralDeclaration getPRIVATEEnumLiteralDeclaration_3() { return cPRIVATEEnumLiteralDeclaration_3; }

		//'private'
		public Keyword getPRIVATEPrivateKeyword_3_0() { return cPRIVATEPrivateKeyword_3_0; }

		//PROTECTED='#'
		public EnumLiteralDeclaration getPROTECTEDEnumLiteralDeclaration_4() { return cPROTECTEDEnumLiteralDeclaration_4; }

		//'#'
		public Keyword getPROTECTEDNumberSignKeyword_4_0() { return cPROTECTEDNumberSignKeyword_4_0; }

		//PROTECTED='protected'
		public EnumLiteralDeclaration getPROTECTEDEnumLiteralDeclaration_5() { return cPROTECTEDEnumLiteralDeclaration_5; }

		//'protected'
		public Keyword getPROTECTEDProtectedKeyword_5_0() { return cPROTECTEDProtectedKeyword_5_0; }

		//PACKAGE='~'
		public EnumLiteralDeclaration getPACKAGEEnumLiteralDeclaration_6() { return cPACKAGEEnumLiteralDeclaration_6; }

		//'~'
		public Keyword getPACKAGETildeKeyword_6_0() { return cPACKAGETildeKeyword_6_0; }
	}

	public class PrimitiveTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.PrimitiveType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTRINGEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTRINGStringKeyword_0_0 = (Keyword)cSTRINGEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cINTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cINTIntKeyword_1_0 = (Keyword)cINTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDOUBLEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDOUBLEDoubleKeyword_2_0 = (Keyword)cDOUBLEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cBOOLEANEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cBOOLEANBooleanKeyword_3_0 = (Keyword)cBOOLEANEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cCHAREnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cCHARCharKeyword_4_0 = (Keyword)cCHAREnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cBYTEEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cBYTEByteKeyword_5_0 = (Keyword)cBYTEEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cSHORTEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cSHORTShortKeyword_6_0 = (Keyword)cSHORTEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cLONGEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cLONGLongKeyword_7_0 = (Keyword)cLONGEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cFLOATEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cFLOATFloatKeyword_8_0 = (Keyword)cFLOATEnumLiteralDeclaration_8.eContents().get(0);
		
		//enum PrimitiveType:
		//	STRING='string'
		//	| INT='int'
		//	| DOUBLE='double'
		//	| BOOLEAN='boolean'
		//	| CHAR='char'
		//	| BYTE='byte'
		//	| SHORT='short'
		//	| LONG='long'
		//	| FLOAT='float';
		public EnumRule getRule() { return rule; }

		//STRING='string' | INT='int' | DOUBLE='double' | BOOLEAN='boolean' | CHAR='char' | BYTE='byte' | SHORT='short' |
		//LONG='long' | FLOAT='float'
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING='string'
		public EnumLiteralDeclaration getSTRINGEnumLiteralDeclaration_0() { return cSTRINGEnumLiteralDeclaration_0; }

		//'string'
		public Keyword getSTRINGStringKeyword_0_0() { return cSTRINGStringKeyword_0_0; }

		//INT='int'
		public EnumLiteralDeclaration getINTEnumLiteralDeclaration_1() { return cINTEnumLiteralDeclaration_1; }

		//'int'
		public Keyword getINTIntKeyword_1_0() { return cINTIntKeyword_1_0; }

		//DOUBLE='double'
		public EnumLiteralDeclaration getDOUBLEEnumLiteralDeclaration_2() { return cDOUBLEEnumLiteralDeclaration_2; }

		//'double'
		public Keyword getDOUBLEDoubleKeyword_2_0() { return cDOUBLEDoubleKeyword_2_0; }

		//BOOLEAN='boolean'
		public EnumLiteralDeclaration getBOOLEANEnumLiteralDeclaration_3() { return cBOOLEANEnumLiteralDeclaration_3; }

		//'boolean'
		public Keyword getBOOLEANBooleanKeyword_3_0() { return cBOOLEANBooleanKeyword_3_0; }

		//CHAR='char'
		public EnumLiteralDeclaration getCHAREnumLiteralDeclaration_4() { return cCHAREnumLiteralDeclaration_4; }

		//'char'
		public Keyword getCHARCharKeyword_4_0() { return cCHARCharKeyword_4_0; }

		//BYTE='byte'
		public EnumLiteralDeclaration getBYTEEnumLiteralDeclaration_5() { return cBYTEEnumLiteralDeclaration_5; }

		//'byte'
		public Keyword getBYTEByteKeyword_5_0() { return cBYTEByteKeyword_5_0; }

		//SHORT='short'
		public EnumLiteralDeclaration getSHORTEnumLiteralDeclaration_6() { return cSHORTEnumLiteralDeclaration_6; }

		//'short'
		public Keyword getSHORTShortKeyword_6_0() { return cSHORTShortKeyword_6_0; }

		//LONG='long'
		public EnumLiteralDeclaration getLONGEnumLiteralDeclaration_7() { return cLONGEnumLiteralDeclaration_7; }

		//'long'
		public Keyword getLONGLongKeyword_7_0() { return cLONGLongKeyword_7_0; }

		//FLOAT='float'
		public EnumLiteralDeclaration getFLOATEnumLiteralDeclaration_8() { return cFLOATEnumLiteralDeclaration_8; }

		//'float'
		public Keyword getFLOATFloatKeyword_8_0() { return cFLOATFloatKeyword_8_0; }
	}

	public class AggregationKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.AggregationKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNONEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNONEAscKeyword_0_0 = (Keyword)cNONEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAGGREGATIONEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAGGREGATIONAggKeyword_1_0 = (Keyword)cAGGREGATIONEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCOMPOSITIONEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCOMPOSITIONComKeyword_2_0 = (Keyword)cCOMPOSITIONEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum AggregationKind:
		//	NONE='asc'
		//	| AGGREGATION='agg'
		//	| COMPOSITION='com';
		public EnumRule getRule() { return rule; }

		//NONE='asc' | AGGREGATION='agg' | COMPOSITION='com'
		public Alternatives getAlternatives() { return cAlternatives; }

		//NONE='asc'
		public EnumLiteralDeclaration getNONEEnumLiteralDeclaration_0() { return cNONEEnumLiteralDeclaration_0; }

		//'asc'
		public Keyword getNONEAscKeyword_0_0() { return cNONEAscKeyword_0_0; }

		//AGGREGATION='agg'
		public EnumLiteralDeclaration getAGGREGATIONEnumLiteralDeclaration_1() { return cAGGREGATIONEnumLiteralDeclaration_1; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.28/@alternatives/@elements.1/@literal'
		public Keyword getAGGREGATIONAggKeyword_1_0() { return cAGGREGATIONAggKeyword_1_0; }

		//org.eclipse.xtext.resource.ClasspathUriResolutionException: org.eclipse.xtext.resource.FileNotFoundOnClasspathException: Couldn't find resource on classpath. URI was 'classpath:/de/cooperateproject/modeling/textual/cls/Cls.xtext#/0/@rules.28/@alternatives/@elements.2'
		public EnumLiteralDeclaration getCOMPOSITIONEnumLiteralDeclaration_2() { return cCOMPOSITIONEnumLiteralDeclaration_2; }

		//'com'
		public Keyword getCOMPOSITIONComKeyword_2_0() { return cCOMPOSITIONComKeyword_2_0; }
	}
	
	private final ClassDiagramElements pClassDiagram;
	private final RootPackageElements pRootPackage;
	private final PackageElements pPackage;
	private final PackageImportElements pPackageImport;
	private final FQNElements pFQN;
	private final ClassifierElements pClassifier;
	private final ClassElements pClass;
	private final InterfaceElements pInterface;
	private final TypeReferenceElements pTypeReference;
	private final DataTypeReferenceElements pDataTypeReference;
	private final UMLTypeReferenceElements pUMLTypeReference;
	private final MemberElements pMember;
	private final AttributeElements pAttribute;
	private final MethodElements pMethod;
	private final ParameterElements pParameter;
	private final ConnectorElements pConnector;
	private final GeneralizationElements pGeneralization;
	private final ImplementationElements pImplementation;
	private final CommentLinkElements pCommentLink;
	private final AssociationElements pAssociation;
	private final MultiAssociationElements pMultiAssociation;
	private final MemberEndElements pMemberEnd;
	private final AssociationPropertiesElements pAssociationProperties;
	private final CardinalityElements pCardinality;
	private final CommentBodyElements pCommentBody;
	private final CardinalityBoundElements pCardinalityBound;
	private final VisibilityElements eVisibility;
	private final PrimitiveTypeElements ePrimitiveType;
	private final AggregationKindElements eAggregationKind;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ClsGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pClassDiagram = new ClassDiagramElements();
		this.pRootPackage = new RootPackageElements();
		this.pPackage = new PackageElements();
		this.pPackageImport = new PackageImportElements();
		this.pFQN = new FQNElements();
		this.pClassifier = new ClassifierElements();
		this.pClass = new ClassElements();
		this.pInterface = new InterfaceElements();
		this.pTypeReference = new TypeReferenceElements();
		this.pDataTypeReference = new DataTypeReferenceElements();
		this.pUMLTypeReference = new UMLTypeReferenceElements();
		this.pMember = new MemberElements();
		this.pAttribute = new AttributeElements();
		this.pMethod = new MethodElements();
		this.pParameter = new ParameterElements();
		this.pConnector = new ConnectorElements();
		this.pGeneralization = new GeneralizationElements();
		this.pImplementation = new ImplementationElements();
		this.pCommentLink = new CommentLinkElements();
		this.pAssociation = new AssociationElements();
		this.pMultiAssociation = new MultiAssociationElements();
		this.pMemberEnd = new MemberEndElements();
		this.pAssociationProperties = new AssociationPropertiesElements();
		this.pCardinality = new CardinalityElements();
		this.pCommentBody = new CommentBodyElements();
		this.pCardinalityBound = new CardinalityBoundElements();
		this.eVisibility = new VisibilityElements();
		this.ePrimitiveType = new PrimitiveTypeElements();
		this.eAggregationKind = new AggregationKindElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.cooperateproject.modeling.textual.cls.Cls".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//// ------------------------------------------------------------------------------------------
	//// ---------------------------------Root-----------------------------------------------------
	//// ------------------------------------------------------------------------------------------
	//ClassDiagram:
	//	{ClassDiagram}
	//	'@startclass' title=STRING
	//	rootPackage=RootPackage
	//	'@endclass';
	public ClassDiagramElements getClassDiagramAccess() {
		return pClassDiagram;
	}
	
	public ParserRule getClassDiagramRule() {
		return getClassDiagramAccess().getRule();
	}

	//RootPackage Package:
	//	'rootPackage' referencedElement=[uml::Package|FQN] packageImports+=PackageImport*
	//	classifiers+=Classifier*
	//	connectors+=Connector*
	//	packages+=Package*
	public RootPackageElements getRootPackageAccess() {
		return pRootPackage;
	}
	
	public ParserRule getRootPackageRule() {
		return getRootPackageAccess().getRule();
	}

	//Package:
	//	'package' referencedElement=[uml::Package|FQN] '{'
	//	packageImports+=PackageImport*
	//	classifiers+=Classifier*
	//	connectors+=Connector*
	//	packages+=Package*
	//	'}';
	public PackageElements getPackageAccess() {
		return pPackage;
	}
	
	public ParserRule getPackageRule() {
		return getPackageAccess().getRule();
	}

	//PackageImport:
	//	"import" referencedElement=[uml::PackageImport|FQN];
	public PackageImportElements getPackageImportAccess() {
		return pPackageImport;
	}
	
	public ParserRule getPackageImportRule() {
		return getPackageImportAccess().getRule();
	}

	//FQN:
	//	ID ("." ID)*;
	public FQNElements getFQNAccess() {
		return pFQN;
	}
	
	public ParserRule getFQNRule() {
		return getFQNAccess().getRule();
	}

	//// ------------------------------------------------------------------------------------------
	//// ---------------------------------Class Diagram--------------------------------------------
	//// ------------------------------------------------------------------------------------------
	//Classifier:
	//	Class | Interface;
	public ClassifierElements getClassifierAccess() {
		return pClassifier;
	}
	
	public ParserRule getClassifierRule() {
		return getClassifierAccess().getRule();
	}

	//Class:
	//	visibility=Visibility? abstract?='abstract'? 'class' referencedElement=[uml::Class] ('as'
	//	aliasExpression=[uml::StringExpression])? ('{' members+=Member* '}')?;
	public ClassElements getClassAccess() {
		return pClass;
	}
	
	public ParserRule getClassRule() {
		return getClassAccess().getRule();
	}

	//Interface:
	//	visibility=Visibility? 'interface' referencedElement=[uml::Interface] ('as' aliasExpression=[uml::StringExpression])?
	//	('{' members+=Member* '}')?;
	public InterfaceElements getInterfaceAccess() {
		return pInterface;
	}
	
	public ParserRule getInterfaceRule() {
		return getInterfaceAccess().getRule();
	}

	//TypeReference:
	//	DataTypeReference | UMLTypeReference;
	public TypeReferenceElements getTypeReferenceAccess() {
		return pTypeReference;
	}
	
	public ParserRule getTypeReferenceRule() {
		return getTypeReferenceAccess().getRule();
	}

	//DataTypeReference:
	//	type=PrimitiveType;
	public DataTypeReferenceElements getDataTypeReferenceAccess() {
		return pDataTypeReference;
	}
	
	public ParserRule getDataTypeReferenceRule() {
		return getDataTypeReferenceAccess().getRule();
	}

	//UMLTypeReference:
	//	type=[uml::Type|FQN];
	public UMLTypeReferenceElements getUMLTypeReferenceAccess() {
		return pUMLTypeReference;
	}
	
	public ParserRule getUMLTypeReferenceRule() {
		return getUMLTypeReferenceAccess().getRule();
	}

	//Member:
	//	Attribute
	//	| Method;
	public MemberElements getMemberAccess() {
		return pMember;
	}
	
	public ParserRule getMemberRule() {
		return getMemberAccess().getRule();
	}

	//Attribute:
	//	{Attribute} visibility=Visibility?
	//	static?='static'?
	//	final?='final'?
	//	referencedElement=[uml::Property] ':' type=TypeReference;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}

	//Method:
	//	visibility=Visibility?
	//	abstract?='abstract'?
	//	static?='static'?
	//	final?='final'?
	//	referencedElement=[uml::Operation] '(' (parameters+=Parameter (',' parameters+=Parameter)*)* ')' (':'
	//	type=TypeReference)?;
	public MethodElements getMethodAccess() {
		return pMethod;
	}
	
	public ParserRule getMethodRule() {
		return getMethodAccess().getRule();
	}

	//Parameter:
	//	visibility=Visibility?
	//	static?='static'?
	//	final?='final'?
	//	referencedElement=[uml::Parameter] ':' type=TypeReference;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}

	//Connector:
	//	Generalization
	//	| Association
	//	| Implementation
	//	| CommentLink
	//	| MultiAssociation;
	public ConnectorElements getConnectorAccess() {
		return pConnector;
	}
	
	public ParserRule getConnectorRule() {
		return getConnectorAccess().getRule();
	}

	//Generalization:
	//	left=UMLTypeReference 'isa' right=UMLTypeReference;
	public GeneralizationElements getGeneralizationAccess() {
		return pGeneralization;
	}
	
	public ParserRule getGeneralizationRule() {
		return getGeneralizationAccess().getRule();
	}

	//Implementation:
	//	left=UMLTypeReference 'impl' right=UMLTypeReference;
	public ImplementationElements getImplementationAccess() {
		return pImplementation;
	}
	
	public ParserRule getImplementationRule() {
		return getImplementationAccess().getRule();
	}

	//CommentLink:
	//	left=UMLTypeReference 'note' comment=[uml::Comment|CommentBody];
	public CommentLinkElements getCommentLinkAccess() {
		return pCommentLink;
	}
	
	public ParserRule getCommentLinkRule() {
		return getCommentLinkAccess().getRule();
	}

	//Association:
	//	bidirectional?='bi'? aggregationKind=AggregationKind left=UMLTypeReference referencedElement=[uml::Association]
	//	right=UMLTypeReference
	//	properties=AssociationProperties? ('note' comment=[uml::Comment|CommentBody])?;
	public AssociationElements getAssociationAccess() {
		return pAssociation;
	}
	
	public ParserRule getAssociationRule() {
		return getAssociationAccess().getRule();
	}

	//MultiAssociation:
	//	'asc' referencedElement=[uml::Association] '{' (connectorEnds+=MemberEnd ';')+ '}';
	public MultiAssociationElements getMultiAssociationAccess() {
		return pMultiAssociation;
	}
	
	public ParserRule getMultiAssociationRule() {
		return getMultiAssociationAccess().getRule();
	}

	//MemberEnd:
	//	type=UMLTypeReference referencedElement=[uml::Property]? cardinality=Cardinality? navigable?='<'?;
	public MemberEndElements getMemberEndAccess() {
		return pMemberEnd;
	}
	
	public ParserRule getMemberEndRule() {
		return getMemberEndAccess().getRule();
	}

	//AssociationProperties:
	//	'[' cardinalityLeft=Cardinality (',' propertyLeft=[uml::Property])? ('|' cardinalityRight=Cardinality (','
	//	propertyRight=[uml::Property])?)? ']';
	public AssociationPropertiesElements getAssociationPropertiesAccess() {
		return pAssociationProperties;
	}
	
	public ParserRule getAssociationPropertiesRule() {
		return getAssociationPropertiesAccess().getRule();
	}

	//Cardinality:
	//	lowerBound=CardinalityBound ('..' upperBound=CardinalityBound)?;
	public CardinalityElements getCardinalityAccess() {
		return pCardinality;
	}
	
	public ParserRule getCardinalityRule() {
		return getCardinalityAccess().getRule();
	}

	//CommentBody:
	//	STRING;
	public CommentBodyElements getCommentBodyAccess() {
		return pCommentBody;
	}
	
	public ParserRule getCommentBodyRule() {
		return getCommentBodyAccess().getRule();
	}

	//CardinalityBound ecore::EInt:
	//	'*' | INT
	public CardinalityBoundElements getCardinalityBoundAccess() {
		return pCardinalityBound;
	}
	
	public ParserRule getCardinalityBoundRule() {
		return getCardinalityBoundAccess().getRule();
	}

	//enum Visibility:
	//	PUBLIC='+'
	//	| PUBLIC='public'
	//	| PRIVATE='-'
	//	| PRIVATE='private'
	//	| PROTECTED='#'
	//	| PROTECTED='protected'
	//	| PACKAGE='~';
	public VisibilityElements getVisibilityAccess() {
		return eVisibility;
	}
	
	public EnumRule getVisibilityRule() {
		return getVisibilityAccess().getRule();
	}

	//enum PrimitiveType:
	//	STRING='string'
	//	| INT='int'
	//	| DOUBLE='double'
	//	| BOOLEAN='boolean'
	//	| CHAR='char'
	//	| BYTE='byte'
	//	| SHORT='short'
	//	| LONG='long'
	//	| FLOAT='float';
	public PrimitiveTypeElements getPrimitiveTypeAccess() {
		return ePrimitiveType;
	}
	
	public EnumRule getPrimitiveTypeRule() {
		return getPrimitiveTypeAccess().getRule();
	}

	//enum AggregationKind:
	//	NONE='asc'
	//	| AGGREGATION='agg'
	//	| COMPOSITION='com';
	public AggregationKindElements getAggregationKindAccess() {
		return eAggregationKind;
	}
	
	public EnumRule getAggregationKindRule() {
		return getAggregationKindAccess().getRule();
	}

	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
