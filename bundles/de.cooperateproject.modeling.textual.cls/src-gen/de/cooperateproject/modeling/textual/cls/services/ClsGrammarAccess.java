/*
 * generated by Xtext 2.12.0
 */
package de.cooperateproject.modeling.textual.cls.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ClsGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ClassDiagramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.ClassDiagram");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClassDiagramAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStartClsdKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTitleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTitleSTRINGTerminalRuleCall_2_0 = (RuleCall)cTitleAssignment_2.eContents().get(0);
		private final Assignment cRootPackageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRootPackageRootPackageParserRuleCall_3_0 = (RuleCall)cRootPackageAssignment_3.eContents().get(0);
		private final Keyword cEndClsdKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//// ------------------------------------------------------------------------------------------
		//
		//// ---------------------------------Root-----------------------------------------------------
		//
		//// ------------------------------------------------------------------------------------------
		// ClassDiagram:
		//	{ClassDiagram} '@start-clsd' title=STRING rootPackage=RootPackage '@end-clsd';
		@Override public ParserRule getRule() { return rule; }
		
		//{ClassDiagram} '@start-clsd' title=STRING rootPackage=RootPackage '@end-clsd'
		public Group getGroup() { return cGroup; }
		
		//{ClassDiagram}
		public Action getClassDiagramAction_0() { return cClassDiagramAction_0; }
		
		//'@start-clsd'
		public Keyword getStartClsdKeyword_1() { return cStartClsdKeyword_1; }
		
		//title=STRING
		public Assignment getTitleAssignment_2() { return cTitleAssignment_2; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_2_0() { return cTitleSTRINGTerminalRuleCall_2_0; }
		
		//rootPackage=RootPackage
		public Assignment getRootPackageAssignment_3() { return cRootPackageAssignment_3; }
		
		//RootPackage
		public RuleCall getRootPackageRootPackageParserRuleCall_3_0() { return cRootPackageRootPackageParserRuleCall_3_0; }
		
		//'@end-clsd'
		public Keyword getEndClsdKeyword_4() { return cEndClsdKeyword_4; }
	}
	public class RootPackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.RootPackage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRootPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameFQNParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cPackageImportsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPackageImportsPackageImportParserRuleCall_2_0 = (RuleCall)cPackageImportsAssignment_2.eContents().get(0);
		private final Assignment cClassifiersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cClassifiersClassifierParserRuleCall_3_0 = (RuleCall)cClassifiersAssignment_3.eContents().get(0);
		private final Assignment cConnectorsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cConnectorsConnectorParserRuleCall_4_0 = (RuleCall)cConnectorsAssignment_4.eContents().get(0);
		private final Assignment cPackagesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPackagesPackageParserRuleCall_5_0 = (RuleCall)cPackagesAssignment_5.eContents().get(0);
		
		//RootPackage Package:
		//	'rootPackage' name=FQN packageImports+=PackageImport* classifiers+=Classifier* connectors+=Connector*
		//	packages+=Package*;
		@Override public ParserRule getRule() { return rule; }
		
		//'rootPackage' name=FQN packageImports+=PackageImport* classifiers+=Classifier* connectors+=Connector* packages+=Package*
		public Group getGroup() { return cGroup; }
		
		//'rootPackage'
		public Keyword getRootPackageKeyword_0() { return cRootPackageKeyword_0; }
		
		//name=FQN
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//FQN
		public RuleCall getNameFQNParserRuleCall_1_0() { return cNameFQNParserRuleCall_1_0; }
		
		//packageImports+=PackageImport*
		public Assignment getPackageImportsAssignment_2() { return cPackageImportsAssignment_2; }
		
		//PackageImport
		public RuleCall getPackageImportsPackageImportParserRuleCall_2_0() { return cPackageImportsPackageImportParserRuleCall_2_0; }
		
		//classifiers+=Classifier*
		public Assignment getClassifiersAssignment_3() { return cClassifiersAssignment_3; }
		
		//Classifier
		public RuleCall getClassifiersClassifierParserRuleCall_3_0() { return cClassifiersClassifierParserRuleCall_3_0; }
		
		//connectors+=Connector*
		public Assignment getConnectorsAssignment_4() { return cConnectorsAssignment_4; }
		
		//Connector
		public RuleCall getConnectorsConnectorParserRuleCall_4_0() { return cConnectorsConnectorParserRuleCall_4_0; }
		
		//packages+=Package*
		public Assignment getPackagesAssignment_5() { return cPackagesAssignment_5; }
		
		//Package
		public RuleCall getPackagesPackageParserRuleCall_5_0() { return cPackagesPackageParserRuleCall_5_0; }
	}
	public class PackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Package");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameFQNParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cAppliedStereotypesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAppliedStereotypesStereotypeApplicationParserRuleCall_2_0 = (RuleCall)cAppliedStereotypesAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPackageImportsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPackageImportsPackageImportParserRuleCall_4_0 = (RuleCall)cPackageImportsAssignment_4.eContents().get(0);
		private final Assignment cClassifiersAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cClassifiersClassifierParserRuleCall_5_0 = (RuleCall)cClassifiersAssignment_5.eContents().get(0);
		private final Assignment cConnectorsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cConnectorsConnectorParserRuleCall_6_0 = (RuleCall)cConnectorsAssignment_6.eContents().get(0);
		private final Assignment cPackagesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPackagesPackageParserRuleCall_7_0 = (RuleCall)cPackagesAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Package:
		//	'package' name=FQN appliedStereotypes+=StereotypeApplication* '{' packageImports+=PackageImport*
		//	classifiers+=Classifier* connectors+=Connector* packages+=Package* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'package' name=FQN appliedStereotypes+=StereotypeApplication* '{' packageImports+=PackageImport*
		//classifiers+=Classifier* connectors+=Connector* packages+=Package* '}'
		public Group getGroup() { return cGroup; }
		
		//'package'
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }
		
		//name=FQN
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//FQN
		public RuleCall getNameFQNParserRuleCall_1_0() { return cNameFQNParserRuleCall_1_0; }
		
		//appliedStereotypes+=StereotypeApplication*
		public Assignment getAppliedStereotypesAssignment_2() { return cAppliedStereotypesAssignment_2; }
		
		//StereotypeApplication
		public RuleCall getAppliedStereotypesStereotypeApplicationParserRuleCall_2_0() { return cAppliedStereotypesStereotypeApplicationParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//packageImports+=PackageImport*
		public Assignment getPackageImportsAssignment_4() { return cPackageImportsAssignment_4; }
		
		//PackageImport
		public RuleCall getPackageImportsPackageImportParserRuleCall_4_0() { return cPackageImportsPackageImportParserRuleCall_4_0; }
		
		//classifiers+=Classifier*
		public Assignment getClassifiersAssignment_5() { return cClassifiersAssignment_5; }
		
		//Classifier
		public RuleCall getClassifiersClassifierParserRuleCall_5_0() { return cClassifiersClassifierParserRuleCall_5_0; }
		
		//connectors+=Connector*
		public Assignment getConnectorsAssignment_6() { return cConnectorsAssignment_6; }
		
		//Connector
		public RuleCall getConnectorsConnectorParserRuleCall_6_0() { return cConnectorsConnectorParserRuleCall_6_0; }
		
		//packages+=Package*
		public Assignment getPackagesAssignment_7() { return cPackagesAssignment_7; }
		
		//Package
		public RuleCall getPackagesPackageParserRuleCall_7_0() { return cPackagesPackageParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class PackageImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.PackageImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedPackageAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cImportedPackagePackageCrossReference_1_0 = (CrossReference)cImportedPackageAssignment_1.eContents().get(0);
		private final RuleCall cImportedPackagePackageFQNParserRuleCall_1_0_1 = (RuleCall)cImportedPackagePackageCrossReference_1_0.eContents().get(1);
		
		//PackageImport commons::PackageImport:
		//	"import" importedPackage=[uml::Package|FQN];
		@Override public ParserRule getRule() { return rule; }
		
		//"import" importedPackage=[uml::Package|FQN]
		public Group getGroup() { return cGroup; }
		
		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }
		
		//importedPackage=[uml::Package|FQN]
		public Assignment getImportedPackageAssignment_1() { return cImportedPackageAssignment_1; }
		
		//[uml::Package|FQN]
		public CrossReference getImportedPackagePackageCrossReference_1_0() { return cImportedPackagePackageCrossReference_1_0; }
		
		//FQN
		public RuleCall getImportedPackagePackageFQNParserRuleCall_1_0_1() { return cImportedPackagePackageFQNParserRuleCall_1_0_1; }
	}
	public class NameStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.NameString");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//NameString:
		//	STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	public class FQNElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.FQN");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//FQN:
		//	ID ("." ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ("." ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class ClassifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Classifier");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cInterfaceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// ------------------------------------------------------------------------------------------
		//
		//// ---------------------------------Class Diagram--------------------------------------------
		//
		//// ------------------------------------------------------------------------------------------
		// Classifier:
		//	Class | Interface;
		@Override public ParserRule getRule() { return rule; }
		
		//Class | Interface
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Class
		public RuleCall getClassParserRuleCall_0() { return cClassParserRuleCall_0; }
		
		//Interface
		public RuleCall getInterfaceParserRuleCall_1() { return cInterfaceParserRuleCall_1; }
	}
	public class ClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Class");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Assignment cAbstractAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cAbstractAbstractKeyword_1_0 = (Keyword)cAbstractAssignment_1.eContents().get(0);
		private final Keyword cClassKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cNameAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0_0_0 = (RuleCall)cNameAssignment_3_0_0.eContents().get(0);
		private final Keyword cAsKeyword_3_0_1 = (Keyword)cGroup_3_0.eContents().get(1);
		private final Assignment cAliasAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cAliasIDTerminalRuleCall_3_0_2_0 = (RuleCall)cAliasAssignment_3_0_2.eContents().get(0);
		private final Assignment cNameAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_3_1_0 = (RuleCall)cNameAssignment_3_1.eContents().get(0);
		private final Assignment cAppliedStereotypesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAppliedStereotypesStereotypeApplicationParserRuleCall_4_0 = (RuleCall)cAppliedStereotypesAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cCommentsAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cCommentsCommentParserRuleCall_5_0_0 = (RuleCall)cCommentsAssignment_5_0.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cCommentsAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cCommentsCommentParserRuleCall_5_1_1_0 = (RuleCall)cCommentsAssignment_5_1_1.eContents().get(0);
		private final Assignment cMembersAssignment_5_1_2 = (Assignment)cGroup_5_1.eContents().get(2);
		private final RuleCall cMembersMemberParserRuleCall_5_1_2_0 = (RuleCall)cMembersAssignment_5_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_1_3 = (Keyword)cGroup_5_1.eContents().get(3);
		
		//Class:
		//	visibility=Visibility? abstract?='abstract'? 'class' (name=STRING 'as' alias=ID | name=ID)
		//	appliedStereotypes+=StereotypeApplication* (comments+=Comment? | '{' comments+=Comment? members+=Member* '}');
		@Override public ParserRule getRule() { return rule; }
		
		//visibility=Visibility? abstract?='abstract'? 'class' (name=STRING 'as' alias=ID | name=ID)
		//appliedStereotypes+=StereotypeApplication* (comments+=Comment? | '{' comments+=Comment? members+=Member* '}')
		public Group getGroup() { return cGroup; }
		
		//visibility=Visibility?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }
		
		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_0_0() { return cVisibilityVisibilityEnumRuleCall_0_0; }
		
		//abstract?='abstract'?
		public Assignment getAbstractAssignment_1() { return cAbstractAssignment_1; }
		
		//'abstract'
		public Keyword getAbstractAbstractKeyword_1_0() { return cAbstractAbstractKeyword_1_0; }
		
		//'class'
		public Keyword getClassKeyword_2() { return cClassKeyword_2; }
		
		//name=STRING 'as' alias=ID | name=ID
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//name=STRING 'as' alias=ID
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//name=STRING
		public Assignment getNameAssignment_3_0_0() { return cNameAssignment_3_0_0; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0_0_0() { return cNameSTRINGTerminalRuleCall_3_0_0_0; }
		
		//'as'
		public Keyword getAsKeyword_3_0_1() { return cAsKeyword_3_0_1; }
		
		//alias=ID
		public Assignment getAliasAssignment_3_0_2() { return cAliasAssignment_3_0_2; }
		
		//ID
		public RuleCall getAliasIDTerminalRuleCall_3_0_2_0() { return cAliasIDTerminalRuleCall_3_0_2_0; }
		
		//name=ID
		public Assignment getNameAssignment_3_1() { return cNameAssignment_3_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_1_0() { return cNameIDTerminalRuleCall_3_1_0; }
		
		//appliedStereotypes+=StereotypeApplication*
		public Assignment getAppliedStereotypesAssignment_4() { return cAppliedStereotypesAssignment_4; }
		
		//StereotypeApplication
		public RuleCall getAppliedStereotypesStereotypeApplicationParserRuleCall_4_0() { return cAppliedStereotypesStereotypeApplicationParserRuleCall_4_0; }
		
		//comments+=Comment? | '{' comments+=Comment? members+=Member* '}'
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//comments+=Comment?
		public Assignment getCommentsAssignment_5_0() { return cCommentsAssignment_5_0; }
		
		//Comment
		public RuleCall getCommentsCommentParserRuleCall_5_0_0() { return cCommentsCommentParserRuleCall_5_0_0; }
		
		//'{' comments+=Comment? members+=Member* '}'
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1_0() { return cLeftCurlyBracketKeyword_5_1_0; }
		
		//comments+=Comment?
		public Assignment getCommentsAssignment_5_1_1() { return cCommentsAssignment_5_1_1; }
		
		//Comment
		public RuleCall getCommentsCommentParserRuleCall_5_1_1_0() { return cCommentsCommentParserRuleCall_5_1_1_0; }
		
		//members+=Member*
		public Assignment getMembersAssignment_5_1_2() { return cMembersAssignment_5_1_2; }
		
		//Member
		public RuleCall getMembersMemberParserRuleCall_5_1_2_0() { return cMembersMemberParserRuleCall_5_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_1_3() { return cRightCurlyBracketKeyword_5_1_3; }
	}
	public class InterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Interface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cInterfaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cNameAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0_0_0 = (RuleCall)cNameAssignment_2_0_0.eContents().get(0);
		private final Keyword cAsKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Assignment cAliasAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final RuleCall cAliasIDTerminalRuleCall_2_0_2_0 = (RuleCall)cAliasAssignment_2_0_2.eContents().get(0);
		private final Assignment cNameAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_2_1_0 = (RuleCall)cNameAssignment_2_1.eContents().get(0);
		private final Assignment cAppliedStereotypesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAppliedStereotypesStereotypeApplicationParserRuleCall_3_0 = (RuleCall)cAppliedStereotypesAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cCommentsAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cCommentsCommentParserRuleCall_4_0_0 = (RuleCall)cCommentsAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cCommentsAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cCommentsCommentParserRuleCall_4_1_1_0 = (RuleCall)cCommentsAssignment_4_1_1.eContents().get(0);
		private final Assignment cMembersAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cMembersMemberParserRuleCall_4_1_2_0 = (RuleCall)cMembersAssignment_4_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		
		//Interface:
		//	visibility=Visibility? 'interface' (name=STRING 'as' alias=ID | name=ID) appliedStereotypes+=StereotypeApplication*
		//	(comments+=Comment? | '{' comments+=Comment? members+=Member* '}');
		@Override public ParserRule getRule() { return rule; }
		
		//visibility=Visibility? 'interface' (name=STRING 'as' alias=ID | name=ID) appliedStereotypes+=StereotypeApplication*
		//(comments+=Comment? | '{' comments+=Comment? members+=Member* '}')
		public Group getGroup() { return cGroup; }
		
		//visibility=Visibility?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }
		
		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_0_0() { return cVisibilityVisibilityEnumRuleCall_0_0; }
		
		//'interface'
		public Keyword getInterfaceKeyword_1() { return cInterfaceKeyword_1; }
		
		//name=STRING 'as' alias=ID | name=ID
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//name=STRING 'as' alias=ID
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//name=STRING
		public Assignment getNameAssignment_2_0_0() { return cNameAssignment_2_0_0; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0_0_0() { return cNameSTRINGTerminalRuleCall_2_0_0_0; }
		
		//'as'
		public Keyword getAsKeyword_2_0_1() { return cAsKeyword_2_0_1; }
		
		//alias=ID
		public Assignment getAliasAssignment_2_0_2() { return cAliasAssignment_2_0_2; }
		
		//ID
		public RuleCall getAliasIDTerminalRuleCall_2_0_2_0() { return cAliasIDTerminalRuleCall_2_0_2_0; }
		
		//name=ID
		public Assignment getNameAssignment_2_1() { return cNameAssignment_2_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_1_0() { return cNameIDTerminalRuleCall_2_1_0; }
		
		//appliedStereotypes+=StereotypeApplication*
		public Assignment getAppliedStereotypesAssignment_3() { return cAppliedStereotypesAssignment_3; }
		
		//StereotypeApplication
		public RuleCall getAppliedStereotypesStereotypeApplicationParserRuleCall_3_0() { return cAppliedStereotypesStereotypeApplicationParserRuleCall_3_0; }
		
		//comments+=Comment? | '{' comments+=Comment? members+=Member* '}'
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//comments+=Comment?
		public Assignment getCommentsAssignment_4_0() { return cCommentsAssignment_4_0; }
		
		//Comment
		public RuleCall getCommentsCommentParserRuleCall_4_0_0() { return cCommentsCommentParserRuleCall_4_0_0; }
		
		//'{' comments+=Comment? members+=Member* '}'
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1_0() { return cLeftCurlyBracketKeyword_4_1_0; }
		
		//comments+=Comment?
		public Assignment getCommentsAssignment_4_1_1() { return cCommentsAssignment_4_1_1; }
		
		//Comment
		public RuleCall getCommentsCommentParserRuleCall_4_1_1_0() { return cCommentsCommentParserRuleCall_4_1_1_0; }
		
		//members+=Member*
		public Assignment getMembersAssignment_4_1_2() { return cMembersAssignment_4_1_2; }
		
		//Member
		public RuleCall getMembersMemberParserRuleCall_4_1_2_0() { return cMembersMemberParserRuleCall_4_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_1_3() { return cRightCurlyBracketKeyword_4_1_3; }
	}
	public class MemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Member");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMethodParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Member:
		//	Attribute | Method;
		@Override public ParserRule getRule() { return rule; }
		
		//Attribute | Method
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Attribute
		public RuleCall getAttributeParserRuleCall_0() { return cAttributeParserRuleCall_0; }
		
		//Method
		public RuleCall getMethodParserRuleCall_1() { return cMethodParserRuleCall_1; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAttributeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Assignment cStaticAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cStaticStaticKeyword_2_0 = (Keyword)cStaticAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cTypeClassifierCrossReference_5_0 = (CrossReference)cTypeAssignment_5.eContents().get(0);
		private final RuleCall cTypeClassifierFQNParserRuleCall_5_0_1 = (RuleCall)cTypeClassifierCrossReference_5_0.eContents().get(1);
		private final Assignment cAppliedStereotypesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAppliedStereotypesStereotypeApplicationParserRuleCall_6_0 = (RuleCall)cAppliedStereotypesAssignment_6.eContents().get(0);
		
		//Attribute:
		//	{Attribute} visibility=Visibility? static?='static'? name=ID ':' type=[uml::Classifier|FQN]
		//	appliedStereotypes+=StereotypeApplication*;
		@Override public ParserRule getRule() { return rule; }
		
		//{Attribute} visibility=Visibility? static?='static'? name=ID ':' type=[uml::Classifier|FQN]
		//appliedStereotypes+=StereotypeApplication*
		public Group getGroup() { return cGroup; }
		
		//{Attribute}
		public Action getAttributeAction_0() { return cAttributeAction_0; }
		
		//visibility=Visibility?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_1_0() { return cVisibilityVisibilityEnumRuleCall_1_0; }
		
		//static?='static'?
		public Assignment getStaticAssignment_2() { return cStaticAssignment_2; }
		
		//'static'
		public Keyword getStaticStaticKeyword_2_0() { return cStaticStaticKeyword_2_0; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//type=[uml::Classifier|FQN]
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }
		
		//[uml::Classifier|FQN]
		public CrossReference getTypeClassifierCrossReference_5_0() { return cTypeClassifierCrossReference_5_0; }
		
		//FQN
		public RuleCall getTypeClassifierFQNParserRuleCall_5_0_1() { return cTypeClassifierFQNParserRuleCall_5_0_1; }
		
		//appliedStereotypes+=StereotypeApplication*
		public Assignment getAppliedStereotypesAssignment_6() { return cAppliedStereotypesAssignment_6; }
		
		//StereotypeApplication
		public RuleCall getAppliedStereotypesStereotypeApplicationParserRuleCall_6_0() { return cAppliedStereotypesStereotypeApplicationParserRuleCall_6_0; }
	}
	public class MethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Method");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Assignment cAbstractAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cAbstractAbstractKeyword_1_0 = (Keyword)cAbstractAssignment_1.eContents().get(0);
		private final Assignment cStaticAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cStaticStaticKeyword_2_0 = (Keyword)cStaticAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Assignment cAppliedStereotypesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAppliedStereotypesStereotypeApplicationParserRuleCall_4_0 = (RuleCall)cAppliedStereotypesAssignment_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cParametersAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cParametersParameterParserRuleCall_6_0_0 = (RuleCall)cParametersAssignment_6_0.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Keyword cCommaKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cParametersAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_1_1_0 = (RuleCall)cParametersAssignment_6_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cTypeAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cTypeClassifierCrossReference_8_1_0 = (CrossReference)cTypeAssignment_8_1.eContents().get(0);
		private final RuleCall cTypeClassifierFQNParserRuleCall_8_1_0_1 = (RuleCall)cTypeClassifierCrossReference_8_1_0.eContents().get(1);
		
		//Method:
		//	visibility=Visibility? abstract?='abstract'? static?='static'? name=ID appliedStereotypes+=StereotypeApplication* '('
		//	(parameters+=Parameter (',' parameters+=Parameter)*)* ')' (':' type=[uml::Classifier|FQN])?;
		@Override public ParserRule getRule() { return rule; }
		
		//visibility=Visibility? abstract?='abstract'? static?='static'? name=ID appliedStereotypes+=StereotypeApplication* '('
		//(parameters+=Parameter (',' parameters+=Parameter)*)* ')' (':' type=[uml::Classifier|FQN])?
		public Group getGroup() { return cGroup; }
		
		//visibility=Visibility?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }
		
		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_0_0() { return cVisibilityVisibilityEnumRuleCall_0_0; }
		
		//abstract?='abstract'?
		public Assignment getAbstractAssignment_1() { return cAbstractAssignment_1; }
		
		//'abstract'
		public Keyword getAbstractAbstractKeyword_1_0() { return cAbstractAbstractKeyword_1_0; }
		
		//static?='static'?
		public Assignment getStaticAssignment_2() { return cStaticAssignment_2; }
		
		//'static'
		public Keyword getStaticStaticKeyword_2_0() { return cStaticStaticKeyword_2_0; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//appliedStereotypes+=StereotypeApplication*
		public Assignment getAppliedStereotypesAssignment_4() { return cAppliedStereotypesAssignment_4; }
		
		//StereotypeApplication
		public RuleCall getAppliedStereotypesStereotypeApplicationParserRuleCall_4_0() { return cAppliedStereotypesStereotypeApplicationParserRuleCall_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }
		
		//(parameters+=Parameter (',' parameters+=Parameter)*)*
		public Group getGroup_6() { return cGroup_6; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_0() { return cParametersAssignment_6_0; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_0_0() { return cParametersParameterParserRuleCall_6_0_0; }
		
		//(',' parameters+=Parameter)*
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//','
		public Keyword getCommaKeyword_6_1_0() { return cCommaKeyword_6_1_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_1_1() { return cParametersAssignment_6_1_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_1_1_0() { return cParametersParameterParserRuleCall_6_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//(':' type=[uml::Classifier|FQN])?
		public Group getGroup_8() { return cGroup_8; }
		
		//':'
		public Keyword getColonKeyword_8_0() { return cColonKeyword_8_0; }
		
		//type=[uml::Classifier|FQN]
		public Assignment getTypeAssignment_8_1() { return cTypeAssignment_8_1; }
		
		//[uml::Classifier|FQN]
		public CrossReference getTypeClassifierCrossReference_8_1_0() { return cTypeClassifierCrossReference_8_1_0; }
		
		//FQN
		public RuleCall getTypeClassifierFQNParserRuleCall_8_1_0_1() { return cTypeClassifierFQNParserRuleCall_8_1_0_1; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Assignment cAppliedStereotypesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAppliedStereotypesStereotypeApplicationParserRuleCall_1_0 = (RuleCall)cAppliedStereotypesAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTypeClassifierCrossReference_4_0 = (CrossReference)cTypeAssignment_4.eContents().get(0);
		private final RuleCall cTypeClassifierFQNParserRuleCall_4_0_1 = (RuleCall)cTypeClassifierCrossReference_4_0.eContents().get(1);
		
		//Parameter:
		//	visibility=Visibility? appliedStereotypes+=StereotypeApplication* name=ID ':' type=[uml::Classifier|FQN];
		@Override public ParserRule getRule() { return rule; }
		
		//visibility=Visibility? appliedStereotypes+=StereotypeApplication* name=ID ':' type=[uml::Classifier|FQN]
		public Group getGroup() { return cGroup; }
		
		//visibility=Visibility?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }
		
		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_0_0() { return cVisibilityVisibilityEnumRuleCall_0_0; }
		
		//appliedStereotypes+=StereotypeApplication*
		public Assignment getAppliedStereotypesAssignment_1() { return cAppliedStereotypesAssignment_1; }
		
		//StereotypeApplication
		public RuleCall getAppliedStereotypesStereotypeApplicationParserRuleCall_1_0() { return cAppliedStereotypesStereotypeApplicationParserRuleCall_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//type=[uml::Classifier|FQN]
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//[uml::Classifier|FQN]
		public CrossReference getTypeClassifierCrossReference_4_0() { return cTypeClassifierCrossReference_4_0; }
		
		//FQN
		public RuleCall getTypeClassifierFQNParserRuleCall_4_0_1() { return cTypeClassifierFQNParserRuleCall_4_0_1; }
	}
	public class ConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Connector");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGeneralizationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cXtextAssociationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cImplementationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Connector:
		//	Generalization | XtextAssociation | Implementation;
		@Override public ParserRule getRule() { return rule; }
		
		//Generalization | XtextAssociation | Implementation
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Generalization
		public RuleCall getGeneralizationParserRuleCall_0() { return cGeneralizationParserRuleCall_0; }
		
		//XtextAssociation
		public RuleCall getXtextAssociationParserRuleCall_1() { return cXtextAssociationParserRuleCall_1; }
		
		//Implementation
		public RuleCall getImplementationParserRuleCall_2() { return cImplementationParserRuleCall_2; }
	}
	public class GeneralizationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Generalization");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIsaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLeftAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cLeftClassifierCrossReference_2_0 = (CrossReference)cLeftAssignment_2.eContents().get(0);
		private final RuleCall cLeftClassifierFQNParserRuleCall_2_0_1 = (RuleCall)cLeftClassifierCrossReference_2_0.eContents().get(1);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRightAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cRightClassifierCrossReference_4_0 = (CrossReference)cRightAssignment_4.eContents().get(0);
		private final RuleCall cRightClassifierFQNParserRuleCall_4_0_1 = (RuleCall)cRightClassifierCrossReference_4_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Generalization:
		//	'isa' '(' left=[Classifier|FQN] ',' right=[Classifier|FQN] ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'isa' '(' left=[Classifier|FQN] ',' right=[Classifier|FQN] ')'
		public Group getGroup() { return cGroup; }
		
		//'isa'
		public Keyword getIsaKeyword_0() { return cIsaKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//left=[Classifier|FQN]
		public Assignment getLeftAssignment_2() { return cLeftAssignment_2; }
		
		//[Classifier|FQN]
		public CrossReference getLeftClassifierCrossReference_2_0() { return cLeftClassifierCrossReference_2_0; }
		
		//FQN
		public RuleCall getLeftClassifierFQNParserRuleCall_2_0_1() { return cLeftClassifierFQNParserRuleCall_2_0_1; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//right=[Classifier|FQN]
		public Assignment getRightAssignment_4() { return cRightAssignment_4; }
		
		//[Classifier|FQN]
		public CrossReference getRightClassifierCrossReference_4_0() { return cRightClassifierCrossReference_4_0; }
		
		//FQN
		public RuleCall getRightClassifierFQNParserRuleCall_4_0_1() { return cRightClassifierFQNParserRuleCall_4_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class ImplementationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Implementation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImplKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLeftAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cLeftClassifierCrossReference_2_0 = (CrossReference)cLeftAssignment_2.eContents().get(0);
		private final RuleCall cLeftClassifierFQNParserRuleCall_2_0_1 = (RuleCall)cLeftClassifierCrossReference_2_0.eContents().get(1);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRightAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cRightClassifierCrossReference_4_0 = (CrossReference)cRightAssignment_4.eContents().get(0);
		private final RuleCall cRightClassifierFQNParserRuleCall_4_0_1 = (RuleCall)cRightClassifierCrossReference_4_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Implementation:
		//	'impl' '(' left=[Classifier|FQN] ',' right=[Classifier|FQN] ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'impl' '(' left=[Classifier|FQN] ',' right=[Classifier|FQN] ')'
		public Group getGroup() { return cGroup; }
		
		//'impl'
		public Keyword getImplKeyword_0() { return cImplKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//left=[Classifier|FQN]
		public Assignment getLeftAssignment_2() { return cLeftAssignment_2; }
		
		//[Classifier|FQN]
		public CrossReference getLeftClassifierCrossReference_2_0() { return cLeftClassifierCrossReference_2_0; }
		
		//FQN
		public RuleCall getLeftClassifierFQNParserRuleCall_2_0_1() { return cLeftClassifierFQNParserRuleCall_2_0_1; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//right=[Classifier|FQN]
		public Assignment getRightAssignment_4() { return cRightAssignment_4; }
		
		//[Classifier|FQN]
		public CrossReference getRightClassifierCrossReference_4_0() { return cRightClassifierCrossReference_4_0; }
		
		//FQN
		public RuleCall getRightClassifierFQNParserRuleCall_4_0_1() { return cRightClassifierFQNParserRuleCall_4_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class XtextAssociationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.XtextAssociation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTwoSideBidirectionalityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTwoSideBidirectionalityBiKeyword_0_0 = (Keyword)cTwoSideBidirectionalityAssignment_0.eContents().get(0);
		private final Assignment cTwoSideAggregationKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTwoSideAggregationKindAggregationKindEnumRuleCall_1_0 = (RuleCall)cTwoSideAggregationKindAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cAppliedStereotypesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAppliedStereotypesStereotypeApplicationParserRuleCall_3_0 = (RuleCall)cAppliedStereotypesAssignment_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cMemberEndTypesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cMemberEndTypesXtextAssociationMemberEndReferencedTypeParserRuleCall_5_0 = (RuleCall)cMemberEndTypesAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cMemberEndTypesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cMemberEndTypesXtextAssociationMemberEndReferencedTypeParserRuleCall_6_1_0 = (RuleCall)cMemberEndTypesAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cRoleKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cMemberEndNamesAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cMemberEndNamesRoleNameParserRuleCall_8_2_0 = (RuleCall)cMemberEndNamesAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cMemberEndNamesAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cMemberEndNamesRoleNameParserRuleCall_8_3_1_0 = (RuleCall)cMemberEndNamesAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCardKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cMemberEndCardinalitiesAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cMemberEndCardinalitiesCardinalityParserRuleCall_9_2_0 = (RuleCall)cMemberEndCardinalitiesAssignment_9_2.eContents().get(0);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cColonKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cMemberEndCardinalitiesAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final RuleCall cMemberEndCardinalitiesCardinalityParserRuleCall_9_3_1_0 = (RuleCall)cMemberEndCardinalitiesAssignment_9_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Assignment cCommentsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cCommentsCommentParserRuleCall_10_0 = (RuleCall)cCommentsAssignment_10.eContents().get(0);
		
		//XtextAssociation:
		//	twoSideBidirectionality?='bi'? twoSideAggregationKind=AggregationKind name=ID
		//	appliedStereotypes+=StereotypeApplication* '(' memberEndTypes+=XtextAssociationMemberEndReferencedType (','
		//	memberEndTypes+=XtextAssociationMemberEndReferencedType)* ')' ('role' '[' memberEndNames+=RoleName (','
		//	memberEndNames+=RoleName)* ']')? ('card' '[' memberEndCardinalities+=Cardinality (':'
		//	memberEndCardinalities+=Cardinality)* ']')? comments+=Comment?;
		@Override public ParserRule getRule() { return rule; }
		
		//twoSideBidirectionality?='bi'? twoSideAggregationKind=AggregationKind name=ID appliedStereotypes+=StereotypeApplication*
		//'(' memberEndTypes+=XtextAssociationMemberEndReferencedType (','
		//memberEndTypes+=XtextAssociationMemberEndReferencedType)* ')' ('role' '[' memberEndNames+=RoleName (','
		//memberEndNames+=RoleName)* ']')? ('card' '[' memberEndCardinalities+=Cardinality (':'
		//memberEndCardinalities+=Cardinality)* ']')? comments+=Comment?
		public Group getGroup() { return cGroup; }
		
		//twoSideBidirectionality?='bi'?
		public Assignment getTwoSideBidirectionalityAssignment_0() { return cTwoSideBidirectionalityAssignment_0; }
		
		//'bi'
		public Keyword getTwoSideBidirectionalityBiKeyword_0_0() { return cTwoSideBidirectionalityBiKeyword_0_0; }
		
		//twoSideAggregationKind=AggregationKind
		public Assignment getTwoSideAggregationKindAssignment_1() { return cTwoSideAggregationKindAssignment_1; }
		
		//AggregationKind
		public RuleCall getTwoSideAggregationKindAggregationKindEnumRuleCall_1_0() { return cTwoSideAggregationKindAggregationKindEnumRuleCall_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//appliedStereotypes+=StereotypeApplication*
		public Assignment getAppliedStereotypesAssignment_3() { return cAppliedStereotypesAssignment_3; }
		
		//StereotypeApplication
		public RuleCall getAppliedStereotypesStereotypeApplicationParserRuleCall_3_0() { return cAppliedStereotypesStereotypeApplicationParserRuleCall_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//memberEndTypes+=XtextAssociationMemberEndReferencedType
		public Assignment getMemberEndTypesAssignment_5() { return cMemberEndTypesAssignment_5; }
		
		//XtextAssociationMemberEndReferencedType
		public RuleCall getMemberEndTypesXtextAssociationMemberEndReferencedTypeParserRuleCall_5_0() { return cMemberEndTypesXtextAssociationMemberEndReferencedTypeParserRuleCall_5_0; }
		
		//(',' memberEndTypes+=XtextAssociationMemberEndReferencedType)*
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//memberEndTypes+=XtextAssociationMemberEndReferencedType
		public Assignment getMemberEndTypesAssignment_6_1() { return cMemberEndTypesAssignment_6_1; }
		
		//XtextAssociationMemberEndReferencedType
		public RuleCall getMemberEndTypesXtextAssociationMemberEndReferencedTypeParserRuleCall_6_1_0() { return cMemberEndTypesXtextAssociationMemberEndReferencedTypeParserRuleCall_6_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//('role' '[' memberEndNames+=RoleName (',' memberEndNames+=RoleName)* ']')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'role'
		public Keyword getRoleKeyword_8_0() { return cRoleKeyword_8_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_8_1() { return cLeftSquareBracketKeyword_8_1; }
		
		//memberEndNames+=RoleName
		public Assignment getMemberEndNamesAssignment_8_2() { return cMemberEndNamesAssignment_8_2; }
		
		//RoleName
		public RuleCall getMemberEndNamesRoleNameParserRuleCall_8_2_0() { return cMemberEndNamesRoleNameParserRuleCall_8_2_0; }
		
		//(',' memberEndNames+=RoleName)*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//','
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//memberEndNames+=RoleName
		public Assignment getMemberEndNamesAssignment_8_3_1() { return cMemberEndNamesAssignment_8_3_1; }
		
		//RoleName
		public RuleCall getMemberEndNamesRoleNameParserRuleCall_8_3_1_0() { return cMemberEndNamesRoleNameParserRuleCall_8_3_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_8_4() { return cRightSquareBracketKeyword_8_4; }
		
		//('card' '[' memberEndCardinalities+=Cardinality (':' memberEndCardinalities+=Cardinality)* ']')?
		public Group getGroup_9() { return cGroup_9; }
		
		//'card'
		public Keyword getCardKeyword_9_0() { return cCardKeyword_9_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_9_1() { return cLeftSquareBracketKeyword_9_1; }
		
		//memberEndCardinalities+=Cardinality
		public Assignment getMemberEndCardinalitiesAssignment_9_2() { return cMemberEndCardinalitiesAssignment_9_2; }
		
		//Cardinality
		public RuleCall getMemberEndCardinalitiesCardinalityParserRuleCall_9_2_0() { return cMemberEndCardinalitiesCardinalityParserRuleCall_9_2_0; }
		
		//(':' memberEndCardinalities+=Cardinality)*
		public Group getGroup_9_3() { return cGroup_9_3; }
		
		//':'
		public Keyword getColonKeyword_9_3_0() { return cColonKeyword_9_3_0; }
		
		//memberEndCardinalities+=Cardinality
		public Assignment getMemberEndCardinalitiesAssignment_9_3_1() { return cMemberEndCardinalitiesAssignment_9_3_1; }
		
		//Cardinality
		public RuleCall getMemberEndCardinalitiesCardinalityParserRuleCall_9_3_1_0() { return cMemberEndCardinalitiesCardinalityParserRuleCall_9_3_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_9_4() { return cRightSquareBracketKeyword_9_4; }
		
		//comments+=Comment?
		public Assignment getCommentsAssignment_10() { return cCommentsAssignment_10; }
		
		//Comment
		public RuleCall getCommentsCommentParserRuleCall_10_0() { return cCommentsCommentParserRuleCall_10_0; }
	}
	public class XtextAssociationMemberEndReferencedTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.XtextAssociationMemberEndReferencedType");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeClassifierCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeClassifierFQNParserRuleCall_0_1 = (RuleCall)cTypeClassifierCrossReference_0.eContents().get(1);
		
		//XtextAssociationMemberEndReferencedType:
		//	type=[Classifier|FQN];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[Classifier|FQN]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[Classifier|FQN]
		public CrossReference getTypeClassifierCrossReference_0() { return cTypeClassifierCrossReference_0; }
		
		//FQN
		public RuleCall getTypeClassifierFQNParserRuleCall_0_1() { return cTypeClassifierFQNParserRuleCall_0_1; }
	}
	public class CommentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Comment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNoteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cBodyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cBodyCommentBodyParserRuleCall_1_0 = (RuleCall)cBodyAssignment_1.eContents().get(0);
		
		//Comment commons::Comment:
		//	'note' body=CommentBody;
		@Override public ParserRule getRule() { return rule; }
		
		//'note' body=CommentBody
		public Group getGroup() { return cGroup; }
		
		//'note'
		public Keyword getNoteKeyword_0() { return cNoteKeyword_0; }
		
		//body=CommentBody
		public Assignment getBodyAssignment_1() { return cBodyAssignment_1; }
		
		//CommentBody
		public RuleCall getBodyCommentBodyParserRuleCall_1_0() { return cBodyCommentBodyParserRuleCall_1_0; }
	}
	public class CardinalityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Cardinality");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLowerBoundAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cLowerBoundCardinalityBoundParserRuleCall_0_0 = (RuleCall)cLowerBoundAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cUpperBoundAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cUpperBoundCardinalityBoundParserRuleCall_1_1_0 = (RuleCall)cUpperBoundAssignment_1_1.eContents().get(0);
		
		//Cardinality commons::Cardinality:
		//	lowerBound=CardinalityBound ('..' upperBound=CardinalityBound)?;
		@Override public ParserRule getRule() { return rule; }
		
		//lowerBound=CardinalityBound ('..' upperBound=CardinalityBound)?
		public Group getGroup() { return cGroup; }
		
		//lowerBound=CardinalityBound
		public Assignment getLowerBoundAssignment_0() { return cLowerBoundAssignment_0; }
		
		//CardinalityBound
		public RuleCall getLowerBoundCardinalityBoundParserRuleCall_0_0() { return cLowerBoundCardinalityBoundParserRuleCall_0_0; }
		
		//('..' upperBound=CardinalityBound)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_1_0() { return cFullStopFullStopKeyword_1_0; }
		
		//upperBound=CardinalityBound
		public Assignment getUpperBoundAssignment_1_1() { return cUpperBoundAssignment_1_1; }
		
		//CardinalityBound
		public RuleCall getUpperBoundCardinalityBoundParserRuleCall_1_1_0() { return cUpperBoundCardinalityBoundParserRuleCall_1_1_0; }
	}
	public class CommentBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.CommentBody");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//CommentBody:
		//	STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	public class CardinalityBoundElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.CardinalityBound");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAsteriskKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//CardinalityBound ecore::EInt:
		//	'*' | INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'*' | INT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'*'
		public Keyword getAsteriskKeyword_0() { return cAsteriskKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class StereotypeApplicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.StereotypeApplication");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSTEREOTYPE_OTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cStereotypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cStereotypeStereotypeCrossReference_1_0 = (CrossReference)cStereotypeAssignment_1.eContents().get(0);
		private final RuleCall cStereotypeStereotypeFQNParserRuleCall_1_0_1 = (RuleCall)cStereotypeStereotypeCrossReference_1_0.eContents().get(1);
		private final RuleCall cSTEREOTYPE_CTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesTaggedValueParserRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cValuesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cValuesTaggedValueParserRuleCall_3_2_1_0 = (RuleCall)cValuesAssignment_3_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//StereotypeApplication commons::StereotypeApplication:
		//	STEREOTYPE_O stereotype=[uml::Stereotype|FQN] STEREOTYPE_C ('{' values+=TaggedValue (',' values+=TaggedValue)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//STEREOTYPE_O stereotype=[uml::Stereotype|FQN] STEREOTYPE_C ('{' values+=TaggedValue (',' values+=TaggedValue)* '}')?
		public Group getGroup() { return cGroup; }
		
		//STEREOTYPE_O
		public RuleCall getSTEREOTYPE_OTerminalRuleCall_0() { return cSTEREOTYPE_OTerminalRuleCall_0; }
		
		//stereotype=[uml::Stereotype|FQN]
		public Assignment getStereotypeAssignment_1() { return cStereotypeAssignment_1; }
		
		//[uml::Stereotype|FQN]
		public CrossReference getStereotypeStereotypeCrossReference_1_0() { return cStereotypeStereotypeCrossReference_1_0; }
		
		//FQN
		public RuleCall getStereotypeStereotypeFQNParserRuleCall_1_0_1() { return cStereotypeStereotypeFQNParserRuleCall_1_0_1; }
		
		//STEREOTYPE_C
		public RuleCall getSTEREOTYPE_CTerminalRuleCall_2() { return cSTEREOTYPE_CTerminalRuleCall_2; }
		
		//('{' values+=TaggedValue (',' values+=TaggedValue)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }
		
		//values+=TaggedValue
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }
		
		//TaggedValue
		public RuleCall getValuesTaggedValueParserRuleCall_3_1_0() { return cValuesTaggedValueParserRuleCall_3_1_0; }
		
		//(',' values+=TaggedValue)*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//','
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//values+=TaggedValue
		public Assignment getValuesAssignment_3_2_1() { return cValuesAssignment_3_2_1; }
		
		//TaggedValue
		public RuleCall getValuesTaggedValueParserRuleCall_3_2_1_0() { return cValuesTaggedValueParserRuleCall_3_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }
	}
	public class TaggedValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.TaggedValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//TaggedValue commons::TaggedValue:
		//	name=STRING ':' value=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//name=STRING ':' value=STRING
		public Group getGroup() { return cGroup; }
		
		//name=STRING
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0_0() { return cNameSTRINGTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//value=STRING
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0() { return cValueSTRINGTerminalRuleCall_2_0; }
	}
	public class RoleNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.RoleName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUNDERSCORETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RoleName:
		//	ID | UNDERSCORE;
		@Override public ParserRule getRule() { return rule; }
		
		//ID | UNDERSCORE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//UNDERSCORE
		public RuleCall getUNDERSCORETerminalRuleCall_1() { return cUNDERSCORETerminalRuleCall_1; }
	}
	
	public class VisibilityElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.Visibility");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPlusSignKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPublicPublicKeyword_1_0 = (Keyword)cPublicEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPrivateHyphenMinusKeyword_2_0 = (Keyword)cPrivateEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPrivatePrivateKeyword_3_0 = (Keyword)cPrivateEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cProtectedEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cProtectedNumberSignKeyword_4_0 = (Keyword)cProtectedEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cProtectedEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cProtectedProtectedKeyword_5_0 = (Keyword)cProtectedEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cPackageEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cPackageTildeKeyword_6_0 = (Keyword)cPackageEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum Visibility returns uml::VisibilityKind:
		//	public='+' | public | private='-' | private | protected='#' | protected | package='~';
		public EnumRule getRule() { return rule; }
		
		//public='+' | public | private='-' | private | protected='#' | protected | package='~'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//public='+'
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }
		
		//'+'
		public Keyword getPublicPlusSignKeyword_0_0() { return cPublicPlusSignKeyword_0_0; }
		
		//public
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_1() { return cPublicEnumLiteralDeclaration_1; }
		
		//'public'
		public Keyword getPublicPublicKeyword_1_0() { return cPublicPublicKeyword_1_0; }
		
		//private='-'
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_2() { return cPrivateEnumLiteralDeclaration_2; }
		
		//'-'
		public Keyword getPrivateHyphenMinusKeyword_2_0() { return cPrivateHyphenMinusKeyword_2_0; }
		
		//private
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_3() { return cPrivateEnumLiteralDeclaration_3; }
		
		//'private'
		public Keyword getPrivatePrivateKeyword_3_0() { return cPrivatePrivateKeyword_3_0; }
		
		//protected='#'
		public EnumLiteralDeclaration getProtectedEnumLiteralDeclaration_4() { return cProtectedEnumLiteralDeclaration_4; }
		
		//'#'
		public Keyword getProtectedNumberSignKeyword_4_0() { return cProtectedNumberSignKeyword_4_0; }
		
		//protected
		public EnumLiteralDeclaration getProtectedEnumLiteralDeclaration_5() { return cProtectedEnumLiteralDeclaration_5; }
		
		//'protected'
		public Keyword getProtectedProtectedKeyword_5_0() { return cProtectedProtectedKeyword_5_0; }
		
		//package='~'
		public EnumLiteralDeclaration getPackageEnumLiteralDeclaration_6() { return cPackageEnumLiteralDeclaration_6; }
		
		//'~'
		public Keyword getPackageTildeKeyword_6_0() { return cPackageTildeKeyword_6_0; }
	}
	public class AggregationKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.AggregationKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNONEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNONEAscKeyword_0_0 = (Keyword)cNONEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAGGREGATIONEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAGGREGATIONAggKeyword_1_0 = (Keyword)cAGGREGATIONEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCOMPOSITIONEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCOMPOSITIONComKeyword_2_0 = (Keyword)cCOMPOSITIONEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum AggregationKind:
		//	NONE='asc' | AGGREGATION='agg' | COMPOSITION='com';
		public EnumRule getRule() { return rule; }
		
		//NONE='asc' | AGGREGATION='agg' | COMPOSITION='com'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NONE='asc'
		public EnumLiteralDeclaration getNONEEnumLiteralDeclaration_0() { return cNONEEnumLiteralDeclaration_0; }
		
		//'asc'
		public Keyword getNONEAscKeyword_0_0() { return cNONEAscKeyword_0_0; }
		
		//AGGREGATION='agg'
		public EnumLiteralDeclaration getAGGREGATIONEnumLiteralDeclaration_1() { return cAGGREGATIONEnumLiteralDeclaration_1; }
		
		//'agg'
		public Keyword getAGGREGATIONAggKeyword_1_0() { return cAGGREGATIONAggKeyword_1_0; }
		
		//COMPOSITION='com'
		public EnumLiteralDeclaration getCOMPOSITIONEnumLiteralDeclaration_2() { return cCOMPOSITIONEnumLiteralDeclaration_2; }
		
		//'com'
		public Keyword getCOMPOSITIONComKeyword_2_0() { return cCOMPOSITIONComKeyword_2_0; }
	}
	
	private final ClassDiagramElements pClassDiagram;
	private final RootPackageElements pRootPackage;
	private final PackageElements pPackage;
	private final PackageImportElements pPackageImport;
	private final NameStringElements pNameString;
	private final FQNElements pFQN;
	private final ClassifierElements pClassifier;
	private final ClassElements pClass;
	private final InterfaceElements pInterface;
	private final MemberElements pMember;
	private final AttributeElements pAttribute;
	private final MethodElements pMethod;
	private final ParameterElements pParameter;
	private final ConnectorElements pConnector;
	private final GeneralizationElements pGeneralization;
	private final ImplementationElements pImplementation;
	private final XtextAssociationElements pXtextAssociation;
	private final XtextAssociationMemberEndReferencedTypeElements pXtextAssociationMemberEndReferencedType;
	private final CommentElements pComment;
	private final CardinalityElements pCardinality;
	private final CommentBodyElements pCommentBody;
	private final CardinalityBoundElements pCardinalityBound;
	private final StereotypeApplicationElements pStereotypeApplication;
	private final TaggedValueElements pTaggedValue;
	private final VisibilityElements eVisibility;
	private final AggregationKindElements eAggregationKind;
	private final RoleNameElements pRoleName;
	private final TerminalRule tID;
	private final TerminalRule tUNDERSCORE;
	private final TerminalRule tSTEREOTYPE_O;
	private final TerminalRule tSTEREOTYPE_C;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ClsGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pClassDiagram = new ClassDiagramElements();
		this.pRootPackage = new RootPackageElements();
		this.pPackage = new PackageElements();
		this.pPackageImport = new PackageImportElements();
		this.pNameString = new NameStringElements();
		this.pFQN = new FQNElements();
		this.pClassifier = new ClassifierElements();
		this.pClass = new ClassElements();
		this.pInterface = new InterfaceElements();
		this.pMember = new MemberElements();
		this.pAttribute = new AttributeElements();
		this.pMethod = new MethodElements();
		this.pParameter = new ParameterElements();
		this.pConnector = new ConnectorElements();
		this.pGeneralization = new GeneralizationElements();
		this.pImplementation = new ImplementationElements();
		this.pXtextAssociation = new XtextAssociationElements();
		this.pXtextAssociationMemberEndReferencedType = new XtextAssociationMemberEndReferencedTypeElements();
		this.pComment = new CommentElements();
		this.pCardinality = new CardinalityElements();
		this.pCommentBody = new CommentBodyElements();
		this.pCardinalityBound = new CardinalityBoundElements();
		this.pStereotypeApplication = new StereotypeApplicationElements();
		this.pTaggedValue = new TaggedValueElements();
		this.eVisibility = new VisibilityElements();
		this.eAggregationKind = new AggregationKindElements();
		this.pRoleName = new RoleNameElements();
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.ID");
		this.tUNDERSCORE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.UNDERSCORE");
		this.tSTEREOTYPE_O = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.STEREOTYPE_O");
		this.tSTEREOTYPE_C = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.cooperateproject.modeling.textual.cls.Cls.STEREOTYPE_C");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.cooperateproject.modeling.textual.cls.Cls".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//// ------------------------------------------------------------------------------------------
	//
	//// ---------------------------------Root-----------------------------------------------------
	//
	//// ------------------------------------------------------------------------------------------
	// ClassDiagram:
	//	{ClassDiagram} '@start-clsd' title=STRING rootPackage=RootPackage '@end-clsd';
	public ClassDiagramElements getClassDiagramAccess() {
		return pClassDiagram;
	}
	
	public ParserRule getClassDiagramRule() {
		return getClassDiagramAccess().getRule();
	}
	
	//RootPackage Package:
	//	'rootPackage' name=FQN packageImports+=PackageImport* classifiers+=Classifier* connectors+=Connector*
	//	packages+=Package*;
	public RootPackageElements getRootPackageAccess() {
		return pRootPackage;
	}
	
	public ParserRule getRootPackageRule() {
		return getRootPackageAccess().getRule();
	}
	
	//Package:
	//	'package' name=FQN appliedStereotypes+=StereotypeApplication* '{' packageImports+=PackageImport*
	//	classifiers+=Classifier* connectors+=Connector* packages+=Package* '}';
	public PackageElements getPackageAccess() {
		return pPackage;
	}
	
	public ParserRule getPackageRule() {
		return getPackageAccess().getRule();
	}
	
	//PackageImport commons::PackageImport:
	//	"import" importedPackage=[uml::Package|FQN];
	public PackageImportElements getPackageImportAccess() {
		return pPackageImport;
	}
	
	public ParserRule getPackageImportRule() {
		return getPackageImportAccess().getRule();
	}
	
	//NameString:
	//	STRING;
	public NameStringElements getNameStringAccess() {
		return pNameString;
	}
	
	public ParserRule getNameStringRule() {
		return getNameStringAccess().getRule();
	}
	
	//FQN:
	//	ID ("." ID)*;
	public FQNElements getFQNAccess() {
		return pFQN;
	}
	
	public ParserRule getFQNRule() {
		return getFQNAccess().getRule();
	}
	
	//// ------------------------------------------------------------------------------------------
	//
	//// ---------------------------------Class Diagram--------------------------------------------
	//
	//// ------------------------------------------------------------------------------------------
	// Classifier:
	//	Class | Interface;
	public ClassifierElements getClassifierAccess() {
		return pClassifier;
	}
	
	public ParserRule getClassifierRule() {
		return getClassifierAccess().getRule();
	}
	
	//Class:
	//	visibility=Visibility? abstract?='abstract'? 'class' (name=STRING 'as' alias=ID | name=ID)
	//	appliedStereotypes+=StereotypeApplication* (comments+=Comment? | '{' comments+=Comment? members+=Member* '}');
	public ClassElements getClassAccess() {
		return pClass;
	}
	
	public ParserRule getClassRule() {
		return getClassAccess().getRule();
	}
	
	//Interface:
	//	visibility=Visibility? 'interface' (name=STRING 'as' alias=ID | name=ID) appliedStereotypes+=StereotypeApplication*
	//	(comments+=Comment? | '{' comments+=Comment? members+=Member* '}');
	public InterfaceElements getInterfaceAccess() {
		return pInterface;
	}
	
	public ParserRule getInterfaceRule() {
		return getInterfaceAccess().getRule();
	}
	
	//Member:
	//	Attribute | Method;
	public MemberElements getMemberAccess() {
		return pMember;
	}
	
	public ParserRule getMemberRule() {
		return getMemberAccess().getRule();
	}
	
	//Attribute:
	//	{Attribute} visibility=Visibility? static?='static'? name=ID ':' type=[uml::Classifier|FQN]
	//	appliedStereotypes+=StereotypeApplication*;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//Method:
	//	visibility=Visibility? abstract?='abstract'? static?='static'? name=ID appliedStereotypes+=StereotypeApplication* '('
	//	(parameters+=Parameter (',' parameters+=Parameter)*)* ')' (':' type=[uml::Classifier|FQN])?;
	public MethodElements getMethodAccess() {
		return pMethod;
	}
	
	public ParserRule getMethodRule() {
		return getMethodAccess().getRule();
	}
	
	//Parameter:
	//	visibility=Visibility? appliedStereotypes+=StereotypeApplication* name=ID ':' type=[uml::Classifier|FQN];
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//Connector:
	//	Generalization | XtextAssociation | Implementation;
	public ConnectorElements getConnectorAccess() {
		return pConnector;
	}
	
	public ParserRule getConnectorRule() {
		return getConnectorAccess().getRule();
	}
	
	//Generalization:
	//	'isa' '(' left=[Classifier|FQN] ',' right=[Classifier|FQN] ')';
	public GeneralizationElements getGeneralizationAccess() {
		return pGeneralization;
	}
	
	public ParserRule getGeneralizationRule() {
		return getGeneralizationAccess().getRule();
	}
	
	//Implementation:
	//	'impl' '(' left=[Classifier|FQN] ',' right=[Classifier|FQN] ')';
	public ImplementationElements getImplementationAccess() {
		return pImplementation;
	}
	
	public ParserRule getImplementationRule() {
		return getImplementationAccess().getRule();
	}
	
	//XtextAssociation:
	//	twoSideBidirectionality?='bi'? twoSideAggregationKind=AggregationKind name=ID
	//	appliedStereotypes+=StereotypeApplication* '(' memberEndTypes+=XtextAssociationMemberEndReferencedType (','
	//	memberEndTypes+=XtextAssociationMemberEndReferencedType)* ')' ('role' '[' memberEndNames+=RoleName (','
	//	memberEndNames+=RoleName)* ']')? ('card' '[' memberEndCardinalities+=Cardinality (':'
	//	memberEndCardinalities+=Cardinality)* ']')? comments+=Comment?;
	public XtextAssociationElements getXtextAssociationAccess() {
		return pXtextAssociation;
	}
	
	public ParserRule getXtextAssociationRule() {
		return getXtextAssociationAccess().getRule();
	}
	
	//XtextAssociationMemberEndReferencedType:
	//	type=[Classifier|FQN];
	public XtextAssociationMemberEndReferencedTypeElements getXtextAssociationMemberEndReferencedTypeAccess() {
		return pXtextAssociationMemberEndReferencedType;
	}
	
	public ParserRule getXtextAssociationMemberEndReferencedTypeRule() {
		return getXtextAssociationMemberEndReferencedTypeAccess().getRule();
	}
	
	//Comment commons::Comment:
	//	'note' body=CommentBody;
	public CommentElements getCommentAccess() {
		return pComment;
	}
	
	public ParserRule getCommentRule() {
		return getCommentAccess().getRule();
	}
	
	//Cardinality commons::Cardinality:
	//	lowerBound=CardinalityBound ('..' upperBound=CardinalityBound)?;
	public CardinalityElements getCardinalityAccess() {
		return pCardinality;
	}
	
	public ParserRule getCardinalityRule() {
		return getCardinalityAccess().getRule();
	}
	
	//CommentBody:
	//	STRING;
	public CommentBodyElements getCommentBodyAccess() {
		return pCommentBody;
	}
	
	public ParserRule getCommentBodyRule() {
		return getCommentBodyAccess().getRule();
	}
	
	//CardinalityBound ecore::EInt:
	//	'*' | INT;
	public CardinalityBoundElements getCardinalityBoundAccess() {
		return pCardinalityBound;
	}
	
	public ParserRule getCardinalityBoundRule() {
		return getCardinalityBoundAccess().getRule();
	}
	
	//StereotypeApplication commons::StereotypeApplication:
	//	STEREOTYPE_O stereotype=[uml::Stereotype|FQN] STEREOTYPE_C ('{' values+=TaggedValue (',' values+=TaggedValue)* '}')?;
	public StereotypeApplicationElements getStereotypeApplicationAccess() {
		return pStereotypeApplication;
	}
	
	public ParserRule getStereotypeApplicationRule() {
		return getStereotypeApplicationAccess().getRule();
	}
	
	//TaggedValue commons::TaggedValue:
	//	name=STRING ':' value=STRING;
	public TaggedValueElements getTaggedValueAccess() {
		return pTaggedValue;
	}
	
	public ParserRule getTaggedValueRule() {
		return getTaggedValueAccess().getRule();
	}
	
	//enum Visibility returns uml::VisibilityKind:
	//	public='+' | public | private='-' | private | protected='#' | protected | package='~';
	public VisibilityElements getVisibilityAccess() {
		return eVisibility;
	}
	
	public EnumRule getVisibilityRule() {
		return getVisibilityAccess().getRule();
	}
	
	//enum AggregationKind:
	//	NONE='asc' | AGGREGATION='agg' | COMPOSITION='com';
	public AggregationKindElements getAggregationKindAccess() {
		return eAggregationKind;
	}
	
	public EnumRule getAggregationKindRule() {
		return getAggregationKindAccess().getRule();
	}
	
	//RoleName:
	//	ID | UNDERSCORE;
	public RoleNameElements getRoleNameAccess() {
		return pRoleName;
	}
	
	public ParserRule getRoleNameRule() {
		return getRoleNameAccess().getRule();
	}
	
	//@ Override terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal UNDERSCORE:
	//	'_';
	public TerminalRule getUNDERSCORERule() {
		return tUNDERSCORE;
	}
	
	//terminal STEREOTYPE_O:
	//	'«' | '<<';
	public TerminalRule getSTEREOTYPE_ORule() {
		return tSTEREOTYPE_O;
	}
	
	//terminal STEREOTYPE_C:
	//	'»' | '>>';
	public TerminalRule getSTEREOTYPE_CRule() {
		return tSTEREOTYPE_C;
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
