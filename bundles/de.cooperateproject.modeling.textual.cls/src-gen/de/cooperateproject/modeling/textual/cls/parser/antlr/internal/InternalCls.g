/*
 * generated by Xtext
 */
grammar InternalCls;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.cooperateproject.modeling.textual.cls.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.cooperateproject.modeling.textual.cls.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cooperateproject.modeling.textual.cls.services.ClsGrammarAccess;

}

@parser::members {

 	private ClsGrammarAccess grammarAccess;
 	
    public InternalClsParser(TokenStream input, ClsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "ClassDiagram";	
   	}
   	
   	@Override
   	protected ClsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleClassDiagram
entryRuleClassDiagram returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassDiagramRule()); }
	 iv_ruleClassDiagram=ruleClassDiagram 
	 { $current=$iv_ruleClassDiagram.current; } 
	 EOF 
;

// Rule ClassDiagram
ruleClassDiagram returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getClassDiagramAccess().getClassDiagramAction_0(),
            $current);
    }
)	otherlv_1='@start-cls' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClassDiagramAccess().getStartClsKeyword_1());
    }
(
(
		lv_title_2_0=RULE_STRING
		{
			newLeafNode(lv_title_2_0, grammarAccess.getClassDiagramAccess().getTitleSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassDiagramRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_2_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDiagramAccess().getRootPackageRootPackageParserRuleCall_3_0()); 
	    }
		lv_rootPackage_3_0=ruleRootPackage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDiagramRule());
	        }
       		set(
       			$current, 
       			"rootPackage",
        		lv_rootPackage_3_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.RootPackage");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='@end-cls' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getClassDiagramAccess().getEndClsKeyword_4());
    }
)
;





// Entry rule entryRuleRootPackage
entryRuleRootPackage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRootPackageRule()); }
	 iv_ruleRootPackage=ruleRootPackage 
	 { $current=$iv_ruleRootPackage.current; } 
	 EOF 
;

// Rule RootPackage
ruleRootPackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rootPackage' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRootPackageAccess().getRootPackageKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRootPackageRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRootPackageAccess().getReferencedElementPackageCrossReference_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRootPackageAccess().getPackageImportsPackageImportParserRuleCall_2_0()); 
	    }
		lv_packageImports_2_0=rulePackageImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootPackageRule());
	        }
       		add(
       			$current, 
       			"packageImports",
        		lv_packageImports_2_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.PackageImport");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRootPackageAccess().getClassifiersClassifierParserRuleCall_3_0()); 
	    }
		lv_classifiers_3_0=ruleClassifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootPackageRule());
	        }
       		add(
       			$current, 
       			"classifiers",
        		lv_classifiers_3_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Classifier");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRootPackageAccess().getConnectorsConnectorParserRuleCall_4_0()); 
	    }
		lv_connectors_4_0=ruleConnector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootPackageRule());
	        }
       		add(
       			$current, 
       			"connectors",
        		lv_connectors_4_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Connector");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRootPackageAccess().getPackagesPackageParserRuleCall_5_0()); 
	    }
		lv_packages_5_0=rulePackage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootPackageRule());
	        }
       		add(
       			$current, 
       			"packages",
        		lv_packages_5_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Package");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	 iv_rulePackage=rulePackage 
	 { $current=$iv_rulePackage.current; } 
	 EOF 
;

// Rule Package
rulePackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPackageAccess().getPackageKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getReferencedElementPackageCrossReference_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getPackageImportsPackageImportParserRuleCall_3_0()); 
	    }
		lv_packageImports_3_0=rulePackageImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"packageImports",
        		lv_packageImports_3_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.PackageImport");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getClassifiersClassifierParserRuleCall_4_0()); 
	    }
		lv_classifiers_4_0=ruleClassifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"classifiers",
        		lv_classifiers_4_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Classifier");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getConnectorsConnectorParserRuleCall_5_0()); 
	    }
		lv_connectors_5_0=ruleConnector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"connectors",
        		lv_connectors_5_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Connector");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getPackagesPackageParserRuleCall_6_0()); 
	    }
		lv_packages_6_0=rulePackage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"packages",
        		lv_packages_6_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Package");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRulePackageImport
entryRulePackageImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageImportRule()); }
	 iv_rulePackageImport=rulePackageImport 
	 { $current=$iv_rulePackageImport.current; } 
	 EOF 
;

// Rule PackageImport
rulePackageImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPackageImportAccess().getImportKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageImportRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPackageImportAccess().getReferencedElementPackageImportCrossReference_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNameString
entryRuleNameString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameStringRule()); } 
	 iv_ruleNameString=ruleNameString 
	 { $current=$iv_ruleNameString.current.getText(); }  
	 EOF 
;

// Rule NameString
ruleNameString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getNameStringAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFQNRule()); } 
	 iv_ruleFQN=ruleFQN 
	 { $current=$iv_ruleFQN.current.getText(); }  
	 EOF 
;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleClassifier
entryRuleClassifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassifierRule()); }
	 iv_ruleClassifier=ruleClassifier 
	 { $current=$iv_ruleClassifier.current; } 
	 EOF 
;

// Rule Classifier
ruleClassifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getClassifierAccess().getClassParserRuleCall_0()); 
    }
    this_Class_0=ruleClass
    { 
        $current = $this_Class_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getClassifierAccess().getInterfaceParserRuleCall_1()); 
    }
    this_Interface_1=ruleInterface
    { 
        $current = $this_Interface_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleClass
entryRuleClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassRule()); }
	 iv_ruleClass=ruleClass 
	 { $current=$iv_ruleClass.current; } 
	 EOF 
;

// Rule Class
ruleClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
	    }
		lv_visibility_0_0=ruleVisibility		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassRule());
	        }
       		set(
       			$current, 
       			"visibility",
        		lv_visibility_0_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Visibility");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_abstract_1_0=	'abstract' 
    {
        newLeafNode(lv_abstract_1_0, grammarAccess.getClassAccess().getAbstractAbstractKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassRule());
	        }
       		setWithLastConsumed($current, "abstract", true, "abstract");
	    }

)
)?	otherlv_2='class' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getClassAccess().getClassKeyword_2());
    }
(((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getReferencedElementClassCrossReference_3_0_0_0()); 
	    }
		ruleNameString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='as' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getClassAccess().getAsKeyword_3_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getClassAccess().getAliasExpressionStringExpressionCrossReference_3_0_2_0()); 
	}

)
))
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getClassAccess().getReferencedElementClassCrossReference_3_1_0()); 
	}

)
))(	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getMembersMemberParserRuleCall_4_1_0()); 
	    }
		lv_members_8_0=ruleMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_8_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Member");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getClassAccess().getRightCurlyBracketKeyword_4_2());
    }
)?)
;





// Entry rule entryRuleInterface
entryRuleInterface returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceRule()); }
	 iv_ruleInterface=ruleInterface 
	 { $current=$iv_ruleInterface.current; } 
	 EOF 
;

// Rule Interface
ruleInterface returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
	    }
		lv_visibility_0_0=ruleVisibility		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceRule());
	        }
       		set(
       			$current, 
       			"visibility",
        		lv_visibility_0_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Visibility");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='interface' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInterfaceAccess().getInterfaceKeyword_1());
    }
(((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInterfaceAccess().getReferencedElementInterfaceCrossReference_2_0_0_0()); 
	    }
		ruleNameString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='as' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInterfaceAccess().getAsKeyword_2_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getInterfaceAccess().getAliasExpressionStringExpressionCrossReference_2_0_2_0()); 
	}

)
))
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getInterfaceAccess().getReferencedElementInterfaceCrossReference_2_1_0()); 
	}

)
))(	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceAccess().getMembersMemberParserRuleCall_3_1_0()); 
	    }
		lv_members_7_0=ruleMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_7_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Member");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleMember
entryRuleMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMemberRule()); }
	 iv_ruleMember=ruleMember 
	 { $current=$iv_ruleMember.current; } 
	 EOF 
;

// Rule Member
ruleMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMemberAccess().getAttributeParserRuleCall_0()); 
    }
    this_Attribute_0=ruleAttribute
    { 
        $current = $this_Attribute_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMemberAccess().getMethodParserRuleCall_1()); 
    }
    this_Method_1=ruleMethod
    { 
        $current = $this_Method_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributeAccess().getAttributeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getVisibilityVisibilityEnumRuleCall_1_0()); 
	    }
		lv_visibility_1_0=ruleVisibility		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"visibility",
        		lv_visibility_1_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Visibility");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_static_2_0=	'static' 
    {
        newLeafNode(lv_static_2_0, grammarAccess.getAttributeAccess().getStaticStaticKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed($current, "static", true, "static");
	    }

)
)?(
(
		lv_final_3_0=	'final' 
    {
        newLeafNode(lv_final_3_0, grammarAccess.getAttributeAccess().getFinalFinalKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed($current, "final", true, "final");
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getAttributeAccess().getReferencedElementPropertyCrossReference_4_0()); 
	}

)
)	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getColonKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getTypeTypeCrossReference_6_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	 iv_ruleMethod=ruleMethod 
	 { $current=$iv_ruleMethod.current; } 
	 EOF 
;

// Rule Method
ruleMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
	    }
		lv_visibility_0_0=ruleVisibility		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		set(
       			$current, 
       			"visibility",
        		lv_visibility_0_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Visibility");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_abstract_1_0=	'abstract' 
    {
        newLeafNode(lv_abstract_1_0, grammarAccess.getMethodAccess().getAbstractAbstractKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodRule());
	        }
       		setWithLastConsumed($current, "abstract", true, "abstract");
	    }

)
)?(
(
		lv_static_2_0=	'static' 
    {
        newLeafNode(lv_static_2_0, grammarAccess.getMethodAccess().getStaticStaticKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodRule());
	        }
       		setWithLastConsumed($current, "static", true, "static");
	    }

)
)?(
(
		lv_final_3_0=	'final' 
    {
        newLeafNode(lv_final_3_0, grammarAccess.getMethodAccess().getFinalFinalKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodRule());
	        }
       		setWithLastConsumed($current, "final", true, "final");
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getMethodAccess().getReferencedElementOperationCrossReference_4_0()); 
	}

)
)	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMethodAccess().getLeftParenthesisKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getParametersParameterParserRuleCall_6_0_0()); 
	    }
		lv_parameters_6_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_6_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMethodAccess().getCommaKeyword_6_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getParametersParameterParserRuleCall_6_1_1_0()); 
	    }
		lv_parameters_8_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_8_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)*	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMethodAccess().getRightParenthesisKeyword_7());
    }
(	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMethodAccess().getColonKeyword_8_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getTypeTypeCrossReference_8_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
	    }
		lv_visibility_0_0=ruleVisibility		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"visibility",
        		lv_visibility_0_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Visibility");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_static_1_0=	'static' 
    {
        newLeafNode(lv_static_1_0, grammarAccess.getParameterAccess().getStaticStaticKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
       		setWithLastConsumed($current, "static", true, "static");
	    }

)
)?(
(
		lv_final_2_0=	'final' 
    {
        newLeafNode(lv_final_2_0, grammarAccess.getParameterAccess().getFinalFinalKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
       		setWithLastConsumed($current, "final", true, "final");
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getReferencedElementParameterCrossReference_3_0()); 
	}

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getParameterAccess().getColonKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getTypeTypeCrossReference_5_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleConnector
entryRuleConnector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConnectorRule()); }
	 iv_ruleConnector=ruleConnector 
	 { $current=$iv_ruleConnector.current; } 
	 EOF 
;

// Rule Connector
ruleConnector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getConnectorAccess().getGeneralizationParserRuleCall_0()); 
    }
    this_Generalization_0=ruleGeneralization
    { 
        $current = $this_Generalization_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectorAccess().getAssociationParserRuleCall_1()); 
    }
    this_Association_1=ruleAssociation
    { 
        $current = $this_Association_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectorAccess().getImplementationParserRuleCall_2()); 
    }
    this_Implementation_2=ruleImplementation
    { 
        $current = $this_Implementation_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectorAccess().getCommentLinkParserRuleCall_3()); 
    }
    this_CommentLink_3=ruleCommentLink
    { 
        $current = $this_CommentLink_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConnectorAccess().getMultiAssociationParserRuleCall_4()); 
    }
    this_MultiAssociation_4=ruleMultiAssociation
    { 
        $current = $this_MultiAssociation_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGeneralization
entryRuleGeneralization returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeneralizationRule()); }
	 iv_ruleGeneralization=ruleGeneralization 
	 { $current=$iv_ruleGeneralization.current; } 
	 EOF 
;

// Rule Generalization
ruleGeneralization returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeneralizationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGeneralizationAccess().getLeftClassifierCrossReference_0_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='isa' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGeneralizationAccess().getIsaKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeneralizationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGeneralizationAccess().getRightClassifierCrossReference_2_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleImplementation
entryRuleImplementation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImplementationRule()); }
	 iv_ruleImplementation=ruleImplementation 
	 { $current=$iv_ruleImplementation.current; } 
	 EOF 
;

// Rule Implementation
ruleImplementation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getImplementationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getImplementationAccess().getLeftClassifierCrossReference_0_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='impl' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getImplementationAccess().getImplKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getImplementationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getImplementationAccess().getRightClassifierCrossReference_2_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCommentLink
entryRuleCommentLink returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommentLinkRule()); }
	 iv_ruleCommentLink=ruleCommentLink 
	 { $current=$iv_ruleCommentLink.current; } 
	 EOF 
;

// Rule CommentLink
ruleCommentLink returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommentLinkRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCommentLinkAccess().getLeftClassifierCrossReference_0_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='note' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCommentLinkAccess().getNoteKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommentLinkRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCommentLinkAccess().getCommentCommentCrossReference_2_0()); 
	    }
		ruleCommentBody		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAssociation
entryRuleAssociation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssociationRule()); }
	 iv_ruleAssociation=ruleAssociation 
	 { $current=$iv_ruleAssociation.current; } 
	 EOF 
;

// Rule Association
ruleAssociation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_bidirectional_0_0=	'bi' 
    {
        newLeafNode(lv_bidirectional_0_0, grammarAccess.getAssociationAccess().getBidirectionalBiKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssociationRule());
	        }
       		setWithLastConsumed($current, "bidirectional", true, "bi");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAssociationAccess().getAggregationKindAggregationKindEnumRuleCall_1_0()); 
	    }
		lv_aggregationKind_1_0=ruleAggregationKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssociationRule());
	        }
       		set(
       			$current, 
       			"aggregationKind",
        		lv_aggregationKind_1_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.AggregationKind");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssociationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAssociationAccess().getLeftClassifierCrossReference_2_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssociationRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getAssociationAccess().getReferencedElementAssociationCrossReference_3_0_0()); 
	}

)
)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssociationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAssociationAccess().getReferencedElementAssociationCrossReference_3_1_0()); 
	    }
		ruleNameString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssociationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAssociationAccess().getRightClassifierCrossReference_4_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAssociationAccess().getPropertiesAssociationPropertiesParserRuleCall_5_0()); 
	    }
		lv_properties_6_0=ruleAssociationProperties		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssociationRule());
	        }
       		set(
       			$current, 
       			"properties",
        		lv_properties_6_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.AssociationProperties");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_7='note' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAssociationAccess().getNoteKeyword_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssociationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAssociationAccess().getCommentCommentCrossReference_6_1_0()); 
	    }
		ruleCommentBody		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleMultiAssociation
entryRuleMultiAssociation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiAssociationRule()); }
	 iv_ruleMultiAssociation=ruleMultiAssociation 
	 { $current=$iv_ruleMultiAssociation.current; } 
	 EOF 
;

// Rule MultiAssociation
ruleMultiAssociation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='asc' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMultiAssociationAccess().getAscKeyword_0());
    }
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiAssociationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getMultiAssociationAccess().getReferencedElementAssociationCrossReference_1_0_0()); 
	}

)
)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiAssociationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMultiAssociationAccess().getReferencedElementAssociationCrossReference_1_1_0()); 
	    }
		ruleNameString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMultiAssociationAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMultiAssociationAccess().getConnectorEndsMemberEndParserRuleCall_3_0_0()); 
	    }
		lv_connectorEnds_4_0=ruleMemberEnd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiAssociationRule());
	        }
       		add(
       			$current, 
       			"connectorEnds",
        		lv_connectorEnds_4_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.MemberEnd");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMultiAssociationAccess().getSemicolonKeyword_3_1());
    }
)+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMultiAssociationAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleMemberEnd
entryRuleMemberEnd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMemberEndRule()); }
	 iv_ruleMemberEnd=ruleMemberEnd 
	 { $current=$iv_ruleMemberEnd.current; } 
	 EOF 
;

// Rule MemberEnd
ruleMemberEnd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMemberEndRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMemberEndAccess().getTypeClassifierCrossReference_0_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMemberEndRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getMemberEndAccess().getReferencedElementPropertyCrossReference_1_0()); 
	}

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberEndAccess().getCardinalityCardinalityParserRuleCall_2_0()); 
	    }
		lv_cardinality_2_0=ruleCardinality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberEndRule());
	        }
       		set(
       			$current, 
       			"cardinality",
        		lv_cardinality_2_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Cardinality");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_navigable_3_0=	'<' 
    {
        newLeafNode(lv_navigable_3_0, grammarAccess.getMemberEndAccess().getNavigableLessThanSignKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMemberEndRule());
	        }
       		setWithLastConsumed($current, "navigable", true, "<");
	    }

)
)?)
;





// Entry rule entryRuleAssociationProperties
entryRuleAssociationProperties returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssociationPropertiesRule()); }
	 iv_ruleAssociationProperties=ruleAssociationProperties 
	 { $current=$iv_ruleAssociationProperties.current; } 
	 EOF 
;

// Rule AssociationProperties
ruleAssociationProperties returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAssociationPropertiesAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssociationPropertiesAccess().getCardinalityLeftCardinalityParserRuleCall_1_0()); 
	    }
		lv_cardinalityLeft_1_0=ruleCardinality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssociationPropertiesRule());
	        }
       		set(
       			$current, 
       			"cardinalityLeft",
        		lv_cardinalityLeft_1_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Cardinality");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAssociationPropertiesAccess().getCommaKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssociationPropertiesRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getAssociationPropertiesAccess().getPropertyLeftPropertyCrossReference_2_1_0()); 
	}

)
))?(	otherlv_4='|' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAssociationPropertiesAccess().getVerticalLineKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssociationPropertiesAccess().getCardinalityRightCardinalityParserRuleCall_3_1_0()); 
	    }
		lv_cardinalityRight_5_0=ruleCardinality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssociationPropertiesRule());
	        }
       		set(
       			$current, 
       			"cardinalityRight",
        		lv_cardinalityRight_5_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.Cardinality");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAssociationPropertiesAccess().getCommaKeyword_3_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssociationPropertiesRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getAssociationPropertiesAccess().getPropertyRightPropertyCrossReference_3_2_1_0()); 
	}

)
))?)?	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAssociationPropertiesAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleCardinality
entryRuleCardinality returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCardinalityRule()); }
	 iv_ruleCardinality=ruleCardinality 
	 { $current=$iv_ruleCardinality.current; } 
	 EOF 
;

// Rule Cardinality
ruleCardinality returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCardinalityAccess().getLowerBoundCardinalityBoundParserRuleCall_0_0()); 
	    }
		lv_lowerBound_0_0=ruleCardinalityBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardinalityRule());
	        }
       		set(
       			$current, 
       			"lowerBound",
        		lv_lowerBound_0_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.CardinalityBound");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='..' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCardinalityAccess().getFullStopFullStopKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCardinalityAccess().getUpperBoundCardinalityBoundParserRuleCall_1_1_0()); 
	    }
		lv_upperBound_2_0=ruleCardinalityBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCardinalityRule());
	        }
       		set(
       			$current, 
       			"upperBound",
        		lv_upperBound_2_0, 
        		"de.cooperateproject.modeling.textual.cls.Cls.CardinalityBound");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleCommentBody
entryRuleCommentBody returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommentBodyRule()); } 
	 iv_ruleCommentBody=ruleCommentBody 
	 { $current=$iv_ruleCommentBody.current.getText(); }  
	 EOF 
;

// Rule CommentBody
ruleCommentBody returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getCommentBodyAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleCardinalityBound
entryRuleCardinalityBound returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCardinalityBoundRule()); } 
	 iv_ruleCardinalityBound=ruleCardinalityBound 
	 { $current=$iv_ruleCardinalityBound.current.getText(); }  
	 EOF 
;

// Rule CardinalityBound
ruleCardinalityBound returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCardinalityBoundAccess().getAsteriskKeyword_0()); 
    }

    |    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getCardinalityBoundAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Rule Visibility
ruleVisibility returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='+' 
	{
        $current = grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='public' 
	{
        $current = grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='-' 
	{
        $current = grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='private' 
	{
        $current = grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='#' 
	{
        $current = grammarAccess.getVisibilityAccess().getPROTECTEDEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getVisibilityAccess().getPROTECTEDEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='protected' 
	{
        $current = grammarAccess.getVisibilityAccess().getPROTECTEDEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getVisibilityAccess().getPROTECTEDEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='~' 
	{
        $current = grammarAccess.getVisibilityAccess().getPACKAGEEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getVisibilityAccess().getPACKAGEEnumLiteralDeclaration_6()); 
    }
));





// Rule AggregationKind
ruleAggregationKind returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='asc' 
	{
        $current = grammarAccess.getAggregationKindAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAggregationKindAccess().getNONEEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='agg' 
	{
        $current = grammarAccess.getAggregationKindAccess().getAGGREGATIONEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAggregationKindAccess().getAGGREGATIONEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='com' 
	{
        $current = grammarAccess.getAggregationKindAccess().getCOMPOSITIONEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getAggregationKindAccess().getCOMPOSITIONEnumLiteralDeclaration_2()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


