/*
 * generated by Xtext 2.11.0
 */
grammar InternalSequence;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.cooperateproject.modeling.textual.sequence.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.cooperateproject.modeling.textual.sequence.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.cooperateproject.modeling.textual.sequence.services.SequenceGrammarAccess;

}
@parser::members {
	private SequenceGrammarAccess grammarAccess;

	public void setGrammarAccess(SequenceGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSequenceDiagram
entryRuleSequenceDiagram
:
{ before(grammarAccess.getSequenceDiagramRule()); }
	 ruleSequenceDiagram
{ after(grammarAccess.getSequenceDiagramRule()); } 
	 EOF 
;

// Rule SequenceDiagram
ruleSequenceDiagram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceDiagramAccess().getGroup()); }
		(rule__SequenceDiagram__Group__0)
		{ after(grammarAccess.getSequenceDiagramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRootPackage
entryRuleRootPackage
:
{ before(grammarAccess.getRootPackageRule()); }
	 ruleRootPackage
{ after(grammarAccess.getRootPackageRule()); } 
	 EOF 
;

// Rule RootPackage
ruleRootPackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRootPackageAccess().getGroup()); }
		(rule__RootPackage__Group__0)
		{ after(grammarAccess.getRootPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActor
entryRuleActor
:
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActorAccess().getGroup()); }
		(rule__Actor__Group__0)
		{ after(grammarAccess.getActorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActorClassifierMapping
entryRuleActorClassifierMapping
:
{ before(grammarAccess.getActorClassifierMappingRule()); }
	 ruleActorClassifierMapping
{ after(grammarAccess.getActorClassifierMappingRule()); } 
	 EOF 
;

// Rule ActorClassifierMapping
ruleActorClassifierMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActorClassifierMappingAccess().getGroup()); }
		(rule__ActorClassifierMapping__Group__0)
		{ after(grammarAccess.getActorClassifierMappingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehaviorFragment
entryRuleBehaviorFragment
:
{ before(grammarAccess.getBehaviorFragmentRule()); }
	 ruleBehaviorFragment
{ after(grammarAccess.getBehaviorFragmentRule()); } 
	 EOF 
;

// Rule BehaviorFragment
ruleBehaviorFragment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorFragmentAccess().getAlternatives()); }
		(rule__BehaviorFragment__Alternatives)
		{ after(grammarAccess.getBehaviorFragmentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehaviorFragments
entryRuleBehaviorFragments
:
{ before(grammarAccess.getBehaviorFragmentsRule()); }
	 ruleBehaviorFragments
{ after(grammarAccess.getBehaviorFragmentsRule()); } 
	 EOF 
;

// Rule BehaviorFragments
ruleBehaviorFragments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorFragmentsAccess().getAlternatives()); }
		(rule__BehaviorFragments__Alternatives)
		{ after(grammarAccess.getBehaviorFragmentsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMessage
entryRuleMessage
:
{ before(grammarAccess.getMessageRule()); }
	 ruleMessage
{ after(grammarAccess.getMessageRule()); } 
	 EOF 
;

// Rule Message
ruleMessage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMessageAccess().getGroup()); }
		(rule__Message__Group__0)
		{ after(grammarAccess.getMessageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeConstraint
entryRuleTimeConstraint
:
{ before(grammarAccess.getTimeConstraintRule()); }
	 ruleTimeConstraint
{ after(grammarAccess.getTimeConstraintRule()); } 
	 EOF 
;

// Rule TimeConstraint
ruleTimeConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeConstraintAccess().getGroup()); }
		(rule__TimeConstraint__Group__0)
		{ after(grammarAccess.getTimeConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInnerTimeConstraint
entryRuleInnerTimeConstraint
:
{ before(grammarAccess.getInnerTimeConstraintRule()); }
	 ruleInnerTimeConstraint
{ after(grammarAccess.getInnerTimeConstraintRule()); } 
	 EOF 
;

// Rule InnerTimeConstraint
ruleInnerTimeConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInnerTimeConstraintAccess().getGroup()); }
		(rule__InnerTimeConstraint__Group__0)
		{ after(grammarAccess.getInnerTimeConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStandardMessage
entryRuleStandardMessage
:
{ before(grammarAccess.getStandardMessageRule()); }
	 ruleStandardMessage
{ after(grammarAccess.getStandardMessageRule()); } 
	 EOF 
;

// Rule StandardMessage
ruleStandardMessage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStandardMessageAccess().getGroup()); }
		(rule__StandardMessage__Group__0)
		{ after(grammarAccess.getStandardMessageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResponseMessage
entryRuleResponseMessage
:
{ before(grammarAccess.getResponseMessageRule()); }
	 ruleResponseMessage
{ after(grammarAccess.getResponseMessageRule()); } 
	 EOF 
;

// Rule ResponseMessage
ruleResponseMessage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResponseMessageAccess().getGroup()); }
		(rule__ResponseMessage__Group__0)
		{ after(grammarAccess.getResponseMessageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFoundMessage
entryRuleFoundMessage
:
{ before(grammarAccess.getFoundMessageRule()); }
	 ruleFoundMessage
{ after(grammarAccess.getFoundMessageRule()); } 
	 EOF 
;

// Rule FoundMessage
ruleFoundMessage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFoundMessageAccess().getGroup()); }
		(rule__FoundMessage__Group__0)
		{ after(grammarAccess.getFoundMessageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLostMessage
entryRuleLostMessage
:
{ before(grammarAccess.getLostMessageRule()); }
	 ruleLostMessage
{ after(grammarAccess.getLostMessageRule()); } 
	 EOF 
;

// Rule LostMessage
ruleLostMessage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLostMessageAccess().getGroup()); }
		(rule__LostMessage__Group__0)
		{ after(grammarAccess.getLostMessageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateMessage
entryRuleCreateMessage
:
{ before(grammarAccess.getCreateMessageRule()); }
	 ruleCreateMessage
{ after(grammarAccess.getCreateMessageRule()); } 
	 EOF 
;

// Rule CreateMessage
ruleCreateMessage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateMessageAccess().getGroup()); }
		(rule__CreateMessage__Group__0)
		{ after(grammarAccess.getCreateMessageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDestructionMessage
entryRuleDestructionMessage
:
{ before(grammarAccess.getDestructionMessageRule()); }
	 ruleDestructionMessage
{ after(grammarAccess.getDestructionMessageRule()); } 
	 EOF 
;

// Rule DestructionMessage
ruleDestructionMessage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDestructionMessageAccess().getGroup()); }
		(rule__DestructionMessage__Group__0)
		{ after(grammarAccess.getDestructionMessageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOccurenceSpecification
entryRuleOccurenceSpecification
:
{ before(grammarAccess.getOccurenceSpecificationRule()); }
	 ruleOccurenceSpecification
{ after(grammarAccess.getOccurenceSpecificationRule()); } 
	 EOF 
;

// Rule OccurenceSpecification
ruleOccurenceSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOccurenceSpecificationAccess().getDestructionOccurenceSpecificationParserRuleCall()); }
		ruleDestructionOccurenceSpecification
		{ after(grammarAccess.getOccurenceSpecificationAccess().getDestructionOccurenceSpecificationParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDestructionOccurenceSpecification
entryRuleDestructionOccurenceSpecification
:
{ before(grammarAccess.getDestructionOccurenceSpecificationRule()); }
	 ruleDestructionOccurenceSpecification
{ after(grammarAccess.getDestructionOccurenceSpecificationRule()); } 
	 EOF 
;

// Rule DestructionOccurenceSpecification
ruleDestructionOccurenceSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDestructionOccurenceSpecificationAccess().getGroup()); }
		(rule__DestructionOccurenceSpecification__Group__0)
		{ after(grammarAccess.getDestructionOccurenceSpecificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCombinedFragment
entryRuleCombinedFragment
:
{ before(grammarAccess.getCombinedFragmentRule()); }
	 ruleCombinedFragment
{ after(grammarAccess.getCombinedFragmentRule()); } 
	 EOF 
;

// Rule CombinedFragment
ruleCombinedFragment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCombinedFragmentAccess().getAlternatives()); }
		(rule__CombinedFragment__Alternatives)
		{ after(grammarAccess.getCombinedFragmentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlternative
entryRuleAlternative
:
{ before(grammarAccess.getAlternativeRule()); }
	 ruleAlternative
{ after(grammarAccess.getAlternativeRule()); } 
	 EOF 
;

// Rule Alternative
ruleAlternative 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlternativeAccess().getGroup()); }
		(rule__Alternative__Group__0)
		{ after(grammarAccess.getAlternativeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOption
entryRuleOption
:
{ before(grammarAccess.getOptionRule()); }
	 ruleOption
{ after(grammarAccess.getOptionRule()); } 
	 EOF 
;

// Rule Option
ruleOption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOptionAccess().getGroup()); }
		(rule__Option__Group__0)
		{ after(grammarAccess.getOptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParallel
entryRuleParallel
:
{ before(grammarAccess.getParallelRule()); }
	 ruleParallel
{ after(grammarAccess.getParallelRule()); } 
	 EOF 
;

// Rule Parallel
ruleParallel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParallelAccess().getGroup()); }
		(rule__Parallel__Group__0)
		{ after(grammarAccess.getParallelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCritical
entryRuleCritical
:
{ before(grammarAccess.getCriticalRule()); }
	 ruleCritical
{ after(grammarAccess.getCriticalRule()); } 
	 EOF 
;

// Rule Critical
ruleCritical 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCriticalAccess().getGroup()); }
		(rule__Critical__Group__0)
		{ after(grammarAccess.getCriticalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoop
entryRuleLoop
:
{ before(grammarAccess.getLoopRule()); }
	 ruleLoop
{ after(grammarAccess.getLoopRule()); } 
	 EOF 
;

// Rule Loop
ruleLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoopAccess().getGroup()); }
		(rule__Loop__Group__0)
		{ after(grammarAccess.getLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehaviorFragmentsWithCondition
entryRuleBehaviorFragmentsWithCondition
:
{ before(grammarAccess.getBehaviorFragmentsWithConditionRule()); }
	 ruleBehaviorFragmentsWithCondition
{ after(grammarAccess.getBehaviorFragmentsWithConditionRule()); } 
	 EOF 
;

// Rule BehaviorFragmentsWithCondition
ruleBehaviorFragmentsWithCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorFragmentsWithConditionAccess().getGroup()); }
		(rule__BehaviorFragmentsWithCondition__Group__0)
		{ after(grammarAccess.getBehaviorFragmentsWithConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFQN
entryRuleFQN
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFQNAccess().getGroup()); }
		(rule__FQN__Group__0)
		{ after(grammarAccess.getFQNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrder
entryRuleOrder
:
{ before(grammarAccess.getOrderRule()); }
	 ruleOrder
{ after(grammarAccess.getOrderRule()); } 
	 EOF 
;

// Rule Order
ruleOrder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrderAccess().getGroup()); }
		(rule__Order__Group__0)
		{ after(grammarAccess.getOrderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommentBody
entryRuleCommentBody
:
{ before(grammarAccess.getCommentBodyRule()); }
	 ruleCommentBody
{ after(grammarAccess.getCommentBodyRule()); } 
	 EOF 
;

// Rule CommentBody
ruleCommentBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommentBodyAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getCommentBodyAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnescapedString
entryRuleUnescapedString
:
{ before(grammarAccess.getUnescapedStringRule()); }
	 ruleUnescapedString
{ after(grammarAccess.getUnescapedStringRule()); } 
	 EOF 
;

// Rule UnescapedString
ruleUnescapedString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnescapedStringAccess().getAlternatives()); }
		(rule__UnescapedString__Alternatives)
		{ after(grammarAccess.getUnescapedStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MessageType
ruleMessageType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageTypeAccess().getAlternatives()); }
		(rule__MessageType__Alternatives)
		{ after(grammarAccess.getMessageTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ActorType
ruleActorType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorTypeAccess().getAlternatives()); }
		(rule__ActorType__Alternatives)
		{ after(grammarAccess.getActorTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TimeConstraintType
ruleTimeConstraintType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeConstraintTypeAccess().getAlternatives()); }
		(rule__TimeConstraintType__Alternatives)
		{ after(grammarAccess.getTimeConstraintTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getGroup_2_0()); }
		(rule__Actor__Group_2_0__0)
		{ after(grammarAccess.getActorAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getActorAccess().getGroup_2_1()); }
		(rule__Actor__Group_2_1__0)
		{ after(grammarAccess.getActorAccess().getGroup_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getActorAccess().getGroup_2_2()); }
		(rule__Actor__Group_2_2__0)
		{ after(grammarAccess.getActorAccess().getGroup_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragment__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorFragmentAccess().getMessageParserRuleCall_0()); }
		ruleMessage
		{ after(grammarAccess.getBehaviorFragmentAccess().getMessageParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorFragmentAccess().getOccurenceSpecificationParserRuleCall_1()); }
		ruleOccurenceSpecification
		{ after(grammarAccess.getBehaviorFragmentAccess().getOccurenceSpecificationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorFragmentAccess().getCombinedFragmentParserRuleCall_2()); }
		ruleCombinedFragment
		{ after(grammarAccess.getBehaviorFragmentAccess().getCombinedFragmentParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragments__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorFragmentsAccess().getGroup_0()); }
		(rule__BehaviorFragments__Group_0__0)
		{ after(grammarAccess.getBehaviorFragmentsAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorFragmentsAccess().getFragmentsAssignment_1()); }
		(rule__BehaviorFragments__FragmentsAssignment_1)
		{ after(grammarAccess.getBehaviorFragmentsAccess().getFragmentsAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageAccess().getStandardMessageParserRuleCall_0_0()); }
		ruleStandardMessage
		{ after(grammarAccess.getMessageAccess().getStandardMessageParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMessageAccess().getResponseMessageParserRuleCall_0_1()); }
		ruleResponseMessage
		{ after(grammarAccess.getMessageAccess().getResponseMessageParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMessageAccess().getFoundMessageParserRuleCall_0_2()); }
		ruleFoundMessage
		{ after(grammarAccess.getMessageAccess().getFoundMessageParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getMessageAccess().getLostMessageParserRuleCall_0_3()); }
		ruleLostMessage
		{ after(grammarAccess.getMessageAccess().getLostMessageParserRuleCall_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getMessageAccess().getCreateMessageParserRuleCall_0_4()); }
		ruleCreateMessage
		{ after(grammarAccess.getMessageAccess().getCreateMessageParserRuleCall_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getMessageAccess().getDestructionMessageParserRuleCall_0_5()); }
		ruleDestructionMessage
		{ after(grammarAccess.getMessageAccess().getDestructionMessageParserRuleCall_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResponseMessageAccess().getLeftAssignment_3_0()); }
		(rule__ResponseMessage__LeftAssignment_3_0)
		{ after(grammarAccess.getResponseMessageAccess().getLeftAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getResponseMessageAccess().get_Keyword_3_1()); }
		'_'
		{ after(grammarAccess.getResponseMessageAccess().get_Keyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResponseMessageAccess().getRightAssignment_5_0()); }
		(rule__ResponseMessage__RightAssignment_5_0)
		{ after(grammarAccess.getResponseMessageAccess().getRightAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getResponseMessageAccess().get_Keyword_5_1()); }
		'_'
		{ after(grammarAccess.getResponseMessageAccess().get_Keyword_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinedFragment__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinedFragmentAccess().getAlternativeParserRuleCall_0()); }
		ruleAlternative
		{ after(grammarAccess.getCombinedFragmentAccess().getAlternativeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCombinedFragmentAccess().getOptionParserRuleCall_1()); }
		ruleOption
		{ after(grammarAccess.getCombinedFragmentAccess().getOptionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCombinedFragmentAccess().getParallelParserRuleCall_2()); }
		ruleParallel
		{ after(grammarAccess.getCombinedFragmentAccess().getParallelParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCombinedFragmentAccess().getCriticalParserRuleCall_3()); }
		ruleCritical
		{ after(grammarAccess.getCombinedFragmentAccess().getCriticalParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCombinedFragmentAccess().getLoopParserRuleCall_4()); }
		ruleLoop
		{ after(grammarAccess.getCombinedFragmentAccess().getLoopParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragmentsWithCondition__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorFragmentsWithConditionAccess().getGroup_3_0()); }
		(rule__BehaviorFragmentsWithCondition__Group_3_0__0)
		{ after(grammarAccess.getBehaviorFragmentsWithConditionAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorFragmentsWithConditionAccess().getFragmentsAssignment_3_1()); }
		(rule__BehaviorFragmentsWithCondition__FragmentsAssignment_3_1)
		{ after(grammarAccess.getBehaviorFragmentsWithConditionAccess().getFragmentsAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnescapedString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnescapedStringAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getUnescapedStringAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnescapedStringAccess().getSTRINGTerminalRuleCall_1()); }
		RULE_STRING
		{ after(grammarAccess.getUnescapedStringAccess().getSTRINGTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageTypeAccess().getSYNCEnumLiteralDeclaration_0()); }
		('sync')
		{ after(grammarAccess.getMessageTypeAccess().getSYNCEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMessageTypeAccess().getASYNCEnumLiteralDeclaration_1()); }
		('async')
		{ after(grammarAccess.getMessageTypeAccess().getASYNCEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorTypeAccess().getHUMANEnumLiteralDeclaration_0()); }
		('human')
		{ after(grammarAccess.getActorTypeAccess().getHUMANEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getActorTypeAccess().getMACHINEEnumLiteralDeclaration_1()); }
		('machine')
		{ after(grammarAccess.getActorTypeAccess().getMACHINEEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstraintType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeConstraintTypeAccess().getDURATIONEnumLiteralDeclaration_0()); }
		('d')
		{ after(grammarAccess.getTimeConstraintTypeAccess().getDURATIONEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeConstraintTypeAccess().getTIMEEnumLiteralDeclaration_1()); }
		('t')
		{ after(grammarAccess.getTimeConstraintTypeAccess().getTIMEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeConstraintTypeAccess().getMAXIMUMEnumLiteralDeclaration_2()); }
		('max')
		{ after(grammarAccess.getTimeConstraintTypeAccess().getMAXIMUMEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimeConstraintTypeAccess().getDIFFERENCEEnumLiteralDeclaration_3()); }
		('diff')
		{ after(grammarAccess.getTimeConstraintTypeAccess().getDIFFERENCEEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDiagram__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceDiagram__Group__0__Impl
	rule__SequenceDiagram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDiagram__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceDiagramAccess().getSequenceDiagramAction_0()); }
	()
	{ after(grammarAccess.getSequenceDiagramAccess().getSequenceDiagramAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDiagram__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceDiagram__Group__1__Impl
	rule__SequenceDiagram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDiagram__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceDiagramAccess().getStartSeqdKeyword_1()); }
	'@start-seqd'
	{ after(grammarAccess.getSequenceDiagramAccess().getStartSeqdKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDiagram__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceDiagram__Group__2__Impl
	rule__SequenceDiagram__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDiagram__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceDiagramAccess().getTitleAssignment_2()); }
	(rule__SequenceDiagram__TitleAssignment_2)
	{ after(grammarAccess.getSequenceDiagramAccess().getTitleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDiagram__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceDiagram__Group__3__Impl
	rule__SequenceDiagram__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDiagram__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceDiagramAccess().getRootPackageAssignment_3()); }
	(rule__SequenceDiagram__RootPackageAssignment_3)
	{ after(grammarAccess.getSequenceDiagramAccess().getRootPackageAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDiagram__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceDiagram__Group__4__Impl
	rule__SequenceDiagram__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDiagram__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceDiagramAccess().getActorsAssignment_4()); }
	(rule__SequenceDiagram__ActorsAssignment_4)*
	{ after(grammarAccess.getSequenceDiagramAccess().getActorsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDiagram__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceDiagram__Group__5__Impl
	rule__SequenceDiagram__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDiagram__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceDiagramAccess().getBehaviorFragmentsAssignment_5()); }
	(rule__SequenceDiagram__BehaviorFragmentsAssignment_5)*
	{ after(grammarAccess.getSequenceDiagramAccess().getBehaviorFragmentsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDiagram__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceDiagram__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDiagram__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceDiagramAccess().getEndSeqdKeyword_6()); }
	'@end-seqd'
	{ after(grammarAccess.getSequenceDiagramAccess().getEndSeqdKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RootPackage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootPackage__Group__0__Impl
	rule__RootPackage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootPackageAccess().getRootElementKeyword_0()); }
	'rootElement'
	{ after(grammarAccess.getRootPackageAccess().getRootElementKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootPackage__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootPackageAccess().getNameAssignment_1()); }
	(rule__RootPackage__NameAssignment_1)
	{ after(grammarAccess.getRootPackageAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__0__Impl
	rule__Actor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getDeferredAssignment_0()); }
	(rule__Actor__DeferredAssignment_0)?
	{ after(grammarAccess.getActorAccess().getDeferredAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__1__Impl
	rule__Actor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getActKeyword_1()); }
	'act'
	{ after(grammarAccess.getActorAccess().getActKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__2__Impl
	rule__Actor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getAlternatives_2()); }
	(rule__Actor__Alternatives_2)
	{ after(grammarAccess.getActorAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getGroup_3()); }
	(rule__Actor__Group_3__0)?
	{ after(grammarAccess.getActorAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_2_0__0__Impl
	rule__Actor__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getNameAssignment_2_0_0()); }
	(rule__Actor__NameAssignment_2_0_0)
	{ after(grammarAccess.getActorAccess().getNameAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getTypeMappingAssignment_2_0_1()); }
	(rule__Actor__TypeMappingAssignment_2_0_1)?
	{ after(grammarAccess.getActorAccess().getTypeMappingAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_2_1__0__Impl
	rule__Actor__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getTypeMappingAssignment_2_1_0()); }
	(rule__Actor__TypeMappingAssignment_2_1_0)
	{ after(grammarAccess.getActorAccess().getTypeMappingAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_2_1__1__Impl
	rule__Actor__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getAsKeyword_2_1_1()); }
	'as'
	{ after(grammarAccess.getActorAccess().getAsKeyword_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getAliasAssignment_2_1_2()); }
	(rule__Actor__AliasAssignment_2_1_2)
	{ after(grammarAccess.getActorAccess().getAliasAssignment_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_2_2__0__Impl
	rule__Actor__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getNameAssignment_2_2_0()); }
	(rule__Actor__NameAssignment_2_2_0)
	{ after(grammarAccess.getActorAccess().getNameAssignment_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_2_2__1__Impl
	rule__Actor__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getTypeMappingAssignment_2_2_1()); }
	(rule__Actor__TypeMappingAssignment_2_2_1)?
	{ after(grammarAccess.getActorAccess().getTypeMappingAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_2_2__2__Impl
	rule__Actor__Group_2_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getAsKeyword_2_2_2()); }
	'as'
	{ after(grammarAccess.getActorAccess().getAsKeyword_2_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_2_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_2_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getAliasAssignment_2_2_3()); }
	(rule__Actor__AliasAssignment_2_2_3)
	{ after(grammarAccess.getActorAccess().getAliasAssignment_2_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_3__0__Impl
	rule__Actor__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getRoleKeyword_3_0()); }
	'role['
	{ after(grammarAccess.getActorAccess().getRoleKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_3__1__Impl
	rule__Actor__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getActorTypeAssignment_3_1()); }
	(rule__Actor__ActorTypeAssignment_3_1)
	{ after(grammarAccess.getActorAccess().getActorTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getRightSquareBracketKeyword_3_2()); }
	']'
	{ after(grammarAccess.getActorAccess().getRightSquareBracketKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActorClassifierMapping__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorClassifierMapping__Group__0__Impl
	rule__ActorClassifierMapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorClassifierMapping__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorClassifierMappingAccess().getColonKeyword_0()); }
	':'
	{ after(grammarAccess.getActorClassifierMappingAccess().getColonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorClassifierMapping__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorClassifierMapping__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorClassifierMapping__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorClassifierMappingAccess().getClassifierAssignment_1()); }
	(rule__ActorClassifierMapping__ClassifierAssignment_1)
	{ after(grammarAccess.getActorClassifierMappingAccess().getClassifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorFragments__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorFragments__Group_0__0__Impl
	rule__BehaviorFragments__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragments__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorFragmentsAccess().getLeftCurlyBracketKeyword_0_0()); }
	'{'
	{ after(grammarAccess.getBehaviorFragmentsAccess().getLeftCurlyBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragments__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorFragments__Group_0__1__Impl
	rule__BehaviorFragments__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragments__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBehaviorFragmentsAccess().getFragmentsAssignment_0_1()); }
		(rule__BehaviorFragments__FragmentsAssignment_0_1)
		{ after(grammarAccess.getBehaviorFragmentsAccess().getFragmentsAssignment_0_1()); }
	)
	(
		{ before(grammarAccess.getBehaviorFragmentsAccess().getFragmentsAssignment_0_1()); }
		(rule__BehaviorFragments__FragmentsAssignment_0_1)*
		{ after(grammarAccess.getBehaviorFragmentsAccess().getFragmentsAssignment_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragments__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorFragments__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragments__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorFragmentsAccess().getRightCurlyBracketKeyword_0_2()); }
	'}'
	{ after(grammarAccess.getBehaviorFragmentsAccess().getRightCurlyBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group__0__Impl
	rule__Message__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getAlternatives_0()); }
	(rule__Message__Alternatives_0)
	{ after(grammarAccess.getMessageAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group__1__Impl
	rule__Message__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getGroup_1()); }
	(rule__Message__Group_1__0)?
	{ after(grammarAccess.getMessageAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getTimeConstraintAssignment_2()); }
	(rule__Message__TimeConstraintAssignment_2)?
	{ after(grammarAccess.getMessageAccess().getTimeConstraintAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group_1__0__Impl
	rule__Message__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getNumKeyword_1_0()); }
	'num['
	{ after(grammarAccess.getMessageAccess().getNumKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group_1__1__Impl
	rule__Message__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getOrderAssignment_1_1()); }
	(rule__Message__OrderAssignment_1_1)
	{ after(grammarAccess.getMessageAccess().getOrderAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getMessageAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeConstraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstraint__Group__0__Impl
	rule__TimeConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstraintAccess().getTimeKeyword_0()); }
	'time['
	{ after(grammarAccess.getTimeConstraintAccess().getTimeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstraint__Group__1__Impl
	rule__TimeConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTimeConstraintAccess().getConstraintsAssignment_1()); }
		(rule__TimeConstraint__ConstraintsAssignment_1)
		{ after(grammarAccess.getTimeConstraintAccess().getConstraintsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getTimeConstraintAccess().getConstraintsAssignment_1()); }
		(rule__TimeConstraint__ConstraintsAssignment_1)*
		{ after(grammarAccess.getTimeConstraintAccess().getConstraintsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstraint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeConstraint__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstraint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeConstraintAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getTimeConstraintAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InnerTimeConstraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerTimeConstraint__Group__0__Impl
	rule__InnerTimeConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerTimeConstraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerTimeConstraintAccess().getTypeAssignment_0()); }
	(rule__InnerTimeConstraint__TypeAssignment_0)
	{ after(grammarAccess.getInnerTimeConstraintAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerTimeConstraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerTimeConstraint__Group__1__Impl
	rule__InnerTimeConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerTimeConstraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerTimeConstraintAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getInnerTimeConstraintAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerTimeConstraint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InnerTimeConstraint__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerTimeConstraint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInnerTimeConstraintAccess().getValueAssignment_2()); }
	(rule__InnerTimeConstraint__ValueAssignment_2)
	{ after(grammarAccess.getInnerTimeConstraintAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandardMessage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardMessage__Group__0__Impl
	rule__StandardMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardMessage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardMessageAccess().getTypeAssignment_0()); }
	(rule__StandardMessage__TypeAssignment_0)
	{ after(grammarAccess.getStandardMessageAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardMessage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardMessage__Group__1__Impl
	rule__StandardMessage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardMessage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardMessageAccess().getNameAssignment_1()); }
	(rule__StandardMessage__NameAssignment_1)
	{ after(grammarAccess.getStandardMessageAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardMessage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardMessage__Group__2__Impl
	rule__StandardMessage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardMessage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardMessageAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getStandardMessageAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardMessage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardMessage__Group__3__Impl
	rule__StandardMessage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardMessage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardMessageAccess().getLeftAssignment_3()); }
	(rule__StandardMessage__LeftAssignment_3)
	{ after(grammarAccess.getStandardMessageAccess().getLeftAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardMessage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardMessage__Group__4__Impl
	rule__StandardMessage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardMessage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardMessageAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getStandardMessageAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardMessage__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardMessage__Group__5__Impl
	rule__StandardMessage__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardMessage__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardMessageAccess().getRightAssignment_5()); }
	(rule__StandardMessage__RightAssignment_5)
	{ after(grammarAccess.getStandardMessageAccess().getRightAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardMessage__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardMessage__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardMessage__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardMessageAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getStandardMessageAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResponseMessage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResponseMessage__Group__0__Impl
	rule__ResponseMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseMessageAccess().getReplyKeyword_0()); }
	'reply'
	{ after(grammarAccess.getResponseMessageAccess().getReplyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResponseMessage__Group__1__Impl
	rule__ResponseMessage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseMessageAccess().getNameAssignment_1()); }
	(rule__ResponseMessage__NameAssignment_1)
	{ after(grammarAccess.getResponseMessageAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResponseMessage__Group__2__Impl
	rule__ResponseMessage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseMessageAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getResponseMessageAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResponseMessage__Group__3__Impl
	rule__ResponseMessage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseMessageAccess().getAlternatives_3()); }
	(rule__ResponseMessage__Alternatives_3)
	{ after(grammarAccess.getResponseMessageAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResponseMessage__Group__4__Impl
	rule__ResponseMessage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseMessageAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getResponseMessageAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResponseMessage__Group__5__Impl
	rule__ResponseMessage__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseMessageAccess().getAlternatives_5()); }
	(rule__ResponseMessage__Alternatives_5)
	{ after(grammarAccess.getResponseMessageAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResponseMessage__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseMessageAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getResponseMessageAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FoundMessage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoundMessage__Group__0__Impl
	rule__FoundMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoundMessageAccess().getFoundKeyword_0()); }
	'found'
	{ after(grammarAccess.getFoundMessageAccess().getFoundKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoundMessage__Group__1__Impl
	rule__FoundMessage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoundMessageAccess().getTypeAssignment_1()); }
	(rule__FoundMessage__TypeAssignment_1)
	{ after(grammarAccess.getFoundMessageAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoundMessage__Group__2__Impl
	rule__FoundMessage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoundMessageAccess().getNameAssignment_2()); }
	(rule__FoundMessage__NameAssignment_2)
	{ after(grammarAccess.getFoundMessageAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoundMessage__Group__3__Impl
	rule__FoundMessage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoundMessageAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getFoundMessageAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoundMessage__Group__4__Impl
	rule__FoundMessage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoundMessageAccess().get_Keyword_4()); }
	'_'
	{ after(grammarAccess.getFoundMessageAccess().get_Keyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoundMessage__Group__5__Impl
	rule__FoundMessage__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoundMessageAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getFoundMessageAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoundMessage__Group__6__Impl
	rule__FoundMessage__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoundMessageAccess().getRightAssignment_6()); }
	(rule__FoundMessage__RightAssignment_6)
	{ after(grammarAccess.getFoundMessageAccess().getRightAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoundMessage__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoundMessageAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getFoundMessageAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LostMessage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LostMessage__Group__0__Impl
	rule__LostMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLostMessageAccess().getLostKeyword_0()); }
	'lost'
	{ after(grammarAccess.getLostMessageAccess().getLostKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LostMessage__Group__1__Impl
	rule__LostMessage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLostMessageAccess().getTypeAssignment_1()); }
	(rule__LostMessage__TypeAssignment_1)
	{ after(grammarAccess.getLostMessageAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LostMessage__Group__2__Impl
	rule__LostMessage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLostMessageAccess().getNameAssignment_2()); }
	(rule__LostMessage__NameAssignment_2)
	{ after(grammarAccess.getLostMessageAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LostMessage__Group__3__Impl
	rule__LostMessage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLostMessageAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getLostMessageAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LostMessage__Group__4__Impl
	rule__LostMessage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLostMessageAccess().getLeftAssignment_4()); }
	(rule__LostMessage__LeftAssignment_4)
	{ after(grammarAccess.getLostMessageAccess().getLeftAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LostMessage__Group__5__Impl
	rule__LostMessage__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLostMessageAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getLostMessageAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LostMessage__Group__6__Impl
	rule__LostMessage__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLostMessageAccess().get_Keyword_6()); }
	'_'
	{ after(grammarAccess.getLostMessageAccess().get_Keyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LostMessage__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLostMessageAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getLostMessageAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateMessage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateMessage__Group__0__Impl
	rule__CreateMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMessage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateMessageAccess().getCreateKeyword_0()); }
	'create'
	{ after(grammarAccess.getCreateMessageAccess().getCreateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMessage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateMessage__Group__1__Impl
	rule__CreateMessage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMessage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateMessageAccess().getNameAssignment_1()); }
	(rule__CreateMessage__NameAssignment_1)?
	{ after(grammarAccess.getCreateMessageAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMessage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateMessage__Group__2__Impl
	rule__CreateMessage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMessage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateMessageAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getCreateMessageAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMessage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateMessage__Group__3__Impl
	rule__CreateMessage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMessage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateMessageAccess().getLeftAssignment_3()); }
	(rule__CreateMessage__LeftAssignment_3)
	{ after(grammarAccess.getCreateMessageAccess().getLeftAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMessage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateMessage__Group__4__Impl
	rule__CreateMessage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMessage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateMessageAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getCreateMessageAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMessage__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateMessage__Group__5__Impl
	rule__CreateMessage__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMessage__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateMessageAccess().getRightAssignment_5()); }
	(rule__CreateMessage__RightAssignment_5)
	{ after(grammarAccess.getCreateMessageAccess().getRightAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMessage__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateMessage__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMessage__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateMessageAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getCreateMessageAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DestructionMessage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DestructionMessage__Group__0__Impl
	rule__DestructionMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionMessage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestructionMessageAccess().getDestKeyword_0()); }
	'dest'
	{ after(grammarAccess.getDestructionMessageAccess().getDestKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionMessage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DestructionMessage__Group__1__Impl
	rule__DestructionMessage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionMessage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestructionMessageAccess().getNameAssignment_1()); }
	(rule__DestructionMessage__NameAssignment_1)?
	{ after(grammarAccess.getDestructionMessageAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionMessage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DestructionMessage__Group__2__Impl
	rule__DestructionMessage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionMessage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestructionMessageAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getDestructionMessageAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionMessage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DestructionMessage__Group__3__Impl
	rule__DestructionMessage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionMessage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestructionMessageAccess().getLeftAssignment_3()); }
	(rule__DestructionMessage__LeftAssignment_3)
	{ after(grammarAccess.getDestructionMessageAccess().getLeftAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionMessage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DestructionMessage__Group__4__Impl
	rule__DestructionMessage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionMessage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestructionMessageAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getDestructionMessageAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionMessage__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DestructionMessage__Group__5__Impl
	rule__DestructionMessage__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionMessage__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestructionMessageAccess().getRightAssignment_5()); }
	(rule__DestructionMessage__RightAssignment_5)
	{ after(grammarAccess.getDestructionMessageAccess().getRightAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionMessage__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DestructionMessage__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionMessage__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestructionMessageAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getDestructionMessageAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DestructionOccurenceSpecification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DestructionOccurenceSpecification__Group__0__Impl
	rule__DestructionOccurenceSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionOccurenceSpecification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestructionOccurenceSpecificationAccess().getDestKeyword_0()); }
	'dest'
	{ after(grammarAccess.getDestructionOccurenceSpecificationAccess().getDestKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionOccurenceSpecification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DestructionOccurenceSpecification__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionOccurenceSpecification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestructionOccurenceSpecificationAccess().getTargetAssignment_1()); }
	(rule__DestructionOccurenceSpecification__TargetAssignment_1)
	{ after(grammarAccess.getDestructionOccurenceSpecificationAccess().getTargetAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Alternative__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alternative__Group__0__Impl
	rule__Alternative__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlternativeAccess().getAltKeyword_0()); }
	'alt'
	{ after(grammarAccess.getAlternativeAccess().getAltKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alternative__Group__1__Impl
	rule__Alternative__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlternativeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getAlternativeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alternative__Group__2__Impl
	rule__Alternative__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAlternativeAccess().getAlternativesAssignment_2()); }
		(rule__Alternative__AlternativesAssignment_2)
		{ after(grammarAccess.getAlternativeAccess().getAlternativesAssignment_2()); }
	)
	(
		{ before(grammarAccess.getAlternativeAccess().getAlternativesAssignment_2()); }
		(rule__Alternative__AlternativesAssignment_2)*
		{ after(grammarAccess.getAlternativeAccess().getAlternativesAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alternative__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlternativeAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getAlternativeAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Option__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group__0__Impl
	rule__Option__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getOptKeyword_0()); }
	'opt'
	{ after(grammarAccess.getOptionAccess().getOptKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group__1__Impl
	rule__Option__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getOptionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group__2__Impl
	rule__Option__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getOptionalAssignment_2()); }
	(rule__Option__OptionalAssignment_2)
	{ after(grammarAccess.getOptionAccess().getOptionalAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Option__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getOptionAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parallel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parallel__Group__0__Impl
	rule__Parallel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAccess().getParKeyword_0()); }
	'par'
	{ after(grammarAccess.getParallelAccess().getParKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parallel__Group__1__Impl
	rule__Parallel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getParallelAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parallel__Group__2__Impl
	rule__Parallel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getParallelAccess().getParallelsAssignment_2()); }
		(rule__Parallel__ParallelsAssignment_2)
		{ after(grammarAccess.getParallelAccess().getParallelsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getParallelAccess().getParallelsAssignment_2()); }
		(rule__Parallel__ParallelsAssignment_2)*
		{ after(grammarAccess.getParallelAccess().getParallelsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parallel__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getParallelAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Critical__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Critical__Group__0__Impl
	rule__Critical__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Critical__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCriticalAccess().getCriticalKeyword_0()); }
	'critical'
	{ after(grammarAccess.getCriticalAccess().getCriticalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Critical__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Critical__Group__1__Impl
	rule__Critical__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Critical__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCriticalAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCriticalAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Critical__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Critical__Group__2__Impl
	rule__Critical__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Critical__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCriticalAccess().getFragmentsAssignment_2()); }
		(rule__Critical__FragmentsAssignment_2)
		{ after(grammarAccess.getCriticalAccess().getFragmentsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getCriticalAccess().getFragmentsAssignment_2()); }
		(rule__Critical__FragmentsAssignment_2)*
		{ after(grammarAccess.getCriticalAccess().getFragmentsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Critical__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Critical__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Critical__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCriticalAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getCriticalAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Loop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__0__Impl
	rule__Loop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getLoopKeyword_0()); }
	'loop'
	{ after(grammarAccess.getLoopAccess().getLoopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__1__Impl
	rule__Loop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getLoopAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__2__Impl
	rule__Loop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getConditionAssignment_2()); }
	(rule__Loop__ConditionAssignment_2)
	{ after(grammarAccess.getLoopAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__3__Impl
	rule__Loop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getLoopAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__4__Impl
	rule__Loop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getLoopAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__5__Impl
	rule__Loop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getLoopAccess().getFragmentsAssignment_5()); }
		(rule__Loop__FragmentsAssignment_5)
		{ after(grammarAccess.getLoopAccess().getFragmentsAssignment_5()); }
	)
	(
		{ before(grammarAccess.getLoopAccess().getFragmentsAssignment_5()); }
		(rule__Loop__FragmentsAssignment_5)*
		{ after(grammarAccess.getLoopAccess().getFragmentsAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loop__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoopAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getLoopAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorFragmentsWithCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorFragmentsWithCondition__Group__0__Impl
	rule__BehaviorFragmentsWithCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragmentsWithCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorFragmentsWithConditionAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getBehaviorFragmentsWithConditionAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragmentsWithCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorFragmentsWithCondition__Group__1__Impl
	rule__BehaviorFragmentsWithCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragmentsWithCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorFragmentsWithConditionAccess().getConditionAssignment_1()); }
	(rule__BehaviorFragmentsWithCondition__ConditionAssignment_1)
	{ after(grammarAccess.getBehaviorFragmentsWithConditionAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragmentsWithCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorFragmentsWithCondition__Group__2__Impl
	rule__BehaviorFragmentsWithCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragmentsWithCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorFragmentsWithConditionAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getBehaviorFragmentsWithConditionAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragmentsWithCondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorFragmentsWithCondition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragmentsWithCondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorFragmentsWithConditionAccess().getAlternatives_3()); }
	(rule__BehaviorFragmentsWithCondition__Alternatives_3)
	{ after(grammarAccess.getBehaviorFragmentsWithConditionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorFragmentsWithCondition__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorFragmentsWithCondition__Group_3_0__0__Impl
	rule__BehaviorFragmentsWithCondition__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragmentsWithCondition__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorFragmentsWithConditionAccess().getLeftCurlyBracketKeyword_3_0_0()); }
	'{'
	{ after(grammarAccess.getBehaviorFragmentsWithConditionAccess().getLeftCurlyBracketKeyword_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragmentsWithCondition__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorFragmentsWithCondition__Group_3_0__1__Impl
	rule__BehaviorFragmentsWithCondition__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragmentsWithCondition__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBehaviorFragmentsWithConditionAccess().getFragmentsAssignment_3_0_1()); }
		(rule__BehaviorFragmentsWithCondition__FragmentsAssignment_3_0_1)
		{ after(grammarAccess.getBehaviorFragmentsWithConditionAccess().getFragmentsAssignment_3_0_1()); }
	)
	(
		{ before(grammarAccess.getBehaviorFragmentsWithConditionAccess().getFragmentsAssignment_3_0_1()); }
		(rule__BehaviorFragmentsWithCondition__FragmentsAssignment_3_0_1)*
		{ after(grammarAccess.getBehaviorFragmentsWithConditionAccess().getFragmentsAssignment_3_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragmentsWithCondition__Group_3_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorFragmentsWithCondition__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragmentsWithCondition__Group_3_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorFragmentsWithConditionAccess().getRightCurlyBracketKeyword_3_0_2()); }
	'}'
	{ after(grammarAccess.getBehaviorFragmentsWithConditionAccess().getRightCurlyBracketKeyword_3_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getGroup_1()); }
	(rule__FQN__Group_1__0)*
	{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Order__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Order__Group__0__Impl
	rule__Order__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getOrderAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Order__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderAccess().getGroup_1()); }
	(rule__Order__Group_1__0)*
	{ after(grammarAccess.getOrderAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Order__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Order__Group_1__0__Impl
	rule__Order__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getOrderAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Order__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
	{ after(grammarAccess.getOrderAccess().getINTTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceDiagram__TitleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceDiagramAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSequenceDiagramAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDiagram__RootPackageAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceDiagramAccess().getRootPackageRootPackageParserRuleCall_3_0()); }
		ruleRootPackage
		{ after(grammarAccess.getSequenceDiagramAccess().getRootPackageRootPackageParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDiagram__ActorsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceDiagramAccess().getActorsActorParserRuleCall_4_0()); }
		ruleActor
		{ after(grammarAccess.getSequenceDiagramAccess().getActorsActorParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDiagram__BehaviorFragmentsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceDiagramAccess().getBehaviorFragmentsBehaviorFragmentParserRuleCall_5_0()); }
		ruleBehaviorFragment
		{ after(grammarAccess.getSequenceDiagramAccess().getBehaviorFragmentsBehaviorFragmentParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootPackage__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootPackageAccess().getNameFQNParserRuleCall_1_0()); }
		ruleFQN
		{ after(grammarAccess.getRootPackageAccess().getNameFQNParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__DeferredAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getDeferredDefKeyword_0_0()); }
		(
			{ before(grammarAccess.getActorAccess().getDeferredDefKeyword_0_0()); }
			'def'
			{ after(grammarAccess.getActorAccess().getDeferredDefKeyword_0_0()); }
		)
		{ after(grammarAccess.getActorAccess().getDeferredDefKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__NameAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_2_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__TypeMappingAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getTypeMappingActorClassifierMappingParserRuleCall_2_0_1_0()); }
		ruleActorClassifierMapping
		{ after(grammarAccess.getActorAccess().getTypeMappingActorClassifierMappingParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__TypeMappingAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getTypeMappingActorClassifierMappingParserRuleCall_2_1_0_0()); }
		ruleActorClassifierMapping
		{ after(grammarAccess.getActorAccess().getTypeMappingActorClassifierMappingParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__AliasAssignment_2_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getAliasIDTerminalRuleCall_2_1_2_0()); }
		RULE_ID
		{ after(grammarAccess.getActorAccess().getAliasIDTerminalRuleCall_2_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__NameAssignment_2_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getNameSTRINGTerminalRuleCall_2_2_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getActorAccess().getNameSTRINGTerminalRuleCall_2_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__TypeMappingAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getTypeMappingActorClassifierMappingParserRuleCall_2_2_1_0()); }
		ruleActorClassifierMapping
		{ after(grammarAccess.getActorAccess().getTypeMappingActorClassifierMappingParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__AliasAssignment_2_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getAliasIDTerminalRuleCall_2_2_3_0()); }
		RULE_ID
		{ after(grammarAccess.getActorAccess().getAliasIDTerminalRuleCall_2_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__ActorTypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getActorTypeActorTypeEnumRuleCall_3_1_0()); }
		ruleActorType
		{ after(grammarAccess.getActorAccess().getActorTypeActorTypeEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorClassifierMapping__ClassifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorClassifierMappingAccess().getClassifierClassifierCrossReference_1_0()); }
		(
			{ before(grammarAccess.getActorClassifierMappingAccess().getClassifierClassifierFQNParserRuleCall_1_0_1()); }
			ruleFQN
			{ after(grammarAccess.getActorClassifierMappingAccess().getClassifierClassifierFQNParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getActorClassifierMappingAccess().getClassifierClassifierCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragments__FragmentsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorFragmentsAccess().getFragmentsBehaviorFragmentParserRuleCall_0_1_0()); }
		ruleBehaviorFragment
		{ after(grammarAccess.getBehaviorFragmentsAccess().getFragmentsBehaviorFragmentParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragments__FragmentsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorFragmentsAccess().getFragmentsBehaviorFragmentParserRuleCall_1_0()); }
		ruleBehaviorFragment
		{ after(grammarAccess.getBehaviorFragmentsAccess().getFragmentsBehaviorFragmentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__OrderAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageAccess().getOrderOrderParserRuleCall_1_1_0()); }
		ruleOrder
		{ after(grammarAccess.getMessageAccess().getOrderOrderParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__TimeConstraintAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageAccess().getTimeConstraintTimeConstraintParserRuleCall_2_0()); }
		ruleTimeConstraint
		{ after(grammarAccess.getMessageAccess().getTimeConstraintTimeConstraintParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeConstraint__ConstraintsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeConstraintAccess().getConstraintsInnerTimeConstraintParserRuleCall_1_0()); }
		ruleInnerTimeConstraint
		{ after(grammarAccess.getTimeConstraintAccess().getConstraintsInnerTimeConstraintParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerTimeConstraint__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInnerTimeConstraintAccess().getTypeTimeConstraintTypeEnumRuleCall_0_0()); }
		ruleTimeConstraintType
		{ after(grammarAccess.getInnerTimeConstraintAccess().getTypeTimeConstraintTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InnerTimeConstraint__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInnerTimeConstraintAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getInnerTimeConstraintAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardMessage__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardMessageAccess().getTypeMessageTypeEnumRuleCall_0_0()); }
		ruleMessageType
		{ after(grammarAccess.getStandardMessageAccess().getTypeMessageTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardMessage__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardMessageAccess().getNameUnescapedStringParserRuleCall_1_0()); }
		ruleUnescapedString
		{ after(grammarAccess.getStandardMessageAccess().getNameUnescapedStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardMessage__LeftAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardMessageAccess().getLeftActorCrossReference_3_0()); }
		(
			{ before(grammarAccess.getStandardMessageAccess().getLeftActorFQNParserRuleCall_3_0_1()); }
			ruleFQN
			{ after(grammarAccess.getStandardMessageAccess().getLeftActorFQNParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getStandardMessageAccess().getLeftActorCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardMessage__RightAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardMessageAccess().getRightActorCrossReference_5_0()); }
		(
			{ before(grammarAccess.getStandardMessageAccess().getRightActorFQNParserRuleCall_5_0_1()); }
			ruleFQN
			{ after(grammarAccess.getStandardMessageAccess().getRightActorFQNParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getStandardMessageAccess().getRightActorCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResponseMessageAccess().getNameUnescapedStringParserRuleCall_1_0()); }
		ruleUnescapedString
		{ after(grammarAccess.getResponseMessageAccess().getNameUnescapedStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__LeftAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResponseMessageAccess().getLeftActorCrossReference_3_0_0()); }
		(
			{ before(grammarAccess.getResponseMessageAccess().getLeftActorFQNParserRuleCall_3_0_0_1()); }
			ruleFQN
			{ after(grammarAccess.getResponseMessageAccess().getLeftActorFQNParserRuleCall_3_0_0_1()); }
		)
		{ after(grammarAccess.getResponseMessageAccess().getLeftActorCrossReference_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseMessage__RightAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResponseMessageAccess().getRightActorCrossReference_5_0_0()); }
		(
			{ before(grammarAccess.getResponseMessageAccess().getRightActorFQNParserRuleCall_5_0_0_1()); }
			ruleFQN
			{ after(grammarAccess.getResponseMessageAccess().getRightActorFQNParserRuleCall_5_0_0_1()); }
		)
		{ after(grammarAccess.getResponseMessageAccess().getRightActorCrossReference_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFoundMessageAccess().getTypeMessageTypeEnumRuleCall_1_0()); }
		ruleMessageType
		{ after(grammarAccess.getFoundMessageAccess().getTypeMessageTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFoundMessageAccess().getNameUnescapedStringParserRuleCall_2_0()); }
		ruleUnescapedString
		{ after(grammarAccess.getFoundMessageAccess().getNameUnescapedStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__RightAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFoundMessageAccess().getRightActorCrossReference_6_0()); }
		(
			{ before(grammarAccess.getFoundMessageAccess().getRightActorFQNParserRuleCall_6_0_1()); }
			ruleFQN
			{ after(grammarAccess.getFoundMessageAccess().getRightActorFQNParserRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getFoundMessageAccess().getRightActorCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLostMessageAccess().getTypeMessageTypeEnumRuleCall_1_0()); }
		ruleMessageType
		{ after(grammarAccess.getLostMessageAccess().getTypeMessageTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLostMessageAccess().getNameUnescapedStringParserRuleCall_2_0()); }
		ruleUnescapedString
		{ after(grammarAccess.getLostMessageAccess().getNameUnescapedStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LostMessage__LeftAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLostMessageAccess().getLeftActorCrossReference_4_0()); }
		(
			{ before(grammarAccess.getLostMessageAccess().getLeftActorFQNParserRuleCall_4_0_1()); }
			ruleFQN
			{ after(grammarAccess.getLostMessageAccess().getLeftActorFQNParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getLostMessageAccess().getLeftActorCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMessage__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateMessageAccess().getNameUnescapedStringParserRuleCall_1_0()); }
		ruleUnescapedString
		{ after(grammarAccess.getCreateMessageAccess().getNameUnescapedStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMessage__LeftAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateMessageAccess().getLeftActorCrossReference_3_0()); }
		(
			{ before(grammarAccess.getCreateMessageAccess().getLeftActorFQNParserRuleCall_3_0_1()); }
			ruleFQN
			{ after(grammarAccess.getCreateMessageAccess().getLeftActorFQNParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getCreateMessageAccess().getLeftActorCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateMessage__RightAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateMessageAccess().getRightActorCrossReference_5_0()); }
		(
			{ before(grammarAccess.getCreateMessageAccess().getRightActorFQNParserRuleCall_5_0_1()); }
			ruleFQN
			{ after(grammarAccess.getCreateMessageAccess().getRightActorFQNParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getCreateMessageAccess().getRightActorCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionMessage__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDestructionMessageAccess().getNameUnescapedStringParserRuleCall_1_0()); }
		ruleUnescapedString
		{ after(grammarAccess.getDestructionMessageAccess().getNameUnescapedStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionMessage__LeftAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDestructionMessageAccess().getLeftActorCrossReference_3_0()); }
		(
			{ before(grammarAccess.getDestructionMessageAccess().getLeftActorFQNParserRuleCall_3_0_1()); }
			ruleFQN
			{ after(grammarAccess.getDestructionMessageAccess().getLeftActorFQNParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getDestructionMessageAccess().getLeftActorCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionMessage__RightAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDestructionMessageAccess().getRightActorCrossReference_5_0()); }
		(
			{ before(grammarAccess.getDestructionMessageAccess().getRightActorFQNParserRuleCall_5_0_1()); }
			ruleFQN
			{ after(grammarAccess.getDestructionMessageAccess().getRightActorFQNParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getDestructionMessageAccess().getRightActorCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestructionOccurenceSpecification__TargetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDestructionOccurenceSpecificationAccess().getTargetActorCrossReference_1_0()); }
		(
			{ before(grammarAccess.getDestructionOccurenceSpecificationAccess().getTargetActorFQNParserRuleCall_1_0_1()); }
			ruleFQN
			{ after(grammarAccess.getDestructionOccurenceSpecificationAccess().getTargetActorFQNParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getDestructionOccurenceSpecificationAccess().getTargetActorCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__AlternativesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlternativeAccess().getAlternativesBehaviorFragmentsWithConditionParserRuleCall_2_0()); }
		ruleBehaviorFragmentsWithCondition
		{ after(grammarAccess.getAlternativeAccess().getAlternativesBehaviorFragmentsWithConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__OptionalAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptionAccess().getOptionalBehaviorFragmentsWithConditionParserRuleCall_2_0()); }
		ruleBehaviorFragmentsWithCondition
		{ after(grammarAccess.getOptionAccess().getOptionalBehaviorFragmentsWithConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__ParallelsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParallelAccess().getParallelsBehaviorFragmentsParserRuleCall_2_0()); }
		ruleBehaviorFragments
		{ after(grammarAccess.getParallelAccess().getParallelsBehaviorFragmentsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Critical__FragmentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCriticalAccess().getFragmentsBehaviorFragmentParserRuleCall_2_0()); }
		ruleBehaviorFragment
		{ after(grammarAccess.getCriticalAccess().getFragmentsBehaviorFragmentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopAccess().getConditionSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getLoopAccess().getConditionSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__FragmentsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopAccess().getFragmentsBehaviorFragmentParserRuleCall_5_0()); }
		ruleBehaviorFragment
		{ after(grammarAccess.getLoopAccess().getFragmentsBehaviorFragmentParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragmentsWithCondition__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorFragmentsWithConditionAccess().getConditionSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getBehaviorFragmentsWithConditionAccess().getConditionSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragmentsWithCondition__FragmentsAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorFragmentsWithConditionAccess().getFragmentsBehaviorFragmentParserRuleCall_3_0_1_0()); }
		ruleBehaviorFragment
		{ after(grammarAccess.getBehaviorFragmentsWithConditionAccess().getFragmentsBehaviorFragmentParserRuleCall_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorFragmentsWithCondition__FragmentsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorFragmentsWithConditionAccess().getFragmentsBehaviorFragmentParserRuleCall_3_1_0()); }
		ruleBehaviorFragment
		{ after(grammarAccess.getBehaviorFragmentsWithConditionAccess().getFragmentsBehaviorFragmentParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
