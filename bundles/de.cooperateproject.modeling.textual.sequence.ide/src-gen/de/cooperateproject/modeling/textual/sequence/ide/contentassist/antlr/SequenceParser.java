/*
 * generated by Xtext 2.11.0
 */
package de.cooperateproject.modeling.textual.sequence.ide.contentassist.antlr;

import com.google.inject.Inject;
import de.cooperateproject.modeling.textual.sequence.ide.contentassist.antlr.internal.InternalSequenceParser;
import de.cooperateproject.modeling.textual.sequence.services.SequenceGrammarAccess;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class SequenceParser extends AbstractContentAssistParser {

	@Inject
	private SequenceGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalSequenceParser createParser() {
		InternalSequenceParser result = new InternalSequenceParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getActorAccess().getAlternatives_2(), "rule__Actor__Alternatives_2");
					put(grammarAccess.getInteractionFragmentAccess().getAlternatives(), "rule__InteractionFragment__Alternatives");
					put(grammarAccess.getMessageAccess().getAlternatives_0(), "rule__Message__Alternatives_0");
					put(grammarAccess.getResponseMessageAccess().getAlternatives_3(), "rule__ResponseMessage__Alternatives_3");
					put(grammarAccess.getResponseMessageAccess().getAlternatives_5(), "rule__ResponseMessage__Alternatives_5");
					put(grammarAccess.getCombinedFragmentAccess().getAlternatives(), "rule__CombinedFragment__Alternatives");
					put(grammarAccess.getParallelFragmentAccess().getAlternatives(), "rule__ParallelFragment__Alternatives");
					put(grammarAccess.getConditionedFragmentAccess().getAlternatives_3(), "rule__ConditionedFragment__Alternatives_3");
					put(grammarAccess.getMessageTypeAccess().getAlternatives(), "rule__MessageType__Alternatives");
					put(grammarAccess.getActorTypeAccess().getAlternatives(), "rule__ActorType__Alternatives");
					put(grammarAccess.getTimeConstraintTypeAccess().getAlternatives(), "rule__TimeConstraintType__Alternatives");
					put(grammarAccess.getSequenceDiagramAccess().getGroup(), "rule__SequenceDiagram__Group__0");
					put(grammarAccess.getRootPackageAccess().getGroup(), "rule__RootPackage__Group__0");
					put(grammarAccess.getActorAccess().getGroup(), "rule__Actor__Group__0");
					put(grammarAccess.getActorAccess().getGroup_2_0(), "rule__Actor__Group_2_0__0");
					put(grammarAccess.getActorAccess().getGroup_2_1(), "rule__Actor__Group_2_1__0");
					put(grammarAccess.getActorAccess().getGroup_2_2(), "rule__Actor__Group_2_2__0");
					put(grammarAccess.getActorAccess().getGroup_3(), "rule__Actor__Group_3__0");
					put(grammarAccess.getMessageAccess().getGroup(), "rule__Message__Group__0");
					put(grammarAccess.getMessageAccess().getGroup_1(), "rule__Message__Group_1__0");
					put(grammarAccess.getTimeConstraintAccess().getGroup(), "rule__TimeConstraint__Group__0");
					put(grammarAccess.getInnerTimeConstraintAccess().getGroup(), "rule__InnerTimeConstraint__Group__0");
					put(grammarAccess.getStandardMessageAccess().getGroup(), "rule__StandardMessage__Group__0");
					put(grammarAccess.getResponseMessageAccess().getGroup(), "rule__ResponseMessage__Group__0");
					put(grammarAccess.getFoundMessageAccess().getGroup(), "rule__FoundMessage__Group__0");
					put(grammarAccess.getLostMessageAccess().getGroup(), "rule__LostMessage__Group__0");
					put(grammarAccess.getCreateMessageAccess().getGroup(), "rule__CreateMessage__Group__0");
					put(grammarAccess.getDestructionMessageAccess().getGroup(), "rule__DestructionMessage__Group__0");
					put(grammarAccess.getDestructionOccurenceSpecificationAccess().getGroup(), "rule__DestructionOccurenceSpecification__Group__0");
					put(grammarAccess.getAlternativeAccess().getGroup(), "rule__Alternative__Group__0");
					put(grammarAccess.getOptionAccess().getGroup(), "rule__Option__Group__0");
					put(grammarAccess.getParallelAccess().getGroup(), "rule__Parallel__Group__0");
					put(grammarAccess.getCriticalAccess().getGroup(), "rule__Critical__Group__0");
					put(grammarAccess.getLoopAccess().getGroup(), "rule__Loop__Group__0");
					put(grammarAccess.getParallelFragmentAccess().getGroup_0(), "rule__ParallelFragment__Group_0__0");
					put(grammarAccess.getConditionedFragmentAccess().getGroup(), "rule__ConditionedFragment__Group__0");
					put(grammarAccess.getConditionedFragmentAccess().getGroup_3_0(), "rule__ConditionedFragment__Group_3_0__0");
					put(grammarAccess.getFQNAccess().getGroup(), "rule__FQN__Group__0");
					put(grammarAccess.getFQNAccess().getGroup_1(), "rule__FQN__Group_1__0");
					put(grammarAccess.getCommentAccess().getGroup(), "rule__Comment__Group__0");
					put(grammarAccess.getOrderAccess().getGroup(), "rule__Order__Group__0");
					put(grammarAccess.getOrderAccess().getGroup_1(), "rule__Order__Group_1__0");
					put(grammarAccess.getSequenceDiagramAccess().getTitleAssignment_2(), "rule__SequenceDiagram__TitleAssignment_2");
					put(grammarAccess.getSequenceDiagramAccess().getRootPackageAssignment_3(), "rule__SequenceDiagram__RootPackageAssignment_3");
					put(grammarAccess.getRootPackageAccess().getNameAssignment_1(), "rule__RootPackage__NameAssignment_1");
					put(grammarAccess.getRootPackageAccess().getActorsAssignment_2(), "rule__RootPackage__ActorsAssignment_2");
					put(grammarAccess.getRootPackageAccess().getInteractionFragmentsAssignment_3(), "rule__RootPackage__InteractionFragmentsAssignment_3");
					put(grammarAccess.getActorAccess().getDeferredAssignment_1(), "rule__Actor__DeferredAssignment_1");
					put(grammarAccess.getActorAccess().getNameAssignment_2_0_0(), "rule__Actor__NameAssignment_2_0_0");
					put(grammarAccess.getActorAccess().getTypeAssignment_2_0_2(), "rule__Actor__TypeAssignment_2_0_2");
					put(grammarAccess.getActorAccess().getTypeAssignment_2_1_1(), "rule__Actor__TypeAssignment_2_1_1");
					put(grammarAccess.getActorAccess().getAliasAssignment_2_1_3(), "rule__Actor__AliasAssignment_2_1_3");
					put(grammarAccess.getActorAccess().getNameAssignment_2_2_0(), "rule__Actor__NameAssignment_2_2_0");
					put(grammarAccess.getActorAccess().getTypeAssignment_2_2_2(), "rule__Actor__TypeAssignment_2_2_2");
					put(grammarAccess.getActorAccess().getAliasAssignment_2_2_4(), "rule__Actor__AliasAssignment_2_2_4");
					put(grammarAccess.getActorAccess().getActorTypeAssignment_3_1(), "rule__Actor__ActorTypeAssignment_3_1");
					put(grammarAccess.getMessageAccess().getOrderAssignment_1_1(), "rule__Message__OrderAssignment_1_1");
					put(grammarAccess.getMessageAccess().getTimeConstraintAssignment_2(), "rule__Message__TimeConstraintAssignment_2");
					put(grammarAccess.getTimeConstraintAccess().getConstraintsAssignment_1(), "rule__TimeConstraint__ConstraintsAssignment_1");
					put(grammarAccess.getInnerTimeConstraintAccess().getTypeAssignment_0(), "rule__InnerTimeConstraint__TypeAssignment_0");
					put(grammarAccess.getInnerTimeConstraintAccess().getValueAssignment_2(), "rule__InnerTimeConstraint__ValueAssignment_2");
					put(grammarAccess.getStandardMessageAccess().getTypeAssignment_0(), "rule__StandardMessage__TypeAssignment_0");
					put(grammarAccess.getStandardMessageAccess().getNameAssignment_1(), "rule__StandardMessage__NameAssignment_1");
					put(grammarAccess.getStandardMessageAccess().getLeftAssignment_3(), "rule__StandardMessage__LeftAssignment_3");
					put(grammarAccess.getStandardMessageAccess().getRightAssignment_5(), "rule__StandardMessage__RightAssignment_5");
					put(grammarAccess.getResponseMessageAccess().getNameAssignment_1(), "rule__ResponseMessage__NameAssignment_1");
					put(grammarAccess.getResponseMessageAccess().getLeftAssignment_3_0(), "rule__ResponseMessage__LeftAssignment_3_0");
					put(grammarAccess.getResponseMessageAccess().getRightAssignment_5_0(), "rule__ResponseMessage__RightAssignment_5_0");
					put(grammarAccess.getFoundMessageAccess().getTypeAssignment_1(), "rule__FoundMessage__TypeAssignment_1");
					put(grammarAccess.getFoundMessageAccess().getNameAssignment_2(), "rule__FoundMessage__NameAssignment_2");
					put(grammarAccess.getFoundMessageAccess().getRightAssignment_6(), "rule__FoundMessage__RightAssignment_6");
					put(grammarAccess.getLostMessageAccess().getTypeAssignment_1(), "rule__LostMessage__TypeAssignment_1");
					put(grammarAccess.getLostMessageAccess().getNameAssignment_2(), "rule__LostMessage__NameAssignment_2");
					put(grammarAccess.getLostMessageAccess().getLeftAssignment_4(), "rule__LostMessage__LeftAssignment_4");
					put(grammarAccess.getCreateMessageAccess().getNameAssignment_1(), "rule__CreateMessage__NameAssignment_1");
					put(grammarAccess.getCreateMessageAccess().getLeftAssignment_3(), "rule__CreateMessage__LeftAssignment_3");
					put(grammarAccess.getCreateMessageAccess().getRightAssignment_5(), "rule__CreateMessage__RightAssignment_5");
					put(grammarAccess.getDestructionMessageAccess().getNameAssignment_1(), "rule__DestructionMessage__NameAssignment_1");
					put(grammarAccess.getDestructionMessageAccess().getLeftAssignment_3(), "rule__DestructionMessage__LeftAssignment_3");
					put(grammarAccess.getDestructionMessageAccess().getRightAssignment_5(), "rule__DestructionMessage__RightAssignment_5");
					put(grammarAccess.getDestructionOccurenceSpecificationAccess().getNameAssignment_1(), "rule__DestructionOccurenceSpecification__NameAssignment_1");
					put(grammarAccess.getAlternativeAccess().getAlternativesAssignment_2(), "rule__Alternative__AlternativesAssignment_2");
					put(grammarAccess.getOptionAccess().getOptionAssignment_2(), "rule__Option__OptionAssignment_2");
					put(grammarAccess.getParallelAccess().getParallelsAssignment_2(), "rule__Parallel__ParallelsAssignment_2");
					put(grammarAccess.getCriticalAccess().getFragmentsAssignment_2(), "rule__Critical__FragmentsAssignment_2");
					put(grammarAccess.getLoopAccess().getConditionAssignment_2(), "rule__Loop__ConditionAssignment_2");
					put(grammarAccess.getLoopAccess().getFragmentsAssignment_5(), "rule__Loop__FragmentsAssignment_5");
					put(grammarAccess.getParallelFragmentAccess().getFragmentsAssignment_0_1(), "rule__ParallelFragment__FragmentsAssignment_0_1");
					put(grammarAccess.getParallelFragmentAccess().getFragmentsAssignment_1(), "rule__ParallelFragment__FragmentsAssignment_1");
					put(grammarAccess.getConditionedFragmentAccess().getConditionAssignment_1(), "rule__ConditionedFragment__ConditionAssignment_1");
					put(grammarAccess.getConditionedFragmentAccess().getFragmentsAssignment_3_0_1(), "rule__ConditionedFragment__FragmentsAssignment_3_0_1");
					put(grammarAccess.getConditionedFragmentAccess().getFragmentsAssignment_3_1(), "rule__ConditionedFragment__FragmentsAssignment_3_1");
					put(grammarAccess.getCommentAccess().getBodyAssignment_2(), "rule__Comment__BodyAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public SequenceGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(SequenceGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
