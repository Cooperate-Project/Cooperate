/*
 * generated by Xtext 2.10.0
 */
package de.cooperateproject.modeling.textual.usecase

import com.google.inject.Binder
import com.google.inject.name.Names
import de.cooperateproject.modeling.textual.usecase.scoping.UseCaseGlobalScopeProvider
import de.cooperateproject.modeling.textual.usecase.scoping.UseCaseImportedNamespaceAwareLocalScopeProvider
import org.eclipse.xtext.scoping.IGlobalScopeProvider
import org.eclipse.xtext.scoping.IScopeProvider
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider
import org.eclipse.xtext.naming.DefaultDeclarativeQualifiedNameProvider
import org.eclipse.xtext.naming.IQualifiedNameProvider

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
class UsecaseRuntimeModule extends AbstractUsecaseRuntimeModule {
	
	override void configureIScopeProviderDelegate(Binder binder) {
		binder.bind(IScopeProvider).annotatedWith(Names.named(AbstractDeclarativeScopeProvider.NAMED_DELEGATE)).to(UseCaseImportedNamespaceAwareLocalScopeProvider)
	}
	
	override Class<? extends IGlobalScopeProvider> bindIGlobalScopeProvider() {
		return UseCaseGlobalScopeProvider
	}
	
	override Class<? extends IQualifiedNameProvider> bindIQualifiedNameProvider() {
		return DefaultDeclarativeQualifiedNameProvider;
	}
}
