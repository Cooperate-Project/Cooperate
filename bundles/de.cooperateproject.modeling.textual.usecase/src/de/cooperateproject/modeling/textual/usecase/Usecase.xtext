// automatically generated by Xtext
grammar de.cooperateproject.modeling.textual.usecase.Usecase with org.eclipse.xtext.common.Terminals

import "http://www.cooperateproject.de/modeling/language/usecase/Usecase"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

UseCaseDiagram:
	'@start-uc' title = STRING rootPackage=RootPackage '@end-uc'
;

RootPackage:
	'rootElement' name = FQN
	actors += Actor*
	systems += System*
	relationships += Relationship*
;

Actor:
	visibility=Visibility? abstract?='abstract'? 'actor' (name = ID | name = STRING 'as' alias = ID) ('[' type=ActorType ']')?
;

System:
	'system' name = FQN '{' usecases += UseCase* '}'
;

UseCase:
	visibility=Visibility? abstract?='abstract'? 'usecase' (name = ID | name = STRING 'as' alias = ID) ('{' extensionPoints += ExtensionPoint* '}')?
;

ExtensionPoint:
	'extensionpoint' (name = ID | name = STRING 'as' alias = ID)
;

Relationship:
	Association | Generalization | Include | Extend | Comment
;

Association:
	'iac' actor = [Actor|FQN] usecase = [UseCase|FQN] ('[' actorCardinality=Cardinality '|' useCaseCardinality=Cardinality ']')?
;

Generalization:
	specific = [BehavioredClassifier|FQN] 'isA' general = [BehavioredClassifier|FQN]
;

Include:
	includingCase = [UseCase|FQN] 'inc' addition = [UseCase|FQN]
;

Extend:
	extension = [UseCase|FQN] 'ext' extendedCase = [UseCase|FQN] '[' extensionLocation = [ExtensionPoint] ('|' condition=STRING)? ']'
;

Comment:
	commentedElement = [Commentable|FQN] 'note' comment = STRING
;

Cardinality: 
	lowerBound=CardinalityBound ('..' upperBound=CardinalityBound)?
;

CardinalityBound returns ecore::EInt:
	('*') | INT
;

FQN:
	ID ('.' ID)*
;

enum Visibility:
	PUBLIC = '+' 
	| PUBLIC = 'public'
	| PRIVATE = '-' 
	| PRIVATE = 'private'
	| PROTECTED = '#' 
	| PROTECTED = 'protected'
	| PACKAGE = '~'
;

enum ActorType:
	HUMAN = 'human'
	| MACHINE = 'machine'
;