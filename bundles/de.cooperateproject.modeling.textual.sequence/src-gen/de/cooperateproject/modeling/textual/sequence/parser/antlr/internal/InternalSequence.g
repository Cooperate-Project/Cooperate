/*
 * generated by Xtext 2.11.0
 */
grammar InternalSequence;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.cooperateproject.modeling.textual.sequence.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.cooperateproject.modeling.textual.sequence.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cooperateproject.modeling.textual.sequence.services.SequenceGrammarAccess;

}

@parser::members {

 	private SequenceGrammarAccess grammarAccess;

    public InternalSequenceParser(TokenStream input, SequenceGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SequenceDiagram";
   	}

   	@Override
   	protected SequenceGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSequenceDiagram
entryRuleSequenceDiagram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceDiagramRule()); }
	iv_ruleSequenceDiagram=ruleSequenceDiagram
	{ $current=$iv_ruleSequenceDiagram.current; }
	EOF;

// Rule SequenceDiagram
ruleSequenceDiagram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSequenceDiagramAccess().getSequenceDiagramAction_0(),
					$current);
			}
		)
		otherlv_1='@start-seqd'
		{
			newLeafNode(otherlv_1, grammarAccess.getSequenceDiagramAccess().getStartSeqdKeyword_1());
		}
		(
			(
				lv_title_2_0=RULE_STRING
				{
					newLeafNode(lv_title_2_0, grammarAccess.getSequenceDiagramAccess().getTitleSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSequenceDiagramRule());
					}
					setWithLastConsumed(
						$current,
						"title",
						lv_title_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSequenceDiagramAccess().getRootPackageRootPackageParserRuleCall_3_0());
				}
				lv_rootPackage_3_0=ruleRootPackage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSequenceDiagramRule());
					}
					set(
						$current,
						"rootPackage",
						lv_rootPackage_3_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.RootPackage");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSequenceDiagramAccess().getActorsActorParserRuleCall_4_0());
				}
				lv_actors_4_0=ruleActor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSequenceDiagramRule());
					}
					add(
						$current,
						"actors",
						lv_actors_4_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.Actor");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSequenceDiagramAccess().getFragmentsFragmentParserRuleCall_5_0());
				}
				lv_fragments_5_0=ruleFragment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSequenceDiagramRule());
					}
					add(
						$current,
						"fragments",
						lv_fragments_5_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.Fragment");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSequenceDiagramAccess().getFragmentsConstraintParserRuleCall_6_0_0());
					}
					lv_fragments_6_1=ruleConstraint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSequenceDiagramRule());
						}
						add(
							$current,
							"fragments",
							lv_fragments_6_1,
							"de.cooperateproject.modeling.textual.sequence.Sequence.Constraint");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getSequenceDiagramAccess().getFragmentsObservationParserRuleCall_6_0_1());
					}
					lv_fragments_6_2=ruleObservation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSequenceDiagramRule());
						}
						add(
							$current,
							"fragments",
							lv_fragments_6_2,
							"de.cooperateproject.modeling.textual.sequence.Sequence.Observation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='@end-seqd'
		{
			newLeafNode(otherlv_7, grammarAccess.getSequenceDiagramAccess().getEndSeqdKeyword_7());
		}
	)
;

// Entry rule entryRuleRootPackage
entryRuleRootPackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRootPackageRule()); }
	iv_ruleRootPackage=ruleRootPackage
	{ $current=$iv_ruleRootPackage.current; }
	EOF;

// Rule RootPackage
ruleRootPackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rootElement'
		{
			newLeafNode(otherlv_0, grammarAccess.getRootPackageAccess().getRootElementKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRootPackageAccess().getNameFQNParserRuleCall_1_0());
				}
				lv_name_1_0=ruleFQN
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootPackageRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.FQN");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleActor
entryRuleActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActorRule()); }
	iv_ruleActor=ruleActor
	{ $current=$iv_ruleActor.current; }
	EOF;

// Rule Actor
ruleActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_deferred_0_0='def'
				{
					newLeafNode(lv_deferred_0_0, grammarAccess.getActorAccess().getDeferredDefKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActorRule());
					}
					setWithLastConsumed($current, "deferred", true, "def");
				}
			)
		)?
		otherlv_1='act'
		{
			newLeafNode(otherlv_1, grammarAccess.getActorAccess().getActKeyword_1());
		}
		(
			(
				(
					(
						lv_name_2_0=RULE_ID
						{
							newLeafNode(lv_name_2_0, grammarAccess.getActorAccess().getNameIDTerminalRuleCall_2_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActorRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_2_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getActorAccess().getTypeMappingActorClassifierMappingParserRuleCall_2_0_1_0());
						}
						lv_typeMapping_3_0=ruleActorClassifierMapping
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActorRule());
							}
							set(
								$current,
								"typeMapping",
								lv_typeMapping_3_0,
								"de.cooperateproject.modeling.textual.sequence.Sequence.ActorClassifierMapping");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getActorAccess().getTypeMappingActorClassifierMappingParserRuleCall_2_1_0_0());
						}
						lv_typeMapping_4_0=ruleActorClassifierMapping
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActorRule());
							}
							set(
								$current,
								"typeMapping",
								lv_typeMapping_4_0,
								"de.cooperateproject.modeling.textual.sequence.Sequence.ActorClassifierMapping");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5='as'
				{
					newLeafNode(otherlv_5, grammarAccess.getActorAccess().getAsKeyword_2_1_1());
				}
				(
					(
						lv_alias_6_0=RULE_ID
						{
							newLeafNode(lv_alias_6_0, grammarAccess.getActorAccess().getAliasIDTerminalRuleCall_2_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActorRule());
							}
							setWithLastConsumed(
								$current,
								"alias",
								lv_alias_6_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)
			    |
			(
				(
					(
						lv_name_7_0=RULE_STRING
						{
							newLeafNode(lv_name_7_0, grammarAccess.getActorAccess().getNameSTRINGTerminalRuleCall_2_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActorRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_7_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getActorAccess().getTypeMappingActorClassifierMappingParserRuleCall_2_2_1_0());
						}
						lv_typeMapping_8_0=ruleActorClassifierMapping
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActorRule());
							}
							set(
								$current,
								"typeMapping",
								lv_typeMapping_8_0,
								"de.cooperateproject.modeling.textual.sequence.Sequence.ActorClassifierMapping");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_9='as'
				{
					newLeafNode(otherlv_9, grammarAccess.getActorAccess().getAsKeyword_2_2_2());
				}
				(
					(
						lv_alias_10_0=RULE_ID
						{
							newLeafNode(lv_alias_10_0, grammarAccess.getActorAccess().getAliasIDTerminalRuleCall_2_2_3_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActorRule());
							}
							setWithLastConsumed(
								$current,
								"alias",
								lv_alias_10_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)
		)
		(
			otherlv_11='role['
			{
				newLeafNode(otherlv_11, grammarAccess.getActorAccess().getRoleKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActorAccess().getActorTypeActorTypeEnumRuleCall_3_1_0());
					}
					lv_actorType_12_0=ruleActorType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActorRule());
						}
						set(
							$current,
							"actorType",
							lv_actorType_12_0,
							"de.cooperateproject.modeling.textual.sequence.Sequence.ActorType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_13=']'
			{
				newLeafNode(otherlv_13, grammarAccess.getActorAccess().getRightSquareBracketKeyword_3_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getActorAccess().getCommentsInlineCommentParserRuleCall_4_0());
				}
				lv_comments_14_0=ruleInlineComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorRule());
					}
					add(
						$current,
						"comments",
						lv_comments_14_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.InlineComment");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleActorClassifierMapping
entryRuleActorClassifierMapping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActorClassifierMappingRule()); }
	iv_ruleActorClassifierMapping=ruleActorClassifierMapping
	{ $current=$iv_ruleActorClassifierMapping.current; }
	EOF;

// Rule ActorClassifierMapping
ruleActorClassifierMapping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=':'
		{
			newLeafNode(otherlv_0, grammarAccess.getActorClassifierMappingAccess().getColonKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActorClassifierMappingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getActorClassifierMappingAccess().getClassifierClassifierCrossReference_1_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFragment
entryRuleFragment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFragmentRule()); }
	iv_ruleFragment=ruleFragment
	{ $current=$iv_ruleFragment.current; }
	EOF;

// Rule Fragment
ruleFragment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFragmentAccess().getMessageParserRuleCall_0());
		}
		this_Message_0=ruleMessage
		{
			$current = $this_Message_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFragmentAccess().getOccurenceSpecificationParserRuleCall_1());
		}
		this_OccurenceSpecification_1=ruleOccurenceSpecification
		{
			$current = $this_OccurenceSpecification_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFragmentAccess().getCombinedFragmentParserRuleCall_2());
		}
		this_CombinedFragment_2=ruleCombinedFragment
		{
			$current = $this_CombinedFragment_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFragmentAccess().getReferenceParserRuleCall_3());
		}
		this_Reference_3=ruleReference
		{
			$current = $this_Reference_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOneFragment
entryRuleOneFragment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOneFragmentRule()); }
	iv_ruleOneFragment=ruleOneFragment
	{ $current=$iv_ruleOneFragment.current; }
	EOF;

// Rule OneFragment
ruleOneFragment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getOneFragmentAccess().getFragmentsFragmentParserRuleCall_0());
			}
			lv_fragments_0_0=ruleFragment
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getOneFragmentRule());
				}
				add(
					$current,
					"fragments",
					lv_fragments_0_0,
					"de.cooperateproject.modeling.textual.sequence.Sequence.Fragment");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleOneOrMultipleFragments
entryRuleOneOrMultipleFragments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOneOrMultipleFragmentsRule()); }
	iv_ruleOneOrMultipleFragments=ruleOneOrMultipleFragments
	{ $current=$iv_ruleOneOrMultipleFragments.current; }
	EOF;

// Rule OneOrMultipleFragments
ruleOneOrMultipleFragments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getOneOrMultipleFragmentsAccess().getFragmentsFragmentParserRuleCall_0());
			}
			lv_fragments_0_0=ruleFragment
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getOneOrMultipleFragmentsRule());
				}
				add(
					$current,
					"fragments",
					lv_fragments_0_0,
					"de.cooperateproject.modeling.textual.sequence.Sequence.Fragment");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleOrderedFragmentContainer
entryRuleOrderedFragmentContainer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrderedFragmentContainerRule()); }
	iv_ruleOrderedFragmentContainer=ruleOrderedFragmentContainer
	{ $current=$iv_ruleOrderedFragmentContainer.current; }
	EOF;

// Rule OrderedFragmentContainer
ruleOrderedFragmentContainer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='{'
			{
				newLeafNode(otherlv_0, grammarAccess.getOrderedFragmentContainerAccess().getLeftCurlyBracketKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getOrderedFragmentContainerAccess().getOneOrMultipleFragmentsParserRuleCall_0_1());
			}
			this_OneOrMultipleFragments_1=ruleOneOrMultipleFragments
			{
				$current = $this_OneOrMultipleFragments_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2='}'
			{
				newLeafNode(otherlv_2, grammarAccess.getOrderedFragmentContainerAccess().getRightCurlyBracketKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getOrderedFragmentContainerAccess().getOneFragmentParserRuleCall_1());
		}
		this_OneFragment_3=ruleOneFragment
		{
			$current = $this_OneFragment_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionAccess().getConditionUnescapedStringParserRuleCall_1_0());
				}
				lv_condition_1_0=ruleUnescapedString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionRule());
					}
					set(
						$current,
						"condition",
						lv_condition_1_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.UnescapedString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getConditionAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleOrderedFragmentContainerWithCondition
entryRuleOrderedFragmentContainerWithCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrderedFragmentContainerWithConditionRule()); }
	iv_ruleOrderedFragmentContainerWithCondition=ruleOrderedFragmentContainerWithCondition
	{ $current=$iv_ruleOrderedFragmentContainerWithCondition.current; }
	EOF;

// Rule OrderedFragmentContainerWithCondition
ruleOrderedFragmentContainerWithCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOrderedFragmentContainerWithConditionAccess().getConditionConditionParserRuleCall_0_0());
				}
				lv_condition_0_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrderedFragmentContainerWithConditionRule());
					}
					set(
						$current,
						"condition",
						lv_condition_0_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_1='{'
				{
					newLeafNode(otherlv_1, grammarAccess.getOrderedFragmentContainerWithConditionAccess().getLeftCurlyBracketKeyword_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOrderedFragmentContainerWithConditionAccess().getFragmentsFragmentParserRuleCall_1_0_1_0());
						}
						lv_fragments_2_0=ruleFragment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOrderedFragmentContainerWithConditionRule());
							}
							add(
								$current,
								"fragments",
								lv_fragments_2_0,
								"de.cooperateproject.modeling.textual.sequence.Sequence.Fragment");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_3='}'
				{
					newLeafNode(otherlv_3, grammarAccess.getOrderedFragmentContainerWithConditionAccess().getRightCurlyBracketKeyword_1_0_2());
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getOrderedFragmentContainerWithConditionAccess().getFragmentsFragmentParserRuleCall_1_1_0());
					}
					lv_fragments_4_0=ruleFragment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrderedFragmentContainerWithConditionRule());
						}
						add(
							$current,
							"fragments",
							lv_fragments_4_0,
							"de.cooperateproject.modeling.textual.sequence.Sequence.Fragment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleOrderedFragmentContainerWithConditionMandatoryBrackets
entryRuleOrderedFragmentContainerWithConditionMandatoryBrackets returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrderedFragmentContainerWithConditionMandatoryBracketsRule()); }
	iv_ruleOrderedFragmentContainerWithConditionMandatoryBrackets=ruleOrderedFragmentContainerWithConditionMandatoryBrackets
	{ $current=$iv_ruleOrderedFragmentContainerWithConditionMandatoryBrackets.current; }
	EOF;

// Rule OrderedFragmentContainerWithConditionMandatoryBrackets
ruleOrderedFragmentContainerWithConditionMandatoryBrackets returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOrderedFragmentContainerWithConditionMandatoryBracketsAccess().getConditionConditionParserRuleCall_0_0());
				}
				lv_condition_0_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrderedFragmentContainerWithConditionMandatoryBracketsRule());
					}
					set(
						$current,
						"condition",
						lv_condition_0_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrderedFragmentContainerWithConditionMandatoryBracketsAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrderedFragmentContainerWithConditionMandatoryBracketsAccess().getFragmentsFragmentParserRuleCall_2_0());
				}
				lv_fragments_2_0=ruleFragment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrderedFragmentContainerWithConditionMandatoryBracketsRule());
					}
					add(
						$current,
						"fragments",
						lv_fragments_2_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.Fragment");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getOrderedFragmentContainerWithConditionMandatoryBracketsAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleMessage
entryRuleMessage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMessageRule()); }
	iv_ruleMessage=ruleMessage
	{ $current=$iv_ruleMessage.current; }
	EOF;

// Rule Message
ruleMessage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMessageAccess().getStandardMessageParserRuleCall_0_0());
			}
			this_StandardMessage_0=ruleStandardMessage
			{
				$current = $this_StandardMessage_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getMessageAccess().getResponseMessageParserRuleCall_0_1());
			}
			this_ResponseMessage_1=ruleResponseMessage
			{
				$current = $this_ResponseMessage_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getMessageAccess().getFoundMessageParserRuleCall_0_2());
			}
			this_FoundMessage_2=ruleFoundMessage
			{
				$current = $this_FoundMessage_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getMessageAccess().getLostMessageParserRuleCall_0_3());
			}
			this_LostMessage_3=ruleLostMessage
			{
				$current = $this_LostMessage_3.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getMessageAccess().getCreateMessageParserRuleCall_0_4());
			}
			this_CreateMessage_4=ruleCreateMessage
			{
				$current = $this_CreateMessage_4.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getMessageAccess().getDestructionMessageParserRuleCall_0_5());
			}
			this_DestructionMessage_5=ruleDestructionMessage
			{
				$current = $this_DestructionMessage_5.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			otherlv_6='as'
			{
				newLeafNode(otherlv_6, grammarAccess.getMessageAccess().getAsKeyword_1_0());
			}
			(
				(
					lv_alias_7_0=RULE_ID
					{
						newLeafNode(lv_alias_7_0, grammarAccess.getMessageAccess().getAliasIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMessageRule());
						}
						setWithLastConsumed(
							$current,
							"alias",
							lv_alias_7_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMessageAccess().getSendEventImplicitSendOccurenceSpecificationParserRuleCall_2_0());
				}
				lv_sendEvent_8_0=ruleImplicitSendOccurenceSpecification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMessageRule());
					}
					set(
						$current,
						"sendEvent",
						lv_sendEvent_8_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.ImplicitSendOccurenceSpecification");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMessageAccess().getArrivalEventExplicitArrivalOccurenceReferenceParserRuleCall_3_0_0());
					}
					lv_arrivalEvent_9_0=ruleExplicitArrivalOccurenceReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMessageRule());
						}
						set(
							$current,
							"arrivalEvent",
							lv_arrivalEvent_9_0,
							"de.cooperateproject.modeling.textual.sequence.Sequence.ExplicitArrivalOccurenceReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getMessageAccess().getArrivalEventImplicitArrivalOccurenceSpecificationParserRuleCall_3_1_0());
					}
					lv_arrivalEvent_10_0=ruleImplicitArrivalOccurenceSpecification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMessageRule());
						}
						set(
							$current,
							"arrivalEvent",
							lv_arrivalEvent_10_0,
							"de.cooperateproject.modeling.textual.sequence.Sequence.ImplicitArrivalOccurenceSpecification");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleExplicitArrivalOccurenceReference
entryRuleExplicitArrivalOccurenceReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExplicitArrivalOccurenceReferenceRule()); }
	iv_ruleExplicitArrivalOccurenceReference=ruleExplicitArrivalOccurenceReference
	{ $current=$iv_ruleExplicitArrivalOccurenceReference.current; }
	EOF;

// Rule ExplicitArrivalOccurenceReference
ruleExplicitArrivalOccurenceReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='arrives'
		{
			newLeafNode(otherlv_0, grammarAccess.getExplicitArrivalOccurenceReferenceAccess().getArrivesKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getExplicitArrivalOccurenceReferenceAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExplicitArrivalOccurenceReferenceRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getExplicitArrivalOccurenceReferenceAccess().getOccurenceSpecificationExplicitArrivalOccurenceSpecificationCrossReference_2_0());
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getExplicitArrivalOccurenceReferenceAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleExplicitArrivalOccurenceSpecification
entryRuleExplicitArrivalOccurenceSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExplicitArrivalOccurenceSpecificationRule()); }
	iv_ruleExplicitArrivalOccurenceSpecification=ruleExplicitArrivalOccurenceSpecification
	{ $current=$iv_ruleExplicitArrivalOccurenceSpecification.current; }
	EOF;

// Rule ExplicitArrivalOccurenceSpecification
ruleExplicitArrivalOccurenceSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='arrival'
		{
			newLeafNode(otherlv_0, grammarAccess.getExplicitArrivalOccurenceSpecificationAccess().getArrivalKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getExplicitArrivalOccurenceSpecificationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExplicitArrivalOccurenceSpecificationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleStandardMessage
entryRuleStandardMessage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStandardMessageRule()); }
	iv_ruleStandardMessage=ruleStandardMessage
	{ $current=$iv_ruleStandardMessage.current; }
	EOF;

// Rule StandardMessage
ruleStandardMessage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStandardMessageAccess().getTypeMessageTypeEnumRuleCall_0_0());
				}
				lv_type_0_0=ruleMessageType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStandardMessageRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.MessageType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStandardMessageAccess().getNameUnescapedStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleUnescapedString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStandardMessageRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.UnescapedString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getStandardMessageAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStandardMessageRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getStandardMessageAccess().getLeftActorCrossReference_3_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getStandardMessageAccess().getCommaKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStandardMessageRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getStandardMessageAccess().getRightActorCrossReference_5_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getStandardMessageAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleResponseMessage
entryRuleResponseMessage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResponseMessageRule()); }
	iv_ruleResponseMessage=ruleResponseMessage
	{ $current=$iv_ruleResponseMessage.current; }
	EOF;

// Rule ResponseMessage
ruleResponseMessage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='reply'
		{
			newLeafNode(otherlv_0, grammarAccess.getResponseMessageAccess().getReplyKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getResponseMessageAccess().getNameUnescapedStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleUnescapedString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResponseMessageRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.UnescapedString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getResponseMessageAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getResponseMessageRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getResponseMessageAccess().getLeftActorCrossReference_3_0_0());
					}
					ruleFQN
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_4='_'
			{
				newLeafNode(otherlv_4, grammarAccess.getResponseMessageAccess().get_Keyword_3_1());
			}
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getResponseMessageAccess().getCommaKeyword_4());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getResponseMessageRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getResponseMessageAccess().getRightActorCrossReference_5_0_0());
					}
					ruleFQN
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_7='_'
			{
				newLeafNode(otherlv_7, grammarAccess.getResponseMessageAccess().get_Keyword_5_1());
			}
		)
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getResponseMessageAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleFoundMessage
entryRuleFoundMessage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFoundMessageRule()); }
	iv_ruleFoundMessage=ruleFoundMessage
	{ $current=$iv_ruleFoundMessage.current; }
	EOF;

// Rule FoundMessage
ruleFoundMessage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='found'
		{
			newLeafNode(otherlv_0, grammarAccess.getFoundMessageAccess().getFoundKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFoundMessageAccess().getTypeMessageTypeEnumRuleCall_1_0());
				}
				lv_type_1_0=ruleMessageType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFoundMessageRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.MessageType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFoundMessageAccess().getNameUnescapedStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleUnescapedString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFoundMessageRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.UnescapedString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getFoundMessageAccess().getLeftParenthesisKeyword_3());
		}
		otherlv_4='_'
		{
			newLeafNode(otherlv_4, grammarAccess.getFoundMessageAccess().get_Keyword_4());
		}
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getFoundMessageAccess().getCommaKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFoundMessageRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFoundMessageAccess().getRightActorCrossReference_6_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getFoundMessageAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleLostMessage
entryRuleLostMessage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLostMessageRule()); }
	iv_ruleLostMessage=ruleLostMessage
	{ $current=$iv_ruleLostMessage.current; }
	EOF;

// Rule LostMessage
ruleLostMessage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='lost'
		{
			newLeafNode(otherlv_0, grammarAccess.getLostMessageAccess().getLostKeyword_0());
		}
		(
			(
				otherlv_1='reply'
				{
					newLeafNode(otherlv_1, grammarAccess.getLostMessageAccess().getReplyKeyword_1_0_0());
				}
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getLostMessageAccess().getResponseMessageAction_1_0_1(),
							$current);
					}
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getLostMessageAccess().getStandardMessageAction_1_1_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getLostMessageAccess().getTypeMessageTypeEnumRuleCall_1_1_1_0());
						}
						lv_type_4_0=ruleMessageType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLostMessageRule());
							}
							set(
								$current,
								"type",
								lv_type_4_0,
								"de.cooperateproject.modeling.textual.sequence.Sequence.MessageType");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLostMessageAccess().getNameUnescapedStringParserRuleCall_2_0());
				}
				lv_name_5_0=ruleUnescapedString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLostMessageRule());
					}
					set(
						$current,
						"name",
						lv_name_5_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.UnescapedString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='('
		{
			newLeafNode(otherlv_6, grammarAccess.getLostMessageAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLostMessageRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getLostMessageAccess().getLeftActorCrossReference_4_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=','
		{
			newLeafNode(otherlv_8, grammarAccess.getLostMessageAccess().getCommaKeyword_5());
		}
		otherlv_9='_'
		{
			newLeafNode(otherlv_9, grammarAccess.getLostMessageAccess().get_Keyword_6());
		}
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getLostMessageAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleCreateMessage
entryRuleCreateMessage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreateMessageRule()); }
	iv_ruleCreateMessage=ruleCreateMessage
	{ $current=$iv_ruleCreateMessage.current; }
	EOF;

// Rule CreateMessage
ruleCreateMessage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='create'
		{
			newLeafNode(otherlv_0, grammarAccess.getCreateMessageAccess().getCreateKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCreateMessageAccess().getNameUnescapedStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleUnescapedString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCreateMessageRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.UnescapedString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getCreateMessageAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateMessageRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getCreateMessageAccess().getLeftActorCrossReference_3_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getCreateMessageAccess().getCommaKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCreateMessageRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getCreateMessageAccess().getRightActorCrossReference_5_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getCreateMessageAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleDestructionMessage
entryRuleDestructionMessage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDestructionMessageRule()); }
	iv_ruleDestructionMessage=ruleDestructionMessage
	{ $current=$iv_ruleDestructionMessage.current; }
	EOF;

// Rule DestructionMessage
ruleDestructionMessage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='dest'
		{
			newLeafNode(otherlv_0, grammarAccess.getDestructionMessageAccess().getDestKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDestructionMessageAccess().getNameUnescapedStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleUnescapedString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDestructionMessageRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.UnescapedString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getDestructionMessageAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDestructionMessageRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDestructionMessageAccess().getLeftActorCrossReference_3_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getDestructionMessageAccess().getCommaKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDestructionMessageRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDestructionMessageAccess().getRightActorCrossReference_5_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getDestructionMessageAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleOccurenceSpecification
entryRuleOccurenceSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOccurenceSpecificationRule()); }
	iv_ruleOccurenceSpecification=ruleOccurenceSpecification
	{ $current=$iv_ruleOccurenceSpecification.current; }
	EOF;

// Rule OccurenceSpecification
ruleOccurenceSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOccurenceSpecificationAccess().getDestructionOccurenceSpecificationParserRuleCall_0());
		}
		this_DestructionOccurenceSpecification_0=ruleDestructionOccurenceSpecification
		{
			$current = $this_DestructionOccurenceSpecification_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOccurenceSpecificationAccess().getExplicitArrivalOccurenceSpecificationParserRuleCall_1());
		}
		this_ExplicitArrivalOccurenceSpecification_1=ruleExplicitArrivalOccurenceSpecification
		{
			$current = $this_ExplicitArrivalOccurenceSpecification_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDestructionOccurenceSpecification
entryRuleDestructionOccurenceSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDestructionOccurenceSpecificationRule()); }
	iv_ruleDestructionOccurenceSpecification=ruleDestructionOccurenceSpecification
	{ $current=$iv_ruleDestructionOccurenceSpecification.current; }
	EOF;

// Rule DestructionOccurenceSpecification
ruleDestructionOccurenceSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='dest'
		{
			newLeafNode(otherlv_0, grammarAccess.getDestructionOccurenceSpecificationAccess().getDestKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDestructionOccurenceSpecificationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDestructionOccurenceSpecificationAccess().getTargetActorCrossReference_1_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCombinedFragment
entryRuleCombinedFragment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCombinedFragmentRule()); }
	iv_ruleCombinedFragment=ruleCombinedFragment
	{ $current=$iv_ruleCombinedFragment.current; }
	EOF;

// Rule CombinedFragment
ruleCombinedFragment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCombinedFragmentAccess().getMultipleRegionContainerParserRuleCall_0());
		}
		this_MultipleRegionContainer_0=ruleMultipleRegionContainer
		{
			$current = $this_MultipleRegionContainer_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCombinedFragmentAccess().getSingleRegionContainerParserRuleCall_1());
		}
		this_SingleRegionContainer_1=ruleSingleRegionContainer
		{
			$current = $this_SingleRegionContainer_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSingleRegionContainer
entryRuleSingleRegionContainer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleRegionContainerRule()); }
	iv_ruleSingleRegionContainer=ruleSingleRegionContainer
	{ $current=$iv_ruleSingleRegionContainer.current; }
	EOF;

// Rule SingleRegionContainer
ruleSingleRegionContainer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSingleRegionContainerAccess().getLoopParserRuleCall_0());
		}
		this_Loop_0=ruleLoop
		{
			$current = $this_Loop_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingleRegionContainerAccess().getOptionParserRuleCall_1());
		}
		this_Option_1=ruleOption
		{
			$current = $this_Option_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingleRegionContainerAccess().getCriticalParserRuleCall_2());
		}
		this_Critical_2=ruleCritical
		{
			$current = $this_Critical_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMultipleRegionContainer
entryRuleMultipleRegionContainer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultipleRegionContainerRule()); }
	iv_ruleMultipleRegionContainer=ruleMultipleRegionContainer
	{ $current=$iv_ruleMultipleRegionContainer.current; }
	EOF;

// Rule MultipleRegionContainer
ruleMultipleRegionContainer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultipleRegionContainerAccess().getParallelParserRuleCall_0());
		}
		this_Parallel_0=ruleParallel
		{
			$current = $this_Parallel_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMultipleRegionContainerAccess().getAlternativeParserRuleCall_1());
		}
		this_Alternative_1=ruleAlternative
		{
			$current = $this_Alternative_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParallel
entryRuleParallel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParallelRule()); }
	iv_ruleParallel=ruleParallel
	{ $current=$iv_ruleParallel.current; }
	EOF;

// Rule Parallel
ruleParallel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='par'
		{
			newLeafNode(otherlv_0, grammarAccess.getParallelAccess().getParKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getParallelAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParallelAccess().getRegionsOrderedFragmentContainerParserRuleCall_2_0());
				}
				lv_regions_2_0=ruleOrderedFragmentContainer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParallelRule());
					}
					add(
						$current,
						"regions",
						lv_regions_2_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.OrderedFragmentContainer");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getParallelAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleAlternative
entryRuleAlternative returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlternativeRule()); }
	iv_ruleAlternative=ruleAlternative
	{ $current=$iv_ruleAlternative.current; }
	EOF;

// Rule Alternative
ruleAlternative returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='alt'
		{
			newLeafNode(otherlv_0, grammarAccess.getAlternativeAccess().getAltKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAlternativeAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAlternativeAccess().getRegionsOrderedFragmentContainerWithConditionParserRuleCall_2_0());
				}
				lv_regions_2_0=ruleOrderedFragmentContainerWithCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlternativeRule());
					}
					add(
						$current,
						"regions",
						lv_regions_2_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.OrderedFragmentContainerWithCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getAlternativeAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleLoop
entryRuleLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopRule()); }
	iv_ruleLoop=ruleLoop
	{ $current=$iv_ruleLoop.current; }
	EOF;

// Rule Loop
ruleLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='loop'
		{
			newLeafNode(otherlv_0, grammarAccess.getLoopAccess().getLoopKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopAccess().getRegionOrderedFragmentContainerWithConditionMandatoryBracketsParserRuleCall_1_0());
				}
				lv_region_1_0=ruleOrderedFragmentContainerWithConditionMandatoryBrackets
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopRule());
					}
					set(
						$current,
						"region",
						lv_region_1_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.OrderedFragmentContainerWithConditionMandatoryBrackets");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOption
entryRuleOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionRule()); }
	iv_ruleOption=ruleOption
	{ $current=$iv_ruleOption.current; }
	EOF;

// Rule Option
ruleOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='opt'
		{
			newLeafNode(otherlv_0, grammarAccess.getOptionAccess().getOptKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOptionAccess().getRegionOrderedFragmentContainerWithConditionMandatoryBracketsParserRuleCall_1_0());
				}
				lv_region_1_0=ruleOrderedFragmentContainerWithConditionMandatoryBrackets
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOptionRule());
					}
					set(
						$current,
						"region",
						lv_region_1_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.OrderedFragmentContainerWithConditionMandatoryBrackets");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCritical
entryRuleCritical returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCriticalRule()); }
	iv_ruleCritical=ruleCritical
	{ $current=$iv_ruleCritical.current; }
	EOF;

// Rule Critical
ruleCritical returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='critical'
		{
			newLeafNode(otherlv_0, grammarAccess.getCriticalAccess().getCriticalKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCriticalAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCriticalAccess().getRegionOneOrMultipleFragmentsParserRuleCall_2_0());
				}
				lv_region_2_0=ruleOneOrMultipleFragments
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCriticalRule());
					}
					set(
						$current,
						"region",
						lv_region_2_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.OneOrMultipleFragments");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getCriticalAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	iv_ruleReference=ruleReference
	{ $current=$iv_ruleReference.current; }
	EOF;

// Rule Reference
ruleReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ref'
		{
			newLeafNode(otherlv_0, grammarAccess.getReferenceAccess().getRefKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getReferenceAccess().getReferenceInteractionCrossReference_1_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='as'
			{
				newLeafNode(otherlv_2, grammarAccess.getReferenceAccess().getAsKeyword_2_0());
			}
			(
				(
					lv_alias_3_0=RULE_ID
					{
						newLeafNode(lv_alias_3_0, grammarAccess.getReferenceAccess().getAliasIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getReferenceRule());
						}
						setWithLastConsumed(
							$current,
							"alias",
							lv_alias_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	iv_ruleConstraint=ruleConstraint
	{ $current=$iv_ruleConstraint.current; }
	EOF;

// Rule Constraint
ruleConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='cstr'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstraintAccess().getCstrKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getConstraintAccess().getTimeConstraintParserRuleCall_1_0());
			}
			this_TimeConstraint_1=ruleTimeConstraint
			{
				$current = $this_TimeConstraint_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getConstraintAccess().getDurationConstraintParserRuleCall_1_1());
			}
			this_DurationConstraint_2=ruleDurationConstraint
			{
				$current = $this_DurationConstraint_2.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTimeConstraint
entryRuleTimeConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeConstraintRule()); }
	iv_ruleTimeConstraint=ruleTimeConstraint
	{ $current=$iv_ruleTimeConstraint.current; }
	EOF;

// Rule TimeConstraint
ruleTimeConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getTimeConstraintAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeConstraintAccess().getEventPointInTimeSelectorParserRuleCall_1_0());
				}
				lv_event_1_0=rulePointInTimeSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeConstraintRule());
					}
					set(
						$current,
						"event",
						lv_event_1_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.PointInTimeSelector");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getTimeConstraintAccess().getRightParenthesisKeyword_2());
		}
		otherlv_3='t'
		{
			newLeafNode(otherlv_3, grammarAccess.getTimeConstraintAccess().getTKeyword_3());
		}
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getTimeConstraintAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeConstraintAccess().getTimeUnescapedStringParserRuleCall_5_0());
				}
				lv_time_5_0=ruleUnescapedString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeConstraintRule());
					}
					set(
						$current,
						"time",
						lv_time_5_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.UnescapedString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getTimeConstraintAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDurationConstraint
entryRuleDurationConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDurationConstraintRule()); }
	iv_ruleDurationConstraint=ruleDurationConstraint
	{ $current=$iv_ruleDurationConstraint.current; }
	EOF;

// Rule DurationConstraint
ruleDurationConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getDurationConstraintAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDurationConstraintAccess().getIntervalTimeIntervalSelectorParserRuleCall_1_0());
				}
				lv_interval_1_0=ruleTimeIntervalSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDurationConstraintRule());
					}
					set(
						$current,
						"interval",
						lv_interval_1_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.TimeIntervalSelector");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getDurationConstraintAccess().getRightParenthesisKeyword_2());
		}
		otherlv_3='d'
		{
			newLeafNode(otherlv_3, grammarAccess.getDurationConstraintAccess().getDKeyword_3());
		}
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getDurationConstraintAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDurationConstraintAccess().getDurationUnescapedStringParserRuleCall_5_0());
				}
				lv_duration_5_0=ruleUnescapedString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDurationConstraintRule());
					}
					set(
						$current,
						"duration",
						lv_duration_5_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.UnescapedString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getDurationConstraintAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleObservation
entryRuleObservation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObservationRule()); }
	iv_ruleObservation=ruleObservation
	{ $current=$iv_ruleObservation.current; }
	EOF;

// Rule Observation
ruleObservation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='obs'
		{
			newLeafNode(otherlv_0, grammarAccess.getObservationAccess().getObsKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getObservationAccess().getTimeObservationParserRuleCall_1_0());
			}
			this_TimeObservation_1=ruleTimeObservation
			{
				$current = $this_TimeObservation_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getObservationAccess().getDurationObservationParserRuleCall_1_1());
			}
			this_DurationObservation_2=ruleDurationObservation
			{
				$current = $this_DurationObservation_2.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTimeObservation
entryRuleTimeObservation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeObservationRule()); }
	iv_ruleTimeObservation=ruleTimeObservation
	{ $current=$iv_ruleTimeObservation.current; }
	EOF;

// Rule TimeObservation
ruleTimeObservation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getTimeObservationAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeObservationAccess().getEventPointInTimeSelectorParserRuleCall_1_0());
				}
				lv_event_1_0=rulePointInTimeSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeObservationRule());
					}
					set(
						$current,
						"event",
						lv_event_1_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.PointInTimeSelector");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getTimeObservationAccess().getRightParenthesisKeyword_2());
		}
		otherlv_3='t'
		{
			newLeafNode(otherlv_3, grammarAccess.getTimeObservationAccess().getTKeyword_3());
		}
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getTimeObservationAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeObservationAccess().getTimeUnescapedStringParserRuleCall_5_0());
				}
				lv_time_5_0=ruleUnescapedString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeObservationRule());
					}
					set(
						$current,
						"time",
						lv_time_5_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.UnescapedString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getTimeObservationAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDurationObservation
entryRuleDurationObservation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDurationObservationRule()); }
	iv_ruleDurationObservation=ruleDurationObservation
	{ $current=$iv_ruleDurationObservation.current; }
	EOF;

// Rule DurationObservation
ruleDurationObservation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getDurationObservationAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDurationObservationAccess().getIntervalTimeIntervalSelectorParserRuleCall_1_0());
				}
				lv_interval_1_0=ruleTimeIntervalSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDurationObservationRule());
					}
					set(
						$current,
						"interval",
						lv_interval_1_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.TimeIntervalSelector");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getDurationObservationAccess().getRightParenthesisKeyword_2());
		}
		otherlv_3='d'
		{
			newLeafNode(otherlv_3, grammarAccess.getDurationObservationAccess().getDKeyword_3());
		}
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getDurationObservationAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDurationObservationAccess().getDurationUnescapedStringParserRuleCall_5_0());
				}
				lv_duration_5_0=ruleUnescapedString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDurationObservationRule());
					}
					set(
						$current,
						"duration",
						lv_duration_5_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.UnescapedString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getDurationObservationAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRulePointInTimeSelector
entryRulePointInTimeSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointInTimeSelectorRule()); }
	iv_rulePointInTimeSelector=rulePointInTimeSelector
	{ $current=$iv_rulePointInTimeSelector.current; }
	EOF;

// Rule PointInTimeSelector
rulePointInTimeSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPointInTimeSelectorRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getPointInTimeSelectorAccess().getPointInTimeAliasedPointInTimeCrossReference_0());
			}
			ruleFQN
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTimeIntervalSelector
entryRuleTimeIntervalSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeIntervalSelectorRule()); }
	iv_ruleTimeIntervalSelector=ruleTimeIntervalSelector
	{ $current=$iv_ruleTimeIntervalSelector.current; }
	EOF;

// Rule TimeIntervalSelector
ruleTimeIntervalSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTimeIntervalSelectorAccess().getBiPointInTimeTimeIntervalSelectorParserRuleCall_0());
		}
		this_BiPointInTimeTimeIntervalSelector_0=ruleBiPointInTimeTimeIntervalSelector
		{
			$current = $this_BiPointInTimeTimeIntervalSelector_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTimeIntervalSelectorAccess().getFragmentTimeIntervalSelectorParserRuleCall_1());
		}
		this_FragmentTimeIntervalSelector_1=ruleFragmentTimeIntervalSelector
		{
			$current = $this_FragmentTimeIntervalSelector_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBiPointInTimeTimeIntervalSelector
entryRuleBiPointInTimeTimeIntervalSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBiPointInTimeTimeIntervalSelectorRule()); }
	iv_ruleBiPointInTimeTimeIntervalSelector=ruleBiPointInTimeTimeIntervalSelector
	{ $current=$iv_ruleBiPointInTimeTimeIntervalSelector.current; }
	EOF;

// Rule BiPointInTimeTimeIntervalSelector
ruleBiPointInTimeTimeIntervalSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBiPointInTimeTimeIntervalSelectorAccess().getStartPointInTimeSelectorParserRuleCall_0_0());
				}
				lv_start_0_0=rulePointInTimeSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBiPointInTimeTimeIntervalSelectorRule());
					}
					set(
						$current,
						"start",
						lv_start_0_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.PointInTimeSelector");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getBiPointInTimeTimeIntervalSelectorAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBiPointInTimeTimeIntervalSelectorAccess().getEndPointInTimeSelectorParserRuleCall_2_0());
				}
				lv_end_2_0=rulePointInTimeSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBiPointInTimeTimeIntervalSelectorRule());
					}
					set(
						$current,
						"end",
						lv_end_2_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.PointInTimeSelector");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFragmentTimeIntervalSelector
entryRuleFragmentTimeIntervalSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFragmentTimeIntervalSelectorRule()); }
	iv_ruleFragmentTimeIntervalSelector=ruleFragmentTimeIntervalSelector
	{ $current=$iv_ruleFragmentTimeIntervalSelector.current; }
	EOF;

// Rule FragmentTimeIntervalSelector
ruleFragmentTimeIntervalSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFragmentTimeIntervalSelectorRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getFragmentTimeIntervalSelectorAccess().getNonInstantaneousFragmentNonInstantaneousFragmentCrossReference_0());
			}
			ruleFQN
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleImplicitSendOccurenceSpecification
entryRuleImplicitSendOccurenceSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplicitSendOccurenceSpecificationRule()); }
	iv_ruleImplicitSendOccurenceSpecification=ruleImplicitSendOccurenceSpecification
	{ $current=$iv_ruleImplicitSendOccurenceSpecification.current; }
	EOF;

// Rule ImplicitSendOccurenceSpecification
ruleImplicitSendOccurenceSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			$current = forceCreateModelElement(
				grammarAccess.getImplicitSendOccurenceSpecificationAccess().getImplicitSendOccurenceSpecificationAction(),
				$current);
		}
	)
;

// Entry rule entryRuleImplicitArrivalOccurenceSpecification
entryRuleImplicitArrivalOccurenceSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplicitArrivalOccurenceSpecificationRule()); }
	iv_ruleImplicitArrivalOccurenceSpecification=ruleImplicitArrivalOccurenceSpecification
	{ $current=$iv_ruleImplicitArrivalOccurenceSpecification.current; }
	EOF;

// Rule ImplicitArrivalOccurenceSpecification
ruleImplicitArrivalOccurenceSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			$current = forceCreateModelElement(
				grammarAccess.getImplicitArrivalOccurenceSpecificationAccess().getImplicitArrivalOccurenceSpecificationAction(),
				$current);
		}
	)
;

// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFQNRule()); }
	iv_ruleFQN=ruleFQN
	{ $current=$iv_ruleFQN.current.getText(); }
	EOF;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getFQNAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFQNAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleInlineComment
entryRuleInlineComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInlineCommentRule()); }
	iv_ruleInlineComment=ruleInlineComment
	{ $current=$iv_ruleInlineComment.current; }
	EOF;

// Rule InlineComment
ruleInlineComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='note'
		{
			newLeafNode(otherlv_0, grammarAccess.getInlineCommentAccess().getNoteKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getInlineCommentAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInlineCommentAccess().getBodyCommentBodyParserRuleCall_2_0());
				}
				lv_body_2_0=ruleCommentBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInlineCommentRule());
					}
					set(
						$current,
						"body",
						lv_body_2_0,
						"de.cooperateproject.modeling.textual.sequence.Sequence.CommentBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getInlineCommentAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleCommentBody
entryRuleCommentBody returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCommentBodyRule()); }
	iv_ruleCommentBody=ruleCommentBody
	{ $current=$iv_ruleCommentBody.current.getText(); }
	EOF;

// Rule CommentBody
ruleCommentBody returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getCommentBodyAccess().getSTRINGTerminalRuleCall());
	}
;

// Entry rule entryRuleUnescapedString
entryRuleUnescapedString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnescapedStringRule()); }
	iv_ruleUnescapedString=ruleUnescapedString
	{ $current=$iv_ruleUnescapedString.current.getText(); }
	EOF;

// Rule UnescapedString
ruleUnescapedString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getUnescapedStringAccess().getIDTerminalRuleCall_0());
		}
		    |
		this_STRING_1=RULE_STRING
		{
			$current.merge(this_STRING_1);
		}
		{
			newLeafNode(this_STRING_1, grammarAccess.getUnescapedStringAccess().getSTRINGTerminalRuleCall_1());
		}
	)
;

// Rule MessageType
ruleMessageType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='sync'
			{
				$current = grammarAccess.getMessageTypeAccess().getSYNCEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMessageTypeAccess().getSYNCEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='async'
			{
				$current = grammarAccess.getMessageTypeAccess().getASYNCEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMessageTypeAccess().getASYNCEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ActorType
ruleActorType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='human'
			{
				$current = grammarAccess.getActorTypeAccess().getHUMANEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getActorTypeAccess().getHUMANEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='machine'
			{
				$current = grammarAccess.getActorTypeAccess().getMACHINEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getActorTypeAccess().getMACHINEEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
