/*
 * generated by Xtext 2.11.0
 */
package de.cooperateproject.modeling.textual.sequence.formatting2;

import com.google.inject.Inject;
import de.cooperateproject.modeling.textual.sequence.sequence.Actor;
import de.cooperateproject.modeling.textual.sequence.sequence.InteractionFragment;
import de.cooperateproject.modeling.textual.sequence.sequence.RootPackage;
import de.cooperateproject.modeling.textual.sequence.sequence.SequenceDiagram;
import de.cooperateproject.modeling.textual.sequence.services.SequenceGrammarAccess;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;

class SequenceFormatter extends AbstractFormatter2 {
	
	@Inject extension SequenceGrammarAccess

	def dispatch void format(SequenceDiagram sequencediagram, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		format(sequencediagram.getRootPackage(), document);
	}

	def dispatch void format(RootPackage rootpackage, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Actor actors : rootpackage.getActors()) {
			format(actors, document);
		}
		for (InteractionFragment interactionFragments : rootpackage.getInteractionFragments()) {
			format(interactionFragments, document);
		}
	}
}
